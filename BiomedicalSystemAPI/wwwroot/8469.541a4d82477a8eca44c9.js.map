{"version":3,"mappings":"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","names":["Y","queryElevation","c","t","se","E","n","a","le","oe","ne","on","projectIfRequired","constructor","super","e","this","min","contains","elevationAt","y","i","l","o","w","q","ae","remove","pixelData","sample","safeWidth","queryAll","ignoreInvisibleLayers","filter","visible","slice","length","s","x","fromGeometry","returnSampleInfo","$","R","query","r","_queryAllContinue","geometry","export","sampleInfo","type","spatialReference","signal","load","_createGeometryDescriptor","_selectTiles","_populateElevationTiles","_sampleGeometryWithElevation","_createQueryResult","createSampler","_createSampler","createSamplerAll","_createSamplerAllContinue","tileInfo","equals","h","source","dest","p","_","elevationTiles","layer","options","noDataValue","pop","samplers","map","m","extent","concat","coordinates","demResolution","push","clone","forEach","z","project","outSpatialReference","_extractSampleInfo","tile","elevationTile","wkid","_preselectOutsideLayerExtent","_selectTilesClosestResolution","_selectTilesFinestContiguous","_selectTilesAuto","fullExtent","T","outsideExtentTile","xmin","xmax","ymin","ymax","_findNearestDemResolutionLODIndex","selectTilesAtLOD","lods","Math","abs","resolution","minDemResolution","_selectTilesFinestContiguousAt","tilemapCache","getTilesToFetch","Promise","all","fetchAvailability","level","row","col","allElevationTilesFetched","clearElevationTiles","cache","uid","id","get","fetchTile","put","populateElevationTiles","_selectTilesAutoFinest","_reduceTilesForMaximumRequests","_selectTilesAutoPrefetchUpsample","f","fetchAvailabilityUpsample","ok","error","remapTiles","forEachTileToFetch","maximumAutoTileRequests","upsampleTile","lodAt","_exporter","_cloneCoordinate","points","hasZ","hasM","spatiaReference","paths","u","g","tileAt","some","candidateTiles","fetchedCandidates","Set","intersection","maskExtents","_maximumLodForRequests","_selectCandidateTilesCoveringExtentAt","size","ceil","width","height","clear","add","_uniqueNonOverlappingTiles","has","sort","d","updateTileInfo","_tileIsMasked","findIndex"],"sources":["./node_modules/@arcgis/core/layers/support/ElevationSampler.js","./node_modules/@arcgis/core/layers/support/ElevationTile.js","./node_modules/@arcgis/core/layers/support/ElevationQuery.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import\"../../core/has.js\";import e from\"../../core/Logger.js\";import{isNone as t,unwrapOr as n}from\"../../core/maybe.js\";import{getMetersPerUnitForSR as s}from\"../../core/unitUtils.js\";import{toExtent as i,create as o}from\"../../geometry/support/aaBoundingRect.js\";import{extentContainsPoint as r}from\"../../geometry/support/contains.js\";import{project as a}from\"../../geometry/support/webMercatorUtils.js\";import l from\"../../geometry/Point.js\";const c=e.getLogger(\"esri.layers.support.ElevationSampler\");class m{queryElevation(e){return h(e.clone(),this)}on(){return g}projectIfRequired(e,t){return f(e,t)}}class p extends m{constructor(e,t,n){super(),this.tile=e,this.noDataValue=n,this.extent=i(e.tile.extent,t.spatialReference);const o=s(t.spatialReference),r=t.lodAt(e.tile.level).resolution*o;this.demResolution={min:r,max:r}}get spatialReference(){return this.extent.spatialReference}contains(e){const t=this.projectIfRequired(e,this.spatialReference);return r(this.extent,t)}elevationAt(e){const n=this.projectIfRequired(e,this.spatialReference);if(t(n))return null;if(!this.contains(e)){const t=this.extent,n=`${t.xmin}, ${t.ymin}, ${t.xmax}, ${t.ymax}`;return c.warn(\"#elevationAt()\",`Point used to sample elevation (${e.x}, ${e.y}) is outside of the sampler extent (${n})`),this.noDataValue}return this.tile.sample(n.x,n.y)}}class u extends m{constructor(e,t,n){let s;super(),\"number\"==typeof t?(this.noDataValue=t,s=null):(s=t,this.noDataValue=n),this.samplers=s?e.map((e=>new p(e,s,this.noDataValue))):e;const r=this.samplers[0];if(r){this.extent=r.extent.clone();const{min:e,max:t}=r.demResolution;this.demResolution={min:e,max:t};for(let n=1;n<this.samplers.length;n++){const e=this.samplers[n];this.extent.union(e.extent),this.demResolution.min=Math.min(this.demResolution.min,e.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,e.demResolution.max)}}else this.extent=i(o(),s.spatialReference),this.demResolution={min:0,max:0}}get spatialReference(){return this.extent.spatialReference}elevationAt(e){const t=this.projectIfRequired(e,this.spatialReference);if(!t)return null;for(const n of this.samplers)if(n.contains(t))return n.elevationAt(t);return c.warn(\"#elevationAt()\",`Point used to sample elevation (${e.x}, ${e.y}) is outside of the sampler`),this.noDataValue}}function h(e,t){const n=f(e,t.spatialReference);if(!n)return null;switch(e.type){case\"point\":x(e,n,t);break;case\"polyline\":R(e,n,t);break;case\"multipoint\":d(e,n,t)}return e}function f(e,n){if(t(e))return null;const s=e.spatialReference;if(s.equals(n))return e;const i=a(e,n);return i||c.error(`Cannot project geometry spatial reference (wkid:${s.wkid}) to elevation sampler spatial reference (wkid:${n.wkid})`),i}function x(e,t,s){e.z=n(s.elevationAt(t),0)}function R(e,t,s){y.spatialReference=t.spatialReference;const i=e.hasM&&!e.hasZ;for(let o=0;o<e.paths.length;o++){const r=e.paths[o],a=t.paths[o];for(let e=0;e<r.length;e++){const t=r[e],o=a[e];y.x=o[0],y.y=o[1],i&&(t[3]=t[2]),t[2]=n(s.elevationAt(y),0)}}e.hasZ=!0}function d(e,t,s){y.spatialReference=t.spatialReference;const i=e.hasM&&!e.hasZ;for(let o=0;o<e.points.length;o++){const r=e.points[o],a=t.points[o];y.x=a[0],y.y=a[1],i&&(r[3]=r[2]),r[2]=n(s.elevationAt(y),0)}e.hasZ=!0}const y=new l,g={remove(){}};export{m as ElevationSamplerBase,u as MultiTileElevationSampler,p as TileElevationSampler,h as updateGeometryElevation};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{isSome as t,isNone as a}from\"../../core/maybe.js\";class e{constructor(a,e=null){if(this.tile=a,t(e)){const t=a.extent;this.samplerData={pixelData:e.values,width:e.width,height:e.height,safeWidth:.99999999*(e.width-1),noDataValue:e.noDataValue,dx:(e.width-1)/(t[2]-t[0]),dy:(e.width-1)/(t[3]-t[1]),x0:t[0],y1:t[3]}}}sample(t,e){if(a(this.samplerData))return;const{safeWidth:s,width:h,pixelData:l,noDataValue:o,dx:r,dy:n,y1:d,x0:u}=this.samplerData,f=i(n*(d-e),0,s),c=i(r*(t-u),0,s),p=Math.floor(f),x=Math.floor(c),D=p*h+x,m=D+h,w=l[D],y=l[m],V=l[D+1],g=l[m+1];if(w!==o&&y!==o&&V!==o&&g!==o){const t=c-x,a=w+(V-w)*t;return a+(y+(g-y)*t-a)*(f-p)}}}function i(t,a,e){return t<a?a:t>e?e:t}export{e as ElevationTile,e as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{result as e}from\"../../core/asyncUtils.js\";import t from\"../../core/Error.js\";import{isNone as i,isSome as o}from\"../../core/maybe.js\";import{whenOrAbort as s,throwIfAbortError as l,eachAlways as n}from\"../../core/promiseUtils.js\";import{getMetersPerUnitForSR as a}from\"../../core/unitUtils.js\";import r from\"../../geometry/Multipoint.js\";import c from\"../../geometry/Point.js\";import u from\"../../geometry/Polyline.js\";import{initializeProjection as h,project as p}from\"../../geometry/projection.js\";import{fromExtent as m,create as f,contains as d}from\"../../geometry/support/aaBoundingRect.js\";import{MultiTileElevationSampler as y}from\"./ElevationSampler.js\";import{ElevationTile as T}from\"./ElevationTile.js\";class v{async queryAll(e,i,o){if(!(e=o&&o.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const s=x.fromGeometry(i);let l=!1;o&&o.returnSampleInfo||(l=!0);const n={...R,...o,returnSampleInfo:!0},a=await this.query(e[e.length-1],s,n),r=await this._queryAllContinue(e,a,n);return r.geometry=r.geometry.export(),l&&delete r.sampleInfo,r}async query(e,i,o){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||!(i instanceof x)&&\"point\"!==i.type&&\"multipoint\"!==i.type&&\"polyline\"!==i.type)throw new t(\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const s={...R,...o},l=new w(e,i.spatialReference,s),n=s.signal;return await e.load({signal:n}),await this._createGeometryDescriptor(l,i,n),await this._selectTiles(l,n),await this._populateElevationTiles(l,n),this._sampleGeometryWithElevation(l),this._createQueryResult(l,n)}async createSampler(e,i,o){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const s={...R,...o};return this._createSampler(e,i,s)}async createSamplerAll(e,i,o){if(!(e=o&&o.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const s={...R,...o,returnSampleInfo:!0},l=await this._createSampler(e[e.length-1],i,s);return this._createSamplerAllContinue(e,i,l,s)}async _createSampler(e,t,i,o){const s=i.signal;await e.load({signal:s});const l=t.spatialReference,n=e.tileInfo.spatialReference;l.equals(n)||(await h([{source:l,dest:n}],{signal:s}),t=p(t,n));const a=new _(e,t,i,o);return await this._selectTiles(a,s),await this._populateElevationTiles(a,s),new y(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,o){if(e.pop(),!e.length)return i;const s=i.samplers.map((e=>m(e.extent))),l=await this._createSampler(e[e.length-1],t,o,s);if(0===l.samplers.length)return i;const n=i.samplers.concat(l.samplers),a=new y(n,o.noDataValue);return this._createSamplerAllContinue(e,t,a,o)}async _queryAllContinue(e,t,i){const o=e.pop(),s=t.geometry.coordinates,l=[],n=[];for(let c=0;c<s.length;c++){const i=t.sampleInfo[c];i.demResolution>=0?i.source||(i.source=o):e.length&&(l.push(s[c]),n.push(c))}if(!e.length||0===l.length)return t;const a=t.geometry.clone(l),r=await this.query(e[e.length-1],a,i);return n.forEach(((e,i)=>{s[e].z=r.geometry.coordinates[i].z,t.sampleInfo[e].demResolution=r.sampleInfo[i].demResolution})),this._queryAllContinue(e,t,i)}async _createQueryResult(e,t){const i={geometry:(await e.geometry.project(e.outSpatialReference,t)).export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(i.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),i}async _createGeometryDescriptor(e,i,o){let s;const l=e.layer.tileInfo.spatialReference;if(i instanceof x?s=await i.project(l,o):(await h([{source:i.spatialReference,dest:l}],{signal:o}),s=p(i,l)),!s)throw new t(\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${l.wkid}'`);e.geometry=x.fromGeometry(s)}async _selectTiles(e,i){const o=e.options.demResolution;if(\"geometry\"===e.type&&this._preselectOutsideLayerExtent(e),\"number\"==typeof o)this._selectTilesClosestResolution(e);else if(\"finest-contiguous\"===o)await this._selectTilesFinestContiguous(e,i);else{if(\"auto\"!==o)throw new t(\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${o}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,i)}}_preselectOutsideLayerExtent(e){if(i(e.layer.fullExtent))return;const t=new T(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const o=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const i=e.x,s=e.y;(i<o.xmin||i>o.xmax||s<o.ymin||s>o.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e){const t=e.layer.tileInfo,i=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const i=t/a(e.spatialReference);let o=e.lods[0],s=0;for(let l=1;l<e.lods.length;l++){const t=e.lods[l];Math.abs(t.resolution-i)<Math.abs(o.resolution-i)&&(o=t,s=l)}return s}async _selectTilesFinestContiguous(e,t){const i=E(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,i,t)}async _selectTilesFinestContiguousAt(e,i,o){const n=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=n.tilemapCache,r=e.getTilesToFetch();try{if(a)await s(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:o})))),o);else if(await this._populateElevationTiles(e,o),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t(\"elevation-query:has-unavailable-tiles\")}catch(c){l(c),await this._selectTilesFinestContiguousAt(e,i-1,o)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),l={},a=e.options.cache,r=e.options.noDataValue,c=i.map((async i=>{const s=`${e.layer.uid}:${i.id}:${r}`,n=o(a)?a.get(s):null,c=o(n)?n:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:r,signal:t});o(a)&&a.put(s,c),l[i.id]=new T(i,c)}));await s(n(c),t),e.populateElevationTiles(l)}async _selectTilesAuto(t,i){this._selectTilesAutoFinest(t),this._reduceTilesForMaximumRequests(t);const o=t.layer.tilemapCache;if(!o)return this._selectTilesAutoPrefetchUpsample(t,i);const n=t.getTilesToFetch(),a={},r=n.map((async t=>{const s={id:null,level:0,row:0,col:0,extent:f()},n=await e(o.fetchAvailabilityUpsample(t.level,t.row,t.col,s,{signal:i}));!1===n.ok?l(n.error):a[t.id]=s}));await s(Promise.all(r),i),t.remapTiles(a)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const o={},s=e=>{e.id in o?o[e.id]++:(o[e.id]=1,i++)},l=e=>{const t=o[e.id];1===t?(delete o[e.id],i--):o[e.id]=t-1};e.forEachTileToFetch(s,l);let n=!0;for(;n&&(n=!1,e.forEachTileToFetch((o=>{i<=e.options.maximumAutoTileRequests||(l(o),t.upsampleTile(o)&&(n=!0),s(o))}),l),n););}_selectTilesAutoFinest(e){const t=E(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let o=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?o=!0:t()})),o&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let s=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);o(e)?s=e:t.elevationTile=null}t.z=s}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=a(t.spatialReference);return e.geometry.coordinates.map((o=>{let s=-1;if(o.elevationTile&&o.elevationTile!==e.outsideExtentTile){s=t.lodAt(o.elevationTile.tile.level).resolution*i}return{demResolution:s}}))}}class x{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new x;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>this._cloneCoordinate(e))),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await h([{source:this.spatialReference,dest:e}],{signal:t});const i=new r({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),o=p(i,e);if(!o)return null;const s=this.coordinates.map(((e,t)=>{const i=this._cloneCoordinate(e),s=o.points[t];return i.x=s[0],i.y=s[1],i})),l=this.clone(s);return l.spatialReference=e,l}_cloneCoordinate(e){return{x:e.x,y:e.y,z:e.z,m:e.m,tile:null,elevationTile:null}}static fromGeometry(e){const t=new x;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof x)t.coordinates=e.coordinates.map((e=>t._cloneCoordinate(e))),t._exporter=(t,i)=>{const o=e.clone(t);return o.spatialReference=i,o};else switch(e.type){case\"point\":{const i=e,{hasZ:o,hasM:s}=i;t.coordinates=o&&s?[{x:i.x,y:i.y,z:i.z,m:i.m}]:o?[{x:i.x,y:i.y,z:i.z}]:s?[{x:i.x,y:i.y,m:i.m}]:[{x:i.x,y:i.y}],t._exporter=(t,i)=>e.hasM?new c(t[0].x,t[0].y,t[0].z,t[0].m,i):new c(t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:o,hasM:s}=i;t.coordinates=o&&s?i.points.map((e=>({x:e[0],y:e[1],z:e[2],m:e[3]}))):o?i.points.map((e=>({x:e[0],y:e[1],z:e[2]}))):s?i.points.map((e=>({x:e[0],y:e[1],m:e[2]}))):i.points.map((e=>({x:e[0],y:e[1]}))),t._exporter=(t,i)=>e.hasM?new r({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new r(t.map((e=>[e.x,e.y,e.z])),i);break}case\"polyline\":{const i=e,o=[],s=[],{hasZ:l,hasM:n}=e;let a=0;for(const e of i.paths)if(s.push([a,a+e.length]),a+=e.length,l&&n)for(const t of e)o.push({x:t[0],y:t[1],z:t[2],m:t[3]});else if(l)for(const t of e)o.push({x:t[0],y:t[1],z:t[2]});else if(n)for(const t of e)o.push({x:t[0],y:t[1],m:t[2]});else for(const t of e)o.push({x:t[0],y:t[1]});t.coordinates=o,t._exporter=(t,i)=>{const o=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),l=s.map((e=>o.slice(e[0],e[1])));return new u({paths:l,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class g{constructor(e,t){this.layer=e,this.options=t}}class w extends g{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type=\"geometry\"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>e.tile=null));else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach((e=>{e.tile=t.tileAt(i,e.x,e.y)}))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates)t.tile=e[t.tile.id]}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const o=i.tile;i.elevationTile||!i.tile||e[o.id]||(e[o.id]=o,t.push(o))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>t.tile=null))}}class _ extends g{constructor(e,t,i,o){super(e,i),this.type=\"extent\",this.elevationTiles=[],this.candidateTiles=[],this.fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=o}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),o=Math.min(i,e);o<0?this.candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(o)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const o=this.extent;if(i(o))return-1;for(let i=t.lods.length-1;i>=0;i--){const s=t.lods[i],l=s.resolution*t.size[0],n=s.resolution*t.size[1];if(Math.ceil(o.width/l)*Math.ceil(o.height/n)<=e)return i}return-1}allElevationTilesFetched(){return this.candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this.fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this.candidateTiles){const i=e[t.id];i&&(this.fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this.candidateTiles}forEachTileToFetch(e,t){const i=this.candidateTiles;this.candidateTiles=[],i.forEach((i=>{if(this.fetchedCandidates.has(i))return void(t&&t(i));let o=!1;e(i,(()=>o=!0)),o?t&&t(i):this.candidateTiles.push(i)})),this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},o=[];for(const l of e)i[l.id]?t&&t(l):(i[l.id]=l,o.push(l));const s=o.sort(((e,t)=>e.level-t.level));return s.filter(((e,i)=>{for(let o=0;o<i;o++)if(d(s[o].extent,e.extent))return t&&t(e),!1;return!0}))}_selectCandidateTilesCoveringExtentAt(e){this.candidateTiles.length=0;const t=this.extent;if(i(t))return;const o=this.layer.tileInfo,s=o.lods[e],l=o.tileAt(s.level,t.xmin,t.ymin),n=s.resolution*o.size[0],a=s.resolution*o.size[1],r=Math.ceil((t.xmax-l.extent[0])/n),c=Math.ceil((t.ymax-l.extent[1])/a);for(let i=0;i<c;i++)for(let e=0;e<r;e++){const t={id:null,level:l.level,row:l.row-i,col:l.col+e};o.updateTileInfo(t),this._tileIsMasked(t)||this.candidateTiles.push(t)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>d(t,e.extent)))}}function E(e,t){let i=e.lods.length-1;if(t>0){const o=e.lods.findIndex((e=>e.resolution<t));0===o?i=0:o>0&&(i=o-1)}return i}const R={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};export{v as ElevationQuery,x as GeometryDescriptor,v as default,E as getFinestLodIndex};\n"],"sourceRoot":"webpack:///","file":"8469.541a4d82477a8eca44c9.js"}