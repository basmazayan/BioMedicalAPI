"use strict";(self.webpackChunkbio_medical=self.webpackChunkbio_medical||[]).push([[858],{40858:(p,r,e)=>{e.r(r),e.d(r,{default:()=>y});var s=e(79076),i=(e(22345),e(55865),e(45072),e(30627),e(72062),e(96410)),o=e(93434),d=e(61414),n=e(94911);const v=f=>{let a=class extends f{initialize(){const{layer:t,view:h}=this;t.source.supportsSpatialReference(h.spatialReference)||this.addResolvingPromise(Promise.reject(new d.Z("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:t})))}get availableFields(){return this.layer.fieldsIndex.fields.map(t=>t.name)}};return(0,s._)([(0,n.Cb)()],a.prototype,"layer",void 0),(0,s._)([(0,n.Cb)({readOnly:!0})],a.prototype,"availableFields",null),a=(0,s._)([(0,i.j)("esri.views.layers.OGCFeatureLayerView")],a),a};let l=class extends(v(o.default)){};l=(0,s._)([(0,i.j)("esri.views.2d.layers.OGCFeatureLayerView2D")],l);const y=l}}]);
//# sourceMappingURL=858.6bcab67dd7f03d1e3cf8.js.map