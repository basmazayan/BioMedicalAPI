"use strict";(self.webpackChunkbio_medical=self.webpackChunkbio_medical||[]).push([[1710],{61710:(m,h,s)=>{s.r(h),s.d(h,{registerFunctions:()=>g});var c=s(31863),d=s(56373),o=s(7808),_=s(36403);function l(t,e,a,n,u,r){if(1===n.length){if((0,c.a)(n[0]))return(0,o.DB)((0,d.t)(t,n[0],(0,c.E)(n[1],-1)));if((0,c.b)(n[0]))return(0,o.DB)((0,d.t)(t,n[0].toArray(),(0,c.E)(n[1],-1)))}else if(2===n.length){if((0,c.a)(n[0]))return(0,o.DB)((0,d.t)(t,n[0],(0,c.E)(n[1],-1)));if((0,c.b)(n[0]))return(0,o.DB)((0,d.t)(t,n[0].toArray(),(0,c.E)(n[1],-1)));if((0,c.o)(n[0]))return n[0].load().then(i=>E(_.WhereClause.create(n[1],i.getFieldsIndex()),r,u).then(f=>n[0].calculateStatistic(t,f,(0,c.E)(n[2],1e3),e.abortSignal)))}else if(3===n.length&&(0,c.o)(n[0]))return n[0].load().then(i=>E(_.WhereClause.create(n[1],i.getFieldsIndex()),r,u).then(f=>n[0].calculateStatistic(t,f,(0,c.E)(n[2],1e3),e.abortSignal)));return(0,o.DB)((0,d.t)(t,n,-1))}function E(t,e,a){try{const n=t.getVariables();if(n.length>0){const u=[];for(let r=0;r<n.length;r++){const i={name:n[r]};u.push(e.evaluateIdentifier(a,i))}return(0,o.$6)(u).then(r=>{const i={};for(let f=0;f<n.length;f++)i[n[f]]=r[f];return t.parameters=i,t})}return(0,o.DB)(t)}catch(n){return(0,o.d1)(n)}}function g(t){"async"===t.mode&&(t.functions.stdev=function(e,a){return t.standardFunctionAsync(e,a,function(n,u,r){return l("stdev",n,0,r,e,t)})},t.functions.variance=function(e,a){return t.standardFunctionAsync(e,a,function(n,u,r){return l("variance",n,0,r,e,t)})},t.functions.average=function(e,a){return t.standardFunctionAsync(e,a,function(n,u,r){return l("mean",n,0,r,e,t)})},t.functions.mean=function(e,a){return t.standardFunctionAsync(e,a,function(n,u,r){return l("mean",n,0,r,e,t)})},t.functions.sum=function(e,a){return t.standardFunctionAsync(e,a,function(n,u,r){return l("sum",n,0,r,e,t)})},t.functions.min=function(e,a){return t.standardFunctionAsync(e,a,function(n,u,r){return l("min",n,0,r,e,t)})},t.functions.max=function(e,a){return t.standardFunctionAsync(e,a,function(n,u,r){return l("max",n,0,r,e,t)})},t.functions.count=function(e,a){return t.standardFunctionAsync(e,a,function(n,u,r){if((0,c.p)(r,1,1),(0,c.o)(r[0]))return r[0].count(n.abortSignal);if((0,c.a)(r[0])||(0,c.f)(r[0]))return r[0].length;if((0,c.b)(r[0]))return r[0].length();throw new Error("Invalid Parameters for Count")})})}}}]);
//# sourceMappingURL=1710.1dc7dc52b66adab9834e.js.map