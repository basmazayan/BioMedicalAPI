"use strict";var ii=Object.defineProperty,K=Object.getOwnPropertySymbols,ei=Object.prototype.hasOwnProperty,ti=Object.prototype.propertyIsEnumerable,j=(r,n,e)=>n in r?ii(r,n,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[n]=e,v=(r,n)=>{for(var e in n||(n={}))ei.call(n,e)&&j(r,e,n[e]);if(K)for(var e of K(n))ti.call(n,e)&&j(r,e,n[e]);return r};(self.webpackChunkbio_medical=self.webpackChunkbio_medical||[]).push([[3184],{73184:(r,n,e)=>{e.r(n),e.d(n,{default:()=>$});var g=e(49996),p=e(79076),Z=e(77871),k=e(30351),G=e(97750),z=e(65333),u=e(18502),E=e(30164),c=e(94911),F=(e(45072),e(30627),e(55865),e(96410)),S=e(70157),P=e(19784),U=e(96583),L=e(3403),m=e(5285),J=e(16727),V=e(78779),Y=e(44946),N=e(23335),H=e(78081),M=e(84853),D=e(42302),Q=e(96121);class T{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let _=class extends((0,H.y)(Q.Z)){constructor(){super(...arguments),this._handles=new z.Z,this._bitmapIndex=new Map,this._mapImageContainer=new N.c,this._kmlVisualData=new T,this.allVisiblePoints=new V.J,this.allVisiblePolylines=new V.J,this.allVisiblePolygons=new V.J,this.allVisibleMapImages=new G.Z}hitTest(i,t){var a=this;return(0,g.Z)(function*(){var l,h,s;return(yield Promise.all([null==(l=a._pointsView)?void 0:l.hitTest(i),null==(h=a._polylinesView)?void 0:h.hitTest(i),null==(s=a._polygonsView)?void 0:s.hitTest(i)])).flat().filter(d=>!!d&&(d.layer=a.layer,d.sourceLayer=a.layer,!0))})()}update(i){this._polygonsView&&this._polygonsView.processUpdate(i),this._polylinesView&&this._polylinesView.processUpdate(i),this._pointsView&&this._pointsView.processUpdate(i)}attach(){this._handles.add([this.allVisibleMapImages.on("change",i=>{i.added.forEach(t=>this._addMapImage(t)),i.removed.forEach(t=>this._removeMapImage(t))})]),this.container.addChild(this._mapImageContainer),this._polygonsView=new D.Z({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new M.Z(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new D.Z({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new M.Z(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new D.Z({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new M.Z(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.watch("layer.visibleSublayers",i=>{for(const[t,a]of this._kmlVisualData.allSublayers)a.visibility=0;for(const t of i){const a=this._kmlVisualData.allSublayers.get(t.id);a&&(a.visibility=1)}this._refreshCollections()}),this._fetchingPromise=this._fetchService().then(()=>{this._fetchingPromise=null,this.notifyChange("updating")})}detach(){this._handles.removeAll(),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView&&(this._polygonsView.destroy(),this._polygonsView=null),this._polylinesView&&(this._polylinesView.destroy(),this._polylinesView=null),this._pointsView&&(this._pointsView.destroy(),this._pointsView=null)}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return null!=this._fetchingPromise||this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(i){(this.view.spatialReference.isWGS84||this.view.spatialReference.isWebMercator)&&(0,k.default)(i.href,{responseType:"image"}).then(({data:t})=>{let a=S.Z.fromJSON(i.extent);(0,L.Q8)(a,this.view.spatialReference)&&(a=(0,L.iV)(a,this.view.spatialReference));const l=new Y.eY(t,"standard");l.x=a.xmin,l.y=a.ymax,l.resolution=a.width/t.naturalWidth,l.rotation=i.rotation,this._mapImageContainer.addChild(l),this._bitmapIndex.set(i,l)})}_getViewDependentUrl(i,t){return(0,g.Z)(function*(){const{viewFormat:a,viewBoundScale:l,httpQuery:h}=i;if((0,u.pC)(a)){if((0,u.Wi)(t))throw new Error("Loading this network link requires a view state.");let s;if(yield(0,P.zD)(),(0,u.pC)(l)&&1!==l){const y=new S.Z(t.extent);y.expand(l),s=y}else s=t.extent;s=(0,P.iV)(s,U.Z.WGS84);const d=(0,P.iV)(s,U.Z.WebMercator),C=s.xmin,w=s.xmax,I=s.ymin,o=s.ymax,X=t.size[0]*t.pixelRatio,q=t.size[1]*t.pixelRatio,A=Math.max(d.width,d.height),R={"[bboxWest]":C.toString(),"[bboxEast]":w.toString(),"[bboxSouth]":I.toString(),"[bboxNorth]":o.toString(),"[lookatLon]":s.center.x.toString(),"[lookatLat]":s.center.y.toString(),"[lookatRange]":A.toString(),"[lookatTilt]":"0","[lookatHeading]":t.rotation.toString(),"[lookatTerrainLon]":s.center.x.toString(),"[lookatTerrainLat]":s.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":s.center.x.toString(),"[cameraLat]":s.center.y.toString(),"[cameraAlt]":A.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":X.toString(),"[vertPixels]":q.toString(),"[terrainEnabled]":"0","[clientVersion]":Z.i8,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},W=y=>{for(const x in y)for(const B in R)y[x]=y[x].replace(B,R[B])},f=(0,E.u0)(a);W(f);let b={};(0,u.pC)(h)&&(b=(0,E.u0)(h),W(b));const O=(0,J.en)(i.href);return O.query=v(v(v({},O.query),f),b),`${O.path}?${(0,E.B7)(f)}`}return i.href})()}_fetchService(){var i=this;return(0,g.Z)(function*(){const t=new T;yield i._loadVisualData(i.layer.url,t),i._kmlVisualData=t,i._refreshCollections()})()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i))}_isSublayerVisible(i){const t=this._kmlVisualData.allSublayers.get(i);return!!t.visibility&&(-1===t.parentFolderId||this._isSublayerVisible(t.parentFolderId))}_loadVisualData(i,t){var a=this;return this._fetchParsedKML(i).then(function(){var l=(0,g.Z)(function*(h){for(const s of h.sublayers){t.allSublayers.set(s.id,s);const d=s.points?yield(0,m.Yu)(s.points):[],C=s.polylines?yield(0,m.Yu)(s.polylines):[],w=s.polygons?yield(0,m.Yu)(s.polygons):[],I=s.mapImages||[];if(t.allPoints.push(...d.map(o=>({item:o,sublayerId:s.id}))),t.allPolylines.push(...C.map(o=>({item:o,sublayerId:s.id}))),t.allPolygons.push(...w.map(o=>({item:o,sublayerId:s.id}))),t.allMapImages.push(...I.map(o=>({item:o,sublayerId:s.id}))),s.networkLink){const o=yield a._getViewDependentUrl(s.networkLink,a.view.state);yield a._loadVisualData(o,t)}}});return function(h){return l.apply(this,arguments)}}())}_fetchParsedKML(i){return(0,m.CS)(i,this.view.spatialReference,this.layer.refreshInterval).then(t=>(0,m.Cw)(t.data))}_removeMapImage(i){const t=this._bitmapIndex.get(i);t&&(this._mapImageContainer.removeChild(t),this._bitmapIndex.delete(i))}};(0,p._)([(0,c.Cb)()],_.prototype,"_pointsView",void 0),(0,p._)([(0,c.Cb)()],_.prototype,"_polylinesView",void 0),(0,p._)([(0,c.Cb)()],_.prototype,"_polygonsView",void 0),(0,p._)([(0,c.Cb)()],_.prototype,"_fetchingPromise",void 0),(0,p._)([(0,c.Cb)()],_.prototype,"updating",void 0),_=(0,p._)([(0,F.j)("esri.views.2d.layers.KMLLayerView2D")],_);const $=_}}]);
//# sourceMappingURL=3184.dc61e677b96e6066980b.js.map