{"version":3,"mappings":"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,EAAM4T,MAEPjd,KAAKspC,UAAY,MACjBtpC,KAAKkd,aAAa,OAIlBld,KAAKspC,UAAY,MACjBtpC,KAAKkd,aAAa,gDAfbqsB,IAAYjnC,mDAAZinC,GAAY90B,8GCTzBnS,iBAOIA,yBACJA,eARKA,yBAA6BA,gWCqHlCknC,uBAAmC,CACjCC,MACAC,QAsMK,iDAAMC,iCAASC,WALRL,oCAPD,CAAC5iB,KACVA,KACA1B,EACA4kB,MACAn1B,KACAo1B,KACA,CAAEC,QAASr1B,KAAkBs1B,SAAUt1B,OAAuBu1B,SA3EvD,CACPvqC,KACAyX,KACAA,KACAgyB,GACAjpC,KACAgqC,MACAC,KACAC,KACAC,MACAC,KACAC,MACAC,KACAC,KACAC,IACAC,MACAC,IACAC,MACAC,IACAl2B,MACAm2B,KACAC,KACAC,MACAC,MACArB,MACAsB,MAEAC,KACAC,KACA7B,OACA8B,KACAC,MACAC,IACAC,KAEAC,KACAC,KACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,KACAC,MACAC,KACAC,MACAC,MACAC,MACAC,KACAC,KACAC,gBACAC,MAEAC,KAOAC,aAAwB,CACtBC,OAAQ,CACN/C,QAAS8C,KACTE,WAoBD,SAA2BtR,GAChC,OAAO,IAAIuR,KAAoBvR,IApBzBwR,KAAM,CAAC/sC,sBCvSXL,iBACFyC,SAGF5C,OAAyBwtC,gBAAgBvD,IACtCwD,MAAM1R,GAAOtmB,QAAQiE,MAAMqiB,eCX9B,cAGA,mCACA,8CACA,gCACA/7B,IAGAC,cACAA,YACAA,WACAC,6BCZA,OACA,aACA,gBACA,aACA,eACA,kBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,mBACA,gBACA,aACA,gBACA,aACA,gBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,mBACA,eACA,kBACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,cACA,iBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,mBACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,mBACA,sBACA,kBACA,qBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,gBACA,mBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,YACA,eACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,aACA,gBACA,iBACA,oBACA,gBACA,mBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,aACA,gBACA,aACA,gBACA,YACA,eACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,YACA,eACA,aACA,kBACA,qBACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,cACA,iBACA,aACA,gBACA,aACA,gBACA,YACA,eACA,gBACA,mBACA,cACA,iBACA,aACA,gBACA,cACA,iBACA,cACA,mBACA,sBACA,iBACA,gBACA,mBACA,aACA,gBACA,aACA,gBACA,aACA,kBACA,qBACA,gBACA,aACA,gBACA,mBACA,sBACA,aACA,gBACA,gBACA,mBACA,eACA,kBACA,gBACA,mBACA,gBACA,oBAIA,cACA,WACA,YAEA,cACA,cACA,8CACA,gCACA8U,EAEA,YAEApS,kBACA,uBAEAA,YACA1C,YACA0C","names":["S","R","K","l","constructor","A","this","headers","q","Accept","getAllEquipments","httpClient","get","httpHeader","GetAllEquipmentsforinventory","getAllEquipmentswithscanningDate","getcount","getAllwithpaging","put","addNewEquipments","post","deleteEquipment","delete","updateEquipment","t","getEquipmentById","getEquipmentAttachmentIDs","getAllAttachWithNoEquipment","getAllAttachForEquipment","getImagePath","DeleteAttachment","GetAllBymaster","GetAllByHospital","getScannedDateWithequipmentsgroups","GetEquipmentsOnGovernorate","GetEquipmentsOnDistrict","GetEquipmentsOnOrganization","GetEquipmentsOnSupplier","FilterData","addEquipmentRecall","GetAllRecalledEquipments","getEquipmentInHospital","getEquipmentInHospitalToEdit","D","e","factory","getAllunits","getunitById","getAllunitsByDistrictId","getDirectorybydirectoryId","getAllstatuses","getUserscount","getAllUserswithpaging","getAllpriorities","getAllmanufacturer","getAllOrigins","getAllCategories","getSubCategories","getAllSubCategories","getAllDepartments","getAllSuppliers","getAllHealthDirectories","getAllHealthDistricts","getAllHealthDistrictsByDirectoryName","getDirectoryIdByname","GetHealthDistrictsIdbyName","getAllHealthDistrict","getAllModes","addNewCategory","updateCategory","deleteCategory","addNewSubCategory","updateSubCategory","deleteSubCategory","addNewOrigin","updateOrigin","deleteOrigin","addNewManufacturer","updateManufacturer","deleteManufacturer","addNewStatus","updateStatus","deleteStatus","addNewPriority","updatePriority","deletePriority","addNewDepartment","updateDepartment","deleteDepartment","addNewSupplier","updateSupplier","deleteSupplier","addNewMode","updateMode","deleteMode","AddMaintenance","AddSparePart","deleteHealthUnit","updateUnit","addNewHealthCareUnit","getAllEcricodes","updateEcriCode","deleteEcriCode","addEcriCode","getHospitalscount","getAllHospitalswithpaging","f","k","getAll","update","Delete","getAllAttachWithNoMasterEquipment","getMasterByBrand","Y","currentUserSubject","rA","JSON","parse","localStorage","getItem","currentUser","asObservable","value","register","login","pipe","token","setItem","stringify","next","getUsers","getUsersByEquipmentId","deleteUser","getUnRegisteredUsers","getUsersByHealthcareunitId","getUsersByhealthDirectoryId","getUsersByhealthDistrictId","getUsersByOrganizationId","getEquipmentEmployees","getRoles","updateRole","getById","getRoleById","createRoles","forgetPassword","resetPassword","logout","removeItem","router","navigate","I","MAs","filterGlobal","filter","r","i","n","a","p","c","g","_","userService","currentUserValue","ngOnInit","selectedEmployees","directories","hospitals","TecniciensList","techniciens","sharedService","subscribe","healthCareUnitsList","statusList","priorityList","manufacturerList","originsList","categoriesList","departmentsList","suppliersList","healthDirectoriesList","districtsList","page","pagenumber","pagesize","equipmentService","count","equipments","equipmentObj","id","equipmentDescription","equipmentDescriptionAr","equipmentName","equipmentNameAr","installationDate","Date","purchaseDate","priorityId","equipmentCategoryId","equipmentSubCategoryId","equipmentStatuSId","statusName","statusNameAr","manufacturerId","originId","healthCareUnitId","healthCareUnit","healthCareUnitName","healthCareUnitNameAr","supplierId","supplierName","supplierNameAr","expectedLifeTime","length","height","weight","departmentId","departmentName","departmentNameAr","room","floor","remarks","price","modelNumber","versionNumber","serialNumber","internalCode","upaCode","barcode","color","colorAr","manufacturerName","manufacturerNameAr","healthDirectoryId","healthDirectoryName","healthDirectoryNameAr","healthDistrictId","healthDistrictName","healthDistrictNameAr","employeeIDs","AttachmentIDs","masterEquipmentId","qrImgPath","createdAt","organizationName","organizationNameAr","time","recallNumber","recallDate","organizationId","contractRequestId","organizationrequestid","contractid","Attach","fileName","equipmentId","dropdownSettings","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","onItemSelect","push","onItemDeSelect","splice","onSelectAll","getHealthCareUnit","CareUnits","roleName","forEach","healthdirId","districts","organizations","openNew","InstallationDate","datePipe","transform","purchaseDat","getAttachs","equipmentDialog","submitted","getSelectedemployees","eqId","users","masterEquipmentService","masterEquipment","getAllMasterEquipment","MasterEquipment","fillDistrict","HealthDistrictsList","fillHospital","healthCareUnits","fillSubCategory","subCategoriesList","hideDialog","Attachs","getimagepath","ImagePath","EpmIDs","updateProduct","EquipAttachs","IDs","deleteProduct","confirmDelete","translate","currentLang","confirmationService","confirm","message","header","icon","accept","messageservice","add","severity","detail","reject","acceptLabel","rejectLabel","msgs","Next","index","isNextvalid","isPrevvalid","Previous","handleChange","getDetails","RemoveAttach","isvisible","isbtnvisible","openLink","De","selectors","d","decls","oe","items","Array","from","map","EquipmentEmployessList","employeesList","console","log","show","opened","saveProduct","addEquipment","fillDistrictAndDirectory","fillHealthCareUnit","healthCareUnitsListByDistrictId","NextAndSave","onSelectEvent","Le","getAllserviceRequests","makeRequest","updateRequest","deleteRequest","getAllRequestsByDirectoryId","re","requestObj","serviceRequestCode","serviceRequestTitle","serviceRequestTitleAr","problemDescriptionAr","problemDescription","serviceRequestDate","serviceRequestTime","employeeEmail","requestType","EquipmentId","employeeId","modeId","districtsEquipments","s","myDate","getHours","getMinutes","getSeconds","modesList","email","requestDialog","equipmentList","requestService","onselectEquipment","selectedEquip","Fe","FilteredRequestsBycurrentUser","requestsByDistrictId","AllRequests","requestsByDirectoryId","getTime","serviceDialog","hours","minutes","days","summary","editOrg","ye","upload","http","Ee","user","userName","userNameAr","password","suborganizationId","error","Message","alert","Je","userObj","showResponse","messageService","sticky","Qe","getAllContracts","addNewContract","deleteContract","updateContract","AddContractRequest","AddOrganizationContractRequest","getHosForOrg","getRequestbetweenDates","getRequestForUPA","getEquipmentInContract","getOneContract","EquipmentInContract","InformHospital","getRequestInHospitals","getRequest","getRequestToEdit","updateContractRequest","j","init","storage","create","_storage","load","myData","getData","updateData","we","addLangs","getBrowserLang","use","match","setDefaultLang","primengConfig","ripple","getAllRequestsForOrg","orgId","getAllEquipment","switchLang","Lang","href","url","lng","emit","behaviorSubject","contractRequestService","hospitalList","organizationRequestList","orgRequests","nullablMSG","EquipmentList","Re","onLangChange","lang","selectedLang","observer","observe","X","breakpoints","sidenav","mode","close","open","mouseenter","isExpanded","isShowing","mouseleave","gettrans","label1","Users","category","EquipmentCategories","label","routerLink","Se","toggle","Ye","getAllOrganization","getOrganizationscount","addNewOrganization","deleteOrganization","updateOrganization","getOrganization","O","getAllSubOrganization","addNewSubOrganization","deleteSubOrganization","updateSubOrganization","getSubOrganization","getSubOrgscount","getAllSubOrgswithpaging","te","dirctoryRoleList","HospitalRoleList","role","name","healthUnits","subOrganizationService","subOrganizationList","organizationService","organizationList","healthDistricts","healthDirectories","userDialog","rolesList","TechnicianRoleList","equipmentservice","updateUser","editUser","errorDialog","loadDistricts","Oe","Equipments","saveUser","addUser","He","AddWorkOrder","GetAllRequestStatus","createNewStatus","getAllWorkOrders","getMaintenance","getsparepart","getWorkOrder","UpdateWorkOrder","updateMaintenance","updateSparePart","deleteWorkOrder","AddOrderWithoutRequest","getAllOrdersWithoutRequest","closeorder","ae","getAllVendors","se","E","WorkOrder","workOrderDate","userId","vendorId","requestStatusId","ServiceRequestId","maintenanceId","sparePartId","StatusName","StatusNameAr","EquipmentName","EquipmentNameAr","maintenance","problem","partCost","laborCost","sparepart","sparePartName","sparePartNameAr","sparePartCode","workOrderService","WorkOrderList","workOrderDialog","sparepartId","getmaintenance","getstatus","getPriopities","openNewDialog","workOrderDialogWithoutRequest","OrdersWithoutRequest","getAllUsers","WorkOrdersWithoutRequest","vendor","vendorService","priorities","hideDialogWithoutRequest","updateWorkOrder","window","location","reload","updateWorkOrderWithoutRequest","closeOrder","ge","isAuthenticated","fe","canActivate","authService","Q","AddInInventory","getAllInventories","le","getUser","Number","substring","lastIndexOf","document","createElement","body","appendChild","insertAdjacentHTML","saveInInventory","Inventory","equipmentCode","inventoryService","Me","equipmentUser","qe","ke","CategoriesList","categoryDialog","status","messageAr","Ge","u","categoryName","categoryNameAr","categoryCode","categoryDescription","categoryDescriptionAr","saveEquepmentCat","addCategory","je","subCategoryDialog","subCategory","updatesubCategory","errorDisplay","Pe","subCategoryName","subCategoryNameAr","code","saveSubCatgory","addSubCategory","ze","originDialog","origin","Ke","originObj","originCode","arabicName","englishName","saveOrigin","addOrigin","Ve","manufacturer","manufacturersList","manufacturerDialog","saveManufacturer","updateManfacturer","deleteManfacturer","We","addManufacturer","Xe","prioritiesList","priorityDialog","priorityObj","errorMessage","$e","priorityLevel","description","priorityLevelAr","descriptionAr","savePriority","addPriority","et","departmentObj","departmentCode","departmentDialog","tt","saveDepartment","addDepartment","At","statusesList","statusDialog","equipmentStatusObj","nt","statusAr","selected","saveStatus","addStatus","it","supplierObj","supplierCode","supplierDialog","ot","saveSupplier","addSupplier","rt","modeDialog","at","requestMode","requestModeAr","saveMode","addMode","st","contractObj","number","startDate","endDate","contents","subject","equipmentIDs","list","requestsList","title","date","toString","calendarOptions","initialView","events","handleDateClick","lt","masterEquipmentObj","nameAr","masterCode","saveEquipment","pt","MasterEquipments","msterEquipmentDialog","openEmptyDialog","updateMasterEquipment","deleteMsterEquipment","masterAttachDel","clicktbl","rows","ct","RequestID","activeRoute","snapshot","params","workOrder","WrokOrderDialog","saveWorkOrder","Addworkorder","onDrop","preventDefault","stopPropagation","onDragOver","onDragLeave","files","uploadedFiles","be","gt","getAllSpareParts","addSparePart","deleteSparePart","ue","getAllEquipmentCoverage","addNewEquipmentCoverage","deleteEquipmentCoverage","updateEquipmentCoverage","pe","St","bp","eqCoverage","equipmentCoverageId","contractId","equipmentsIDs","numberOfVisits","responseTime","eqCovrageDialog","contractService","contractsList","sparePartService","sparePartsList","exportPdf","content","text","fontSize","alignment","ul","download","print","saveObject","saveEquipmentCoverage","equipmentCoverageService","lstIDS","saveContract","getAllContract","contractDialog","addEqcoverage","ut","dt","mt","resetPasswordModel","Password","ConfirmPassword","Token","Email","route","queryParams","reset","_t","ngOnDestroy","contractsObgs","unsubscribe","contracts","addEqContract","ht","healthUnitobj","healthCareUnitCode","OrganizationId","OrganizationName","OrganizationNameAr","Address","Director","Phone","Mobile","Long","Lat","healthUnitDialog","deleteUnit","onOrgChange","organization","Ct","saveHealthUnit","Bt","scales","yAxes","ticks","stepSize","beginAtZero","healthUnitsno","suppliers","supliersNo","manufacturers","manufacturersNo","equs","data","labels","datasets","backgroundColor","hoverBackgroundColor","basicData","polar","Zt","codesList","ecriCodeDialog","ecriObj","Et","ecri_code","saveCode","addEcri","Qt","org","Name","NameAr","organizationDialog","saveOrganization","addOrganization","wt","organizationsList","AddOrganization","ft","subOrganization","subOrganizationDialog","organizatioService","OrganizationsList","saveSubOrganization","addSubOrganization","subSubOrganizationService","Mt","suborganizationservice","SubOrganizationsList","updatesubIOrg","deleteSubOrg","qt","w","B","getOne","checkCheckBoxvalue","bt","AA","equipmentElements","equipmentElementsAr","filteredObj","brandName","cityName","hosName","govName","getElementById","style","display","newEquipmentList","getBase64ImageFromURL","Promise","Image","setAttribute","onload","width","getContext","drawImage","toDataURL","onerror","src","addFont","setFont","addImage","newRows","selectedElement","lstBrandEquipment","listEquipment","temp","datepipe","autoTable","head","colSpan","styles","fillColor","textColor","font","startY","brandNameAr","halign","save","EquipmentHospitalList","EquipmentGovList","EquipmentCityList","EquipmentOrgList","EquipmentSupplierList","filterByName","filterByBrand","filterByGov","filterByCity","filterByHos","filterBySupplier","filterByPurchaseDate","selectElement","marginTop","marginLeft","checkValue","$","val","checkGroupingValue","marginRight","zIndex","xt","Tt","eqscann","vt","recallObj","recallSubject","orgs","adminList","getEquipments","supequipments","It","kt","o","page1","SelectedEquipmentListForEdit","vewid","requestStatus","Status","StatusAr","RequestObj","hospitalId","comments","numberOfEquipment","OrganizationRequestObj","to","hospitalRequestdate","organizationRequestdate","Math","random","MSG","selectEquipment","EquipmentIDs","findIndex","EquipmentListToEdit","SelectedEquipmentList","isFound","outEquipment","SelectedtList","isFoundInEdit","selectEquipmentToOut","isFoundInList","onSave","successMsg","onOrgRequestSave","OrganizationEquipmentIDs","setTimeout","InformByEmail","contractRequests","hospitalWithRequestList","FilterByDate","OnchangDate","OnchangDateInOrg","FilterByDateInOrg","orgRequestList","filterFromDate","visibleFrom","filterToDate","visibleTo","ClearFromDate","ClearToDate","nextPage","UPAEquipmentIDs","contractEquipment","activeIndex","prevPage","CreateContract","Ce","contractList","onSelectContract","contract","EquipmentInEachContract","backToRequest","Ut","_contractRequestService","getAllHospitalRequests","requestsInHospital","sendToOrg","Nt","FeatureADMIN_ELSHARKYA","ADMIN_ELSHARKYA","Te","opacity","definitionExpression","FeatureADMIN_ELSHARKYA_En","FeatureELSHARKYA","ELSHARKYA","FeatureELSHARKYA_En","ELSHARKYA_En","FeatureHOSP_ELSHARKYA","HOSP_ELSHARKYA","outFields","popupEnabled","popupTemplate","FeatureHOSP_ELSHARKYA_En","HOSP_ELSHARKYA_En","ve","GetOrginisations","expropriationRequestUrl","GetDepartmantsData","GetHealthData","GetDepartmantData","GetSubOrginisations","GetBrands","GetSuppliers","GetDevice","Ie","defaultBaseMap","organizationIds","ctyCode","selectOrginataions","selectCity","selectMohafza","generateSelectFeatures","xA","initializeMap","ee","featureService","ELSHARKYAUrl","responseType","query","where","returnCountOnly","returnGeometry","then","features","enName","attributes","Gov_name_E","arName","Gov_name_A","MohafazaCode","ELSHARKYAArr","bA","blendMode","_bufferLayer","Xh","basemap","layers","_map","$h","container","center","zoom","popup","dockEnabled","dockOptions","buttonEnabled","breakpoint","position","_view","eC","view","tC","AC","unit","nC","nextBasemap","ui","component","_graphicLayer","when","mohafazatCode","ADMIN_ELSHARKYAUrl","ADMIN_ELSHARKYAArr","EDARA_NAME","EDAEn_NAME","COD","cityCode","CityCode","citycode","HOSP_ELSHARKYAUrl","selectHospital","HOSP_ELSHARKYAUrl_En","orginataions","subOrginataions","DepartmantsData","brands","supplierNames","remove","hospitalCode","model","getStaticAPIService","HOSP_ELSHARKYAArr","EST_NAME","innerHTML","graphic","GOV_NAME","classList","textContent","L","departmentID","departmentArName","addEventListener","T","U","target","generateContnetTable","hospitalID","v","J","Ae","ne","indexOf","GOVEng_NAME","EDAEng_NAME","departmentEngName","ADMIN_ELSHARKYA_En","selectSubOrginataions","subOrganizationIds","selectDepartmants","departmentIds","selectBrand","brandIds","devicePrice","deviceArName","deviceId","cursor","Ft","iA","attr","getDeviceName","yt","Jt","deviceModel","deviceInternData","deviceEngName","Dt","cC","path","children","Ue","m","relativeLinkResolution","direction","Lt","Xt","xC","TC","Ne","bootstrap","Kt","uA","provide","useClass","imports","nA","ce","Ze","dA","dC","ZC","M","Z","x","mC","y","_C","G","hC","N","Yt","BC","cA","aA","F","EC","wC","b","MA","Be","QC","fC","vC","IC","Rt","lA","pA","MC","qC","bC","ie","UC","Ht","NC","qA","Gt","mA","eA","h","loader","useFactory","CC","deps","bootstrapModule","catch"],"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/environments/environment.prod.ts","./src/app/Shared/services/equipment.service.ts","./src/app/Shared/services/shared.service.ts","./src/app/Shared/services/employee.service.ts","./src/app/Shared/services/masterequipment.service.ts","./src/app/Shared/services/user.service.ts","./src/app/Components/equipment/equipments-list/equipments-list.component.html","./src/app/Components/equipment/equipments-list/equipments-list.component.ts","./src/app/Components/equipment/new-equipment/new-equipment.component.html","./src/app/Components/equipment/new-equipment/new-equipment.component.ts","./src/app/Shared/services/request-service.service.ts","./src/app/Components/serviceRequest/service-request-add/service-request-add.component.html","./src/app/Components/serviceRequest/service-request-add/service-request-add.component.ts","./src/app/Components/serviceRequest/service-request-list/service-request-list.component.html","./src/app/Components/serviceRequest/service-request-list/service-request-list.component.ts","./src/app/Components/qr-generator/qr-generator.component.ts","./src/app/Components/qr-generator/qr-generator.component.html","./src/app/Components/register/register.component.ts","./src/app/Components/register/register.component.html","./src/app/Components/login/login.component.html","./src/app/Components/login/login.component.ts","./src/app/Shared/services/contract.service.ts","./src/app/Shared/services/behavior-subject.service.ts","./src/app/Components/Layout/navbar/navbar.component.html","./src/app/Components/Layout/navbar/navbar.component.ts","./src/app/Components/Layout/side-bar/side-bar.component.html","./src/app/Components/Layout/side-bar/side-bar.component.ts","./src/app/Components/home/home.component.ts","./src/app/Components/home/home.component.html","./src/app/Shared/services/organization.service.ts","./src/app/Shared/services/sub-organization.service.ts","./src/app/Components/user/user-list/user-list.component.html","./src/app/Components/user/user-list/user-list.component.ts","./src/app/Components/user/new-user/new-user.component.html","./src/app/Components/user/new-user/new-user.component.ts","./src/app/Shared/services/work-order.service.ts","./src/app/Shared/services/vendor.service.ts","./src/app/Components/work-order-list/work-order-list/work-order-list.component.html","./src/app/Components/work-order-list/work-order-list/work-order-list.component.ts","./src/app/auth/auth.service.ts","./src/app/auth/auth.guard.ts","./src/app/Shared/services/inventory.service.ts","./src/app/equipment_user/equipment-user.service.ts","./src/app/equipment_user/equipment-user.guard.ts","./src/app/Components/profile/profile.component.ts","./src/app/Components/EquipmentCategory/equipment-categories/equipment-categories.component.html","./src/app/Components/profile/profile.component.html","./src/app/Components/EquipmentCategory/equipment-categories/equipment-categories.component.ts","./src/app/Components/EquipmentCategory/new-category/new-category.component.html","./src/app/Components/EquipmentCategory/new-category/new-category.component.ts","./src/app/Components/SubCategories/sub-categories/sub-categories.component.html","./src/app/Components/SubCategories/sub-categories/sub-categories.component.ts","./src/app/Components/SubCategories/new-sub-category/new-sub-category.component.html","./src/app/Components/SubCategories/new-sub-category/new-sub-category.component.ts","./src/app/Components/origin/origins-list/origins-list.component.html","./src/app/Components/origin/origins-list/origins-list.component.ts","./src/app/Components/origin/new-origin/new-origin.component.html","./src/app/Components/origin/new-origin/new-origin.component.ts","./src/app/Components/Manufacturer/manufacturer-list/manufacturer-list.component.html","./src/app/Components/Manufacturer/manufacturer-list/manufacturer-list.component.ts","./src/app/Components/Manufacturer/new-manufacturer/new-manufacturer.component.html","./src/app/Components/Manufacturer/new-manufacturer/new-manufacturer.component.ts","./src/app/Components/Priority/priorities-list/priorities-list.component.html","./src/app/Components/Priority/priorities-list/priorities-list.component.ts","./src/app/Components/Priority/new-priority/new-priority.component.html","./src/app/Components/Priority/new-priority/new-priority.component.ts","./src/app/Components/Department/departments-list/departments-list.component.html","./src/app/Components/Department/departments-list/departments-list.component.ts","./src/app/Components/Department/new-department/new-department.component.html","./src/app/Components/Department/new-department/new-department.component.ts","./src/app/Components/Status/statuses-list/statuses-list.component.html","./src/app/Components/Status/statuses-list/statuses-list.component.ts","./src/app/Components/Status/new-status/new-status.component.html","./src/app/Components/Status/new-status/new-status.component.ts","./src/app/Components/Supplier/suppliers-list/suppliers-list.component.html","./src/app/Components/Supplier/suppliers-list/suppliers-list.component.ts","./src/app/Components/Supplier/new-supplier/new-supplier.component.html","./src/app/Components/Supplier/new-supplier/new-supplier.component.ts","./src/app/Components/Mode/modes-list/modes-list.component.html","./src/app/Components/Mode/modes-list/modes-list.component.ts","./src/app/Components/Mode/new-mode/new-mode.component.html","./src/app/Components/Mode/new-mode/new-mode.component.ts","./src/app/Components/settings/settings.component.ts","./src/app/Components/MasterEquipment/new-master-equipment/new-master-equipment.component.html","./src/app/Components/settings/settings.component.html","./src/app/Components/MasterEquipment/new-master-equipment/new-master-equipment.component.ts","./src/app/Components/MasterEquipment/master-equipment-list/master-equipment-list.component.html","./src/app/Components/MasterEquipment/master-equipment-list/master-equipment-list.component.ts","./src/app/Components/work-order-list/add-WorkOrder/add-work-order/add-work-order.component.html","./src/app/Components/work-order-list/add-WorkOrder/add-work-order/add-work-order.component.ts","./src/app/Components/work-order-list/add-work-order-without-request/add-work-order-without-request.component.html","./src/app/Components/work-order-list/add-work-order-without-request/add-work-order-without-request.component.ts","./src/app/Shared/services/spare-parts.service.ts","./src/app/Shared/services/equipment-coverage.service.ts","./src/app/Components/Maintenence/sla/sla.component.html","./src/app/Components/Maintenence/sla/sla.component.ts","./src/app/Components/Maintenence/equipment-maintenece/equipment-maintenece.component.ts","./src/app/Components/forget-password/forget-password.component.html","./src/app/Components/forget-password/forget-password.component.ts","./src/app/Components/reset-password/reset-password.component.ts","./src/app/Components/reset-password/reset-password.component.html","./src/app/Components/Contract/contracts-list/contracts-list.component.html","./src/app/Components/Contract/contracts-list/contracts-list.component.ts","./src/app/Components/HealthCareUnits/health-units-list/health-units-list.component.html","./src/app/Components/HealthCareUnits/health-units-list/health-units-list.component.ts","./src/app/Components/HealthCareUnits/newhealth-unit/newhealth-unit.component.html","./src/app/Components/HealthCareUnits/newhealth-unit/newhealth-unit.component.ts","./src/app/Components/dashboard/dashboard.component.ts","./src/app/Components/ecri-Code/ecri-list/ecri-list.component.html","./src/app/Components/dashboard/dashboard.component.html","./src/app/Components/ecri-Code/ecri-list/ecri-list.component.ts","./src/app/Components/ecri-Code/ecri/ecri.component.html","./src/app/Components/ecri-Code/ecri/ecri.component.ts","./src/app/Components/Organization/add-organization/add-organization.component.html","./src/app/Components/Organization/add-organization/add-organization.component.ts","./src/app/Components/Organization/organization-list/organization-list.component.html","./src/app/Components/Organization/organization-list/organization-list.component.ts","./src/app/Components/SubOrganization/new-sub-organization/new-sub-organization.component.html","./src/app/Components/SubOrganization/new-sub-organization/new-sub-organization.component.ts","./src/app/Components/SubOrganization/sub-organization-list/sub-organization-list.component.html","./src/app/Components/SubOrganization/sub-organization-list/sub-organization-list.component.ts","./src/app/Components/equipment/equipment-details/equipment-details.component.html","./src/app/Components/equipment/equipment-details/equipment-details.component.ts","./src/assets/fonts/Cairo-Regular-normal.js","./src/app/Components/pd-fcreate/pd-fcreate.component.html","./src/app/Components/pd-fcreate/pd-fcreate.component.ts","./src/app/Components/equipment/equipment-details-admin/equipment-details-admin.component.html","./src/app/Components/equipment/equipment-details-admin/equipment-details-admin.component.ts","./src/app/Components/Inventory/inventory-list/inventory-list.component.html","./src/app/Components/Inventory/inventory-list/inventory-list.component.ts","./src/app/Components/equipment/equipment-recall/equipment-recall.component.html","./src/app/Components/equipment/equipment-recall/equipment-recall.component.ts","./src/app/Components/ContractRequest/Add-request/contract-request/contract-request.component.html","./src/app/Components/ContractRequest/Add-request/contract-request/contract-request.component.ts","./src/app/Components/InformHospital/inform-hospital/inform-hospital.component.html","./src/app/Components/InformHospital/inform-hospital/inform-hospital.component.ts","./src/app/Components/ContractRequest/request-list/request-list.component.html","./src/app/Components/ContractRequest/request-list/request-list.component.ts","./src/app/Shared/services/features-map.service.ts","./src/app/Shared/services/get-static-api.service.ts","./src/app/Components/Map/map/map.component.html","./src/app/Components/Map/map/map.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./node_modules/@stencil/core/internal/client|lazy|/^/.*/.entry/.js.*$/|include: /.entry/.js$/|exclude: /.system/.entry/.js$/|groupOptions: {}|namespace object","./node_modules/moment/locale|sync|/^/.*$"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","export const environment = {\r\n  production: true,\r\n\r\n  GetAllEquipments: 'http://10.10.0.147/BioMedicalAPI/api/Equipments/',\r\n  GetOneEquipment: 'http://10.10.0.147/BioMedicalAPI/api/Equipments/',\r\n  AddNewEquipments: 'http://10.10.0.147/BioMedicalAPI/api/Equipments/',\r\n  DeleteEquipment: 'http://10.10.0.147/BioMedicalAPI/api/Equipments/',\r\n  UpdateEquipment: 'http://10.10.0.147/BioMedicalAPI/api/Equipments/',\r\n  GetAllHealthCareUnits: 'http://10.10.0.147/BioMedicalAPI/api/HealthCareUnits/',\r\n  DeleteHealthCareUnit: 'http://10.10.0.147/BioMedicalAPI/api/HealthCareUnits/',\r\n  updateHealthCareUnit: 'http://10.10.0.147/BioMedicalAPI/api/HealthCareUnits/',\r\n  GetAllHealthCareUnitsByDistrictId: 'http://10.10.0.147/BioMedicalAPI/api/HealthCareUnits/GetHealthCareUnitsByDistrictId/',\r\n  // GetByDistrictId: 'http://10.10.0.147/BioMedicalAPI/api/employees/getHealthDistrictsByempDistrictId/',\r\n  GetByDirectoryId: 'http://10.10.0.147/BioMedicalAPI/api/HealthDistricts/getHealthDirectoryBydirId/',\r\n  addNewUnit: 'http://10.10.0.147/BioMedicalAPI/api/HealthCareUnits/',\r\n  GetAllStatuses: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentStatus/',\r\n  GetAllPriorities: 'http://10.10.0.147/BioMedicalAPI/api/Priorities/',\r\n  GetAllManufacturers: 'http://10.10.0.147/BioMedicalAPI/api/Manufacturers/',\r\n  GetAllOrigins: 'http://10.10.0.147/BioMedicalAPI/api/Origins/',\r\n  GetAllCategories: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentCategories/',\r\n  GetSubCategories: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentSubCategories/',\r\n  GetAllSubCategories: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentSubCategories/AllSubCategoriesBycategoryId/',\r\n  GetAllDepartments: 'http://10.10.0.147/BioMedicalAPI/api/Departments/',\r\n  GetAllSuppliers: 'http://10.10.0.147/BioMedicalAPI/api/Suppliers/',\r\n  // GetAllEmployees: 'http://10.10.0.147/BioMedicalAPI/api/employees/',\r\n  // AddEmployee: 'http://10.10.0.147/BioMedicalAPI/api/employees/',\r\n  // DeleteEmployee: 'http://10.10.0.147/BioMedicalAPI/api/employees/',\r\n  // UpdateEmployee: 'http://10.10.0.147/BioMedicalAPI/api/employees/',\r\n  GetEquipment: 'http://10.10.0.147/BioMedicalAPI/api/Equipments/',\r\n  UploadImg: 'http://10.10.0.147/BioMedicalAPI/api/ImgUpload/',\r\n  GetAllServiceRequests: 'http://10.10.0.147/BioMedicalAPI/api/ServiceRequests/',\r\n  GetAllRequestsByDirectory: 'http://10.10.0.147/BioMedicalAPI/api/ServiceRequests/GetAllRequestsByDirectory/',\r\n  MakeRequest: 'http://10.10.0.147/BioMedicalAPI/api/ServiceRequests',\r\n  UpdateRequest: 'http://10.10.0.147/BioMedicalAPI/api/ServiceRequests/',\r\n  DeleteRequest: 'http://10.10.0.147/BioMedicalAPI/api/ServiceRequests/',\r\n  Register: 'http://10.10.0.147/BioMedicalAPI/api/authenticate/register/',\r\n  Login: 'http://10.10.0.147/BioMedicalAPI/api/authenticate/Login',\r\n  GetUsers: 'http://10.10.0.147/BioMedicalAPI/api/User/',\r\n\r\n  getUserById: 'http://10.10.0.147/BioMedicalAPI/api/User/GetUserById/',\r\n  DeleteUser: 'http://10.10.0.147/BioMedicalAPI/api/User/',\r\n  GetUnregisteredUsers: 'http://10.10.0.147/BioMedicalAPI/api/User/GetUnregisteredUsers/',\r\n  GetAllRoles: 'http://10.10.0.147/BioMedicalAPI/api/User/GetAllRoles/',\r\n  getRoleById: 'http://10.10.0.147/BioMedicalAPI/api/User/GetRoleById/',\r\n  // getEmployeeByMail: 'http://10.10.0.147/BioMedicalAPI/api/Employees/GetEmployeeNyMail/',\r\n  UpdateRole: 'http://10.10.0.147/BioMedicalAPI/api/authenticate/ChangeRole/',\r\n  GetAllHealthDirectories: 'http://10.10.0.147/BioMedicalAPI/api/HealthDirectories/',\r\n  GetAllHealthDitricts: 'http://10.10.0.147/BioMedicalAPI/api/HealthDistricts/AllHealthDistrictsByhealthDirectoryId/',\r\n  GetHealthDitricts: 'http://10.10.0.147/BioMedicalAPI/api/HealthDistricts/',\r\n  GetAllHealthCareUnitById: 'http://10.10.0.147/BioMedicalAPI/api/HealthCareUnits/',\r\n  GetAllModes: 'http://10.10.0.147/BioMedicalAPI/api/Mode/',\r\n  // GetAllEquimentsByEmp: 'http://10.10.0.147/BioMedicalAPI/api/Equipments/GetAllEquimentsByEmp/',\r\n  AddNewCategory: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentCategories/',\r\n  updateCategory: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentCategories/',\r\n  deleteCategory: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentCategories/',\r\n  AddNewSubCategory: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentSubCategories/',\r\n  updateSubCategory: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentSubCategories/',\r\n  deleteSubCategory: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentSubCategories/',\r\n  addNewOrigin: 'http://10.10.0.147/BioMedicalAPI/api/Origins/',\r\n  updateOrigin: 'http://10.10.0.147/BioMedicalAPI/api/Origins/',\r\n  deleteOrigin: 'http://10.10.0.147/BioMedicalAPI/api/Origins/',\r\n  addNewManufacturer: 'http://10.10.0.147/BioMedicalAPI/api/Manufacturers/',\r\n  updateManufacturer: 'http://10.10.0.147/BioMedicalAPI/api/Manufacturers/',\r\n  deleteManufacturer: 'http://10.10.0.147/BioMedicalAPI/api/Manufacturers/',\r\n  addNewStatus: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentStatus/',\r\n  updateStatus: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentStatus/',\r\n  deleteStatus: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentStatus/',\r\n  addNewPriority: 'http://10.10.0.147/BioMedicalAPI/api/Priorities/',\r\n  updatePriority: 'http://10.10.0.147/BioMedicalAPI/api/Priorities/',\r\n  deletePriority: 'http://10.10.0.147/BioMedicalAPI/api/Priorities/',\r\n  addNewDepartment: 'http://10.10.0.147/BioMedicalAPI/api/Departments/',\r\n  updateDepartment: 'http://10.10.0.147/BioMedicalAPI/api/Departments/',\r\n  deleteDepartment: 'http://10.10.0.147/BioMedicalAPI/api/Departments/',\r\n  addNewSupplier: 'http://10.10.0.147/BioMedicalAPI/api/Suppliers/',\r\n  updateSupplier: 'http://10.10.0.147/BioMedicalAPI/api/Suppliers/',\r\n  deleteSupplier: 'http://10.10.0.147/BioMedicalAPI/api/Suppliers/',\r\n  addNewMode: 'http://10.10.0.147/BioMedicalAPI/api/Mode/',\r\n  updateMode: 'http://10.10.0.147/BioMedicalAPI/api/Mode/',\r\n  deleteMode: 'http://10.10.0.147/BioMedicalAPI/api/Mode/',\r\n  // GetEmployee: 'http://10.10.0.147/BioMedicalAPI/api/employees/',\r\n  // GetEquipmentEmployee: 'http://10.10.0.147/BioMedicalAPI/api/Employees/GetEquipmentemployees/',\r\n  CreateRoles: 'http://10.10.0.147/BioMedicalAPI/api/User/CreateRoles/',\r\n  AddNewMasterEquipments: 'http://10.10.0.147/BioMedicalAPI/api/MasterEquipment/',\r\n  GetAllMasterEquipment: 'http://10.10.0.147/BioMedicalAPI/api/MasterEquipment/',\r\n  UpdateMasterEquipment: 'http://10.10.0.147/BioMedicalAPI/api/MasterEquipment/',\r\n  DeleteMasterEquipment: 'http://10.10.0.147/BioMedicalAPI/api/MasterEquipment/',\r\n  GetVendors: 'http://10.10.0.147/BioMedicalAPI/api/Vendor',\r\n  AddNewWorkOrder: 'http://10.10.0.147/BioMedicalAPI/api/WorkOrder',\r\n  AddNewMaintenance: 'http://10.10.0.147/BioMedicalAPI/api/Maintenance',\r\n  AddNewSparePart: 'http://10.10.0.147/BioMedicalAPI/api/SparePart',\r\n  GetAllRequestStatus: 'http://10.10.0.147/BioMedicalAPI/api/WorkOrder/GetAllRequestStatus',\r\n  deleteWorkOrder: 'http://10.10.0.147/BioMedicalAPI/api/WorkOrder/',\r\n  createNewStatus: 'http://10.10.0.147/BioMedicalAPI/api/ServiceRequests/createRequestStatus',\r\n  getAllOworkOrders: 'http://10.10.0.147/BioMedicalAPI/api/WorkOrder/',\r\n  GetMaintenance: 'http://10.10.0.147/BioMedicalAPI/api/Maintenance/',\r\n  getOneWorkOrder: 'http://10.10.0.147/BioMedicalAPI/api/WorkOrder/',\r\n  GetSparePart: 'http://10.10.0.147/BioMedicalAPI/api/SparePart/',\r\n  UpdateWorkOrder: 'http://10.10.0.147/BioMedicalAPI/api/WorkOrder/',\r\n  UpdateMaintenance: 'http://10.10.0.147/BioMedicalAPI/api/Maintenance/',\r\n  DeleteWorkOrder: 'http://10.10.0.147/BioMedicalAPI/api/WorkOrder/',\r\n  AddWorkOrderWithoutRequest: 'http://10.10.0.147/BioMedicalAPI/api/WorkOrder/AddWorkOrderWithoutRequest',\r\n  getOrdersWithoutRequest: 'http://10.10.0.147/BioMedicalAPI/api/WorkOrder/GetAllOrdersWithoutRequest',\r\n  Closeorder: 'http://10.10.0.147/BioMedicalAPI/api/WorkOrder/CloseWorkOrder/',\r\n  forgetPassword: 'http://10.10.0.147/BioMedicalAPI/api/Authenticate/forgetPassword/',\r\n  resetpassword: 'http://10.10.0.147/BioMedicalAPI/api/Authenticate/ResetPassword/',\r\n  GetAllContracts: 'http://10.10.0.147/BioMedicalAPI/api/contract/',\r\n  AddContract: 'http://10.10.0.147/BioMedicalAPI/api/contract/',\r\n  DeleteContract: 'http://10.10.0.147/BioMedicalAPI/api/contract/',\r\n  UpdateContract: 'http://10.10.0.147/BioMedicalAPI/api/contract/',\r\n  GetAllEquipmentCoverages: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentCoverage/',\r\n  AddEquipmentCoverage: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentCoverage/',\r\n  DeleteEquipmentCoverage: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentCoverage/',\r\n  UpdateEquipmentCoverage: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentCoverage/',\r\n  GetAllSpareParts: 'http://10.10.0.147/BioMedicalAPI/api/SparePart/',\r\n  AddSparePart: 'http://10.10.0.147/BioMedicalAPI/api/SparePart/',\r\n  DeleteSparePart: 'http://10.10.0.147/BioMedicalAPI/api/SparePart/',\r\n  UpdateSparePart: 'http://10.10.0.147/BioMedicalAPI/api/SparePart/',\r\n  GetAllecriCodes: 'http://10.10.0.147/BioMedicalAPI/api/ecri/',\r\n  updateEcriCode: 'http://10.10.0.147/BioMedicalAPI/api/ecri/',\r\n  deleteEcriCode: 'http://10.10.0.147/BioMedicalAPI/api/ecri/',\r\n  addEcriCode: 'http://10.10.0.147/BioMedicalAPI/api/ecri/',\r\n  addNewecri: 'http://10.10.0.147/BioMedicalAPI/api/ecri/',\r\n  GetAllOrganization: 'http://10.10.0.147/BioMedicalAPI/api/Organization/',\r\n  AddOrganization: 'http://10.10.0.147/BioMedicalAPI/api/Organization/',\r\n  DeleteOrganization: 'http://10.10.0.147/BioMedicalAPI/api/Organization/',\r\n  UpdateOrganization: 'http://10.10.0.147/BioMedicalAPI/api/Organization/',\r\n  GetOrganization: 'http://10.10.0.147/BioMedicalAPI/api/Organization/',\r\n  GetHealthDirectoryIdByName: 'http://10.10.0.147/BioMedicalAPI/api/HealthDirectories/GetHealthDirectoryIdByName/',\r\n  GetAllUsersByOrganizationId: 'http://10.10.0.147/BioMedicalAPI/api/AllUsersByOrganizationId/',\r\n  GetAllUsersByHealthcareunitId: 'http://10.10.0.147/BioMedicalAPI/api/AllUsersByHealthcareunitId/',\r\n  GetAllUsersByhealthDirectoryId: 'http://10.10.0.147/BioMedicalAPI/api/AllUsersByhealthDirectoryId/',\r\n  GetAllUsersByhealthDistrictId: 'http://10.10.0.147/BioMedicalAPI/api/AllUsersByhealthDistrictId/',\r\n  GetAllHealthDitrictsByDirectoryName: 'http://10.10.0.147/BioMedicalAPI/api/HealthDistricts/AllHealthDistrictsByhealthDirectoryName/',\r\n  GetEquipmentAttachmentIDs: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentAttachments/upload/',\r\n  GetEquipmentAttachments: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentAttachments/getEquipAttachmentsWithNoEquipment',\r\n  GetImagePath: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentAttachments/getPathOfImage/',\r\n  DeleteAttach: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentAttachments/',\r\n  GetAttachmentsForMasterEquipment: 'http://10.10.0.147/BioMedicalAPI/api/MasterEquipmentAttachment/getAttachmentsWithNoMasterEquipment/',\r\n  GetMasterEquipmentAttachmentIDs: 'http://10.10.0.147/BioMedicalAPI/api/MasterEquipmentAttachment/Masterupload/',\r\n  GetAttachmentsForMEquipment: 'http://10.10.0.147/BioMedicalAPI/api/MasterEquipmentAttachment/getAttachmentsForMasterEquipment/',\r\n  DeleteMasterAttach: 'http://10.10.0.147/BioMedicalAPI/api/MasterEquipmentAttachment/',\r\n  getMasterByBrand: \"http://10.10.0.147/BioMedicalAPI/api/MasterEquipment/GetMasterByBrands/\",\r\n  GetEquipmentBymaster: \"http://10.10.0.147/BioMedicalAPI/api/Equipments/GetmasterEquipment/\",\r\n  GetALLSubOrganization: 'http://10.10.0.147/BioMedicalAPI/api/subOrganization/',\r\n  AddNewSubOrganization: 'http://10.10.0.147/BioMedicalAPI/api/subOrganization/',\r\n  updateSubOrganization: 'http://10.10.0.147/BioMedicalAPI/api/subOrganization/',\r\n  deleteSubOrganization: 'http://10.10.0.147/BioMedicalAPI/api/subOrganization/',\r\n  GetSubOrganization: 'http://10.10.0.147/BioMedicalAPI/api/subOrganization/',\r\n  GetAttachmentsForEquipment: 'http://10.10.0.147/BioMedicalAPI/api/EquipmentAttachments/getEquipAttachmentsForEquipment/',\r\n  GetEquipmentEmployee: 'http://10.10.0.147/BioMedicalAPI/api/User/GetEquipmentemployees/',\r\n  GetUsersByEquipmentId: 'http://10.10.0.147/BioMedicalAPI/api/user/GetEquipmentemployees/',\r\n  GetAllByHospital: 'http://10.10.0.147/BioMedicalAPI/api/Equipments/GetEquipmentByHospital/',\r\n  CreateQr: 'http://10.10.0.147/BioMedicalAPI/api/QRCoder/Index/',\r\n  AddInInventory:'http://10.10.0.147/BioMedicalAPI/api/Inventory/',\r\n  getAllInventories:'http://10.10.0.147/BioMedicalAPI/api/Inventory/',\r\n  GetEquipmentsOnGovernorate:'http://10.10.0.147/BioMedicalAPI/api/Equipments/GetEquipByGovernorate/',\r\n  GetEquipmentsOnCity:'http://10.10.0.147/BioMedicalAPI/api/Equipments/GetEquipByDistrict/',\r\n  GetEquipmentsOnOrganization:'http://10.10.0.147/BioMedicalAPI/api/Equipments/GetEquipByOrganization/',\r\n  GetEquipmentsOnSupplier:'http://10.10.0.147/BioMedicalAPI/api/Equipments/GetEquipBySupplier/',\r\n  FilterData:'http://10.10.0.147/BioMedicalAPI/api/Equipments/FilterEquipment/',\r\n  GetHealthDistrictsIdbyName:'http://10.10.0.147/BioMedicalAPI/api/HealthDistricts/GetHealthDistrictsIdbyName/',\r\n  GetAllEquipmentswithscanningDate:'http://10.10.0.147/BioMedicalAPI/api/Equipments/scanningDate/',\r\n  GetAllscannedequipments:'http://10.10.0.147/BioMedicalAPI/api/Equipments/group',\r\n  GetAllEquipmentsforinventory: 'http://10.10.0.147/BioMedicalAPI/api/Equipments/inventories/', \r\n  addEquipmentRecall:'http://10.10.0.147/BioMedicalAPI/api/EquipmentRecall',\r\n  GetAllRecalledEquipments:'http://10.10.0.147/BioMedicalAPI/api/Equipments/recalledEqs',\r\n  getEquipmentInHospital:'http://10.10.0.147/BioMedicalAPI/api/Equipments/GetEquipmentInHospital/',\r\n  AddContractRequest:'http://10.10.0.147/BioMedicalAPI/api/ContractRequest/',\r\n  AddOrganizationContractRequest:'http://10.10.0.147/BioMedicalAPI/api/ContractRequest/AddOrganizationRequest/',\r\n  getHosForOrganization:'http://10.10.0.147/BioMedicalAPI/api/ContractRequest/GethospitalsInOrganization/',\r\n  getRequestbetweenDates:'http://10.10.0.147/BioMedicalAPI/api/ContractRequest/getRequestBetweenDates/',\r\n  getRequestForUPA:'http://10.10.0.147/BioMedicalAPI/api/ContractRequest/getRequestForUPA/',\r\n  getEquipmentInContract:'http://10.10.0.147/BioMedicalAPI/api/Equipments/getEquipmentInContract/',\r\n  getOneContract:'http://10.10.0.147/BioMedicalAPI/api/Contract/',\r\n  EquipmentInContract:'http://10.10.0.147/BioMedicalAPI/api/Equipments/EquipmentInContract/',\r\n  getEquipmentsInContract:'http://10.10.0.147/BioMedicalAPI/api/Equipments/getEquipmentsInContract/',\r\n  getRequestInHospitals:'http://10.10.0.147/BioMedicalAPI/api/ContractRequest/GetRequestInHospital/',\r\n  getCountOfRequestInHospital:'http://10.10.0.147/BioMedicalAPI/api/ContractRequest/getcount/',\r\n  updateRequestStatus:'http://10.10.0.147/BioMedicalAPI/api/ContractRequest/UpdateRequestStatus/',\r\n  getRequest:'http://10.10.0.147/BioMedicalAPI/api/ContractRequest/getRequest/',\r\n  updateContractRequest:'http://10.10.0.147/BioMedicalAPI/api/ContractRequest/PutContractRequest/',\r\n  getEquipmentInHospitalToEdit:'http://10.10.0.147/BioMedicalAPI/api/Equipments/getEquipmentInHospitalToEdit/',\r\n  delete:'http://10.10.0.147/BioMedicalAPI/api/ContractRequest/Delete/',\r\n  getEquipmentcount:'http://10.10.0.147/BioMedicalAPI/api/MasterEquipment/getcount/',\r\n  GetAllEquipmentWithPaging: 'http://10.10.0.147/BioMedicalAPI/api/Equipments/GetEquipmentsWithPaging/',\r\n  arcgisServerUrl: 'http://10.10.0.147/arcgis/rest/services/',\r\n  GetAllMasterEquipmentWithPaging: 'http://10.10.0.147/BioMedicalAPI/api/MasterEquipment/GetMasterEquipmentsWithPaging/',\r\n  getcount:'http://10.10.0.147/BioMedicalAPI/api/MasterEquipment/getcount/',\r\n  getOrganizationscount:'http://10.10.0.147/BioMedicalAPI/api/Organization/getcount',\r\n  GetAllOrganizationWithPaging:'http://10.10.0.147/BioMedicalAPI/api/Organization/GetOrganizationsWithPaging/',\r\n  getUserscount:'http://10.10.0.147/BioMedicalAPI/api/User/getcount/',\r\n  getAllUserswithpaging:'http://10.10.0.147/BioMedicalAPI/api/User/GetUsersWithPaging/',\r\n  GetHospitalsCount:'http://10.10.0.147/BioMedicalAPI/api/HealthCareUnits/getcount/',\r\n  GetAllHospitalsWithPaging:'http://10.10.0.147/BioMedicalAPI/api/HealthCareUnits/GetHospitalsWithPaging',\r\n  getSubOrgscount:'http://10.10.0.147/BioMedicalAPI/api/subOrganization/getcount',\r\n  GetAllSubOrgsWithPaging:'http://10.10.0.147/BioMedicalAPI/api/subOrganization/GetSubOrgsWithPaging/',\r\n  APIUrl: 'http://10.10.0.147/BioMedicalAPI/api/',\r\n  // Drug: 'http://localhost:51563/api/drugs/',\r\n  /********************************************************************/\r\n\r\n\r\n  // GetAllEquipments: 'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/',\r\n  // GetOneEquipment: 'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/',\r\n  // GetEquipmentAttachmentIDs:'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentAttachments/upload/',\r\n  // //upload:'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentAttachments/upload/',\r\n  // GetEquipmentAttachments:'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentAttachments/getEquipAttachmentsWithNoEquipment',\r\n  // AddNewEquipments: 'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/',\r\n  // DeleteEquipment: 'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/',\r\n  // UpdateEquipment: 'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/',\r\n  // GetAllHealthCareUnits: 'http://biomedicalupd-001-site1.itempurl.com/api/HealthCareUnits/',\r\n  // DeleteHealthCareUnit: 'http://biomedicalupd-001-site1.itempurl.com/api/HealthCareUnits/',\r\n  // updateHealthCareUnit: 'http://biomedicalupd-001-site1.itempurl.com/api/HealthCareUnits/',\r\n  // GetAllHealthCareUnitsByDistrictId: 'http://biomedicalupd-001-site1.itempurl.com/api/HealthCareUnits/GetHealthCareUnitsByDistrictId/',\r\n  // GetByDirectoryId:'http://biomedicalupd-001-site1.itempurl.com/api/HealthDistricts/getHealthDirectoryBydirId/',\r\n  // addNewUnit: 'http://biomedicalupd-001-site1.itempurl.com/api/HealthCareUnits/',\r\n  // GetAllStatuses: 'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentStatus/',\r\n  // GetAllPriorities: 'http://biomedicalupd-001-site1.itempurl.com/api/Priorities/',\r\n  // GetAllManufacturers: 'http://biomedicalupd-001-site1.itempurl.com/api/Manufacturers/',\r\n  // GetAllOrigins: 'http://biomedicalupd-001-site1.itempurl.com/api/Origins/',\r\n  // GetAllCategories: 'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentCategories/',\r\n  // GetSubCategories: 'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentSubCategories/',\r\n  // GetAllSubCategories: 'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentSubCategories/AllSubCategoriesBycategoryId/',\r\n  // GetAllDepartments: 'http://biomedicalupd-001-site1.itempurl.com/api/Departments/',\r\n  // GetAllSuppliers: 'http://biomedicalupd-001-site1.itempurl.com/api/Suppliers/',\r\n  // GetEquipment: 'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/',\r\n  // UploadImg: 'http://biomedicalupd-001-site1.itempurl.com/api/ImgUpload/',\r\n  // GetAllServiceRequests: 'http://biomedicalupd-001-site1.itempurl.com/api/ServiceRequests/',\r\n  // GetAllRequestsByDirectory: 'http://biomedicalupd-001-site1.itempurl.com/api/ServiceRequests/GetAllRequestsByDirectory/',\r\n  // MakeRequest: 'http://biomedicalupd-001-site1.itempurl.com/api/ServiceRequests',\r\n  // UpdateRequest: 'http://biomedicalupd-001-site1.itempurl.com/api/ServiceRequests/',\r\n  // DeleteRequest: 'http://biomedicalupd-001-site1.itempurl.com/api/ServiceRequests/',\r\n  // Register: 'http://biomedicalupd-001-site1.itempurl.com/api/authenticate/register/',\r\n  // Login: 'http://biomedicalupd-001-site1.itempurl.com/api/authenticate/login/',\r\n  // GetUsers: 'http://biomedicalupd-001-site1.itempurl.com/api/User/',\r\n  // getUserscount:'http://biomedicalupd-001-site1.itempurl.com/api/User/getcount/',\r\n  // getAllUserswithpaging:'http://biomedicalupd-001-site1.itempurl.com/api/User/GetUsersWithPaging/',\r\n  // getUserById: 'http://biomedicalupd-001-site1.itempurl.com/api/User/GetUserById/',\r\n  // DeleteUser: 'http://biomedicalupd-001-site1.itempurl.com/api/User/',\r\n  // GetUnregisteredUsers: 'http://biomedicalupd-001-site1.itempurl.com/api/User/GetUnregisteredUsers/',\r\n  // GetAllRoles: 'http://biomedicalupd-001-site1.itempurl.com/api/User/GetAllRoles/',\r\n  // getRoleById: 'http://biomedicalupd-001-site1.itempurl.com/api/User/GetRoleById/',\r\n  // getEmployeeByMail: 'http://biomedicalupd-001-site1.itempurl.com/api/Employees/GetEmployeeNyMail/',\r\n  // UpdateRole: 'http://biomedicalupd-001-site1.itempurl.com/api/authenticate/ChangeRole/',\r\n  // GetAllHealthDirectories: 'http://biomedicalupd-001-site1.itempurl.com/api/HealthDirectories/',\r\n  // GetAllHealthDitricts: 'http://biomedicalupd-001-site1.itempurl.com/api/HealthDistricts/AllHealthDistrictsByhealthDirectoryId/',\r\n  // GetAllHealthDitrictsByDirectoryName: 'http://biomedicalupd-001-site1.itempurl.com/api/HealthDistricts/AllHealthDistrictsByhealthDirectoryName/',\r\n  // GetHealthDirectoryIdByName:'http://biomedicalupd-001-site1.itempurl.com/api/HealthDirectories/GetHealthDirectoryIdByName/',\r\n  // GetHealthDistrictsIdbyName:'http://biomedicalupd-001-site1.itempurl.com/api/HealthDistricts/GetHealthDistrictsIdbyName/',\r\n  // GetHealthDitricts: 'http://biomedicalupd-001-site1.itempurl.com/api/HealthDistricts/',\r\n  // GetAllHealthCareUnitById:'http://biomedicalupd-001-site1.itempurl.com/api/HealthCareUnits/',\r\n  // GetAllModes: 'http://biomedicalupd-001-site1.itempurl.com/api/Mode/',\r\n  // GetAllEquimentsByEmp: 'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/GetAllEquimentsByEmp/',\r\n  // AddNewCategory: 'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentCategories/',\r\n  // updateCategory: 'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentCategories/',\r\n  // deleteCategory: 'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentCategories/',\r\n  // AddNewSubCategory: 'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentSubCategories/',\r\n  // updateSubCategory: 'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentSubCategories/',\r\n  // deleteSubCategory: 'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentSubCategories/',\r\n  // addNewOrigin: 'http://biomedicalupd-001-site1.itempurl.com/api/Origins/',\r\n  // updateOrigin: 'http://biomedicalupd-001-site1.itempurl.com/api/Origins/',\r\n  // deleteOrigin: 'http://biomedicalupd-001-site1.itempurl.com/api/Origins/',\r\n  // addNewManufacturer: 'http://biomedicalupd-001-site1.itempurl.com/api/Manufacturers/',\r\n  // updateManufacturer: 'http://biomedicalupd-001-site1.itempurl.com/api/Manufacturers/',\r\n  // deleteManufacturer: 'http://biomedicalupd-001-site1.itempurl.com/api/Manufacturers/',\r\n  // addNewStatus: 'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentStatus/',\r\n  // updateStatus: 'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentStatus/',\r\n  // deleteStatus: 'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentStatus/',\r\n  // addNewPriority: 'http://biomedicalupd-001-site1.itempurl.com/api/Priorities/',\r\n  // updatePriority: 'http://biomedicalupd-001-site1.itempurl.com/api/Priorities/',\r\n  // deletePriority: 'http://biomedicalupd-001-site1.itempurl.com/api/Priorities/',\r\n  // addNewDepartment: 'http://biomedicalupd-001-site1.itempurl.com/api/Departments',\r\n  // updateDepartment: 'http://biomedicalupd-001-site1.itempurl.com/api/Departments/',\r\n  // deleteDepartment: 'http://biomedicalupd-001-site1.itempurl.com/api/Departments/',\r\n  // addNewSupplier: 'http://biomedicalupd-001-site1.itempurl.com/api/Suppliers/',\r\n  // updateSupplier: 'http://biomedicalupd-001-site1.itempurl.com/api/Suppliers/',\r\n  // deleteSupplier: 'http://biomedicalupd-001-site1.itempurl.com/api/Suppliers/',\r\n  // addNewMode: 'http://biomedicalupd-001-site1.itempurl.com/api/Mode/',\r\n  // updateMode: 'http://biomedicalupd-001-site1.itempurl.com/api/Mode/',\r\n  // deleteMode: 'http://biomedicalupd-001-site1.itempurl.com/api/Mode/',\r\n  // CreateRoles: 'http://biomedicalupd-001-site1.itempurl.com/api/User/CreateRoles/',\r\n  // AddNewMasterEquipments: 'http://biomedicalupd-001-site1.itempurl.com/api/MasterEquipment/',\r\n  // GetAllMasterEquipment: 'http://biomedicalupd-001-site1.itempurl.com/api/MasterEquipment/',\r\n  // UpdateMasterEquipment: 'http://biomedicalupd-001-site1.itempurl.com/api/MasterEquipment/',\r\n  // DeleteMasterEquipment: 'http://biomedicalupd-001-site1.itempurl.com/api/MasterEquipment/',\r\n  // GetVendors: 'http://biomedicalupd-001-site1.itempurl.com/api/Vendor',\r\n  // AddNewWorkOrder: 'http://biomedicalupd-001-site1.itempurl.com/api/WorkOrder',\r\n  // AddNewMaintenance: 'http://biomedicalupd-001-site1.itempurl.com/api/Maintenance',\r\n  // AddNewSparePart: 'http://biomedicalupd-001-site1.itempurl.com/api/SparePart',\r\n  // GetAllRequestStatus: 'http://biomedicalupd-001-site1.itempurl.com/api/WorkOrder/GetAllRequestStatus',\r\n  // deleteWorkOrder: 'http://biomedicalupd-001-site1.itempurl.com/api/WorkOrder/',\r\n  // createNewStatus: 'http://biomedicalupd-001-site1.itempurl.com/api/ServiceRequests/createRequestStatus',\r\n  // getAllOworkOrders: 'http://biomedicalupd-001-site1.itempurl.com/api/WorkOrder/',\r\n  // GetMaintenance: 'http://biomedicalupd-001-site1.itempurl.com/api/Maintenance/',\r\n  // getOneWorkOrder: 'http://biomedicalupd-001-site1.itempurl.com/api/WorkOrder/',\r\n  // GetSparePart: 'http://biomedicalupd-001-site1.itempurl.com/api/SparePart/',\r\n  // UpdateWorkOrder: 'http://biomedicalupd-001-site1.itempurl.com/api/WorkOrder/',\r\n  // UpdateMaintenance: 'http://biomedicalupd-001-site1.itempurl.com/api/Maintenance/',\r\n  // DeleteWorkOrder: 'http://biomedicalupd-001-site1.itempurl.com/api/WorkOrder/',\r\n  // AddWorkOrderWithoutRequest: 'http://biomedicalupd-001-site1.itempurl.com/api/WorkOrder/AddWorkOrderWithoutRequest',\r\n  // getOrdersWithoutRequest: 'http://biomedicalupd-001-site1.itempurl.com/api/WorkOrder/GetAllOrdersWithoutRequest',\r\n  // Closeorder: 'http://biomedicalupd-001-site1.itempurl.com/api/WorkOrder/CloseWorkOrder/',\r\n  // forgetPassword: 'http://biomedicalupd-001-site1.itempurl.com/api/Authenticate/forgetPassword/',\r\n  // resetpassword: 'http://biomedicalupd-001-site1.itempurl.com/api/Authenticate/ResetPassword/',\r\n  // GetAllContracts: 'http://biomedicalupd-001-site1.itempurl.com/api/contract/',\r\n  // AddContract: 'http://biomedicalupd-001-site1.itempurl.com/api/contract/',\r\n  // DeleteContract: 'http://biomedicalupd-001-site1.itempurl.com/api/contract/',\r\n  // UpdateContract: 'http://biomedicalupd-001-site1.itempurl.com/api/contract/',\r\n  // GetAllEquipmentCoverages: 'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentCoverage/',\r\n  // AddEquipmentCoverage: 'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentCoverage/',\r\n  // DeleteEquipmentCoverage: 'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentCoverage/',\r\n  // UpdateEquipmentCoverage: 'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentCoverage/',\r\n  // GetAllSpareParts: 'http://biomedicalupd-001-site1.itempurl.com/api/SparePart/',\r\n  // AddSparePart: 'http://biomedicalupd-001-site1.itempurl.com/api/SparePart/',\r\n  // DeleteSparePart: 'http://biomedicalupd-001-site1.itempurl.com/api/SparePart/',\r\n  // UpdateSparePart: 'http://biomedicalupd-001-site1.itempurl.com/api/SparePart/',\r\n  // GetAllecriCodes:'http://biomedicalupd-001-site1.itempurl.com/api/ecri/',\r\n  // updateEcriCode:'http://biomedicalupd-001-site1.itempurl.com/api/ecri/',\r\n  // deleteEcriCode:'http://biomedicalupd-001-site1.itempurl.com/api/ecri/',\r\n  // addEcriCode:'http://biomedicalupd-001-site1.itempurl.com/api/ecri/',\r\n  // addNewecri:'http://biomedicalupd-001-site1.itempurl.com/api/ecri/',\r\n  // GetAllOrganization:'http://biomedicalupd-001-site1.itempurl.com/api/Organization/',\r\n  // AddOrganization:'http://biomedicalupd-001-site1.itempurl.com/api/Organization/',\r\n  // DeleteOrganization:'http://biomedicalupd-001-site1.itempurl.com/api/Organization/',\r\n  // UpdateOrganization:'http://biomedicalupd-001-site1.itempurl.com/api/Organization/', \r\n  // GetOrganization:'http://biomedicalupd-001-site1.itempurl.com/api/Organization/',\r\n  // GetAllUsersByHealthcareunitId:'http://biomedicalupd-001-site1.itempurl.com/api/AllUsersByHealthcareunitId/',\r\n  // GetAllUsersByhealthDirectoryId:'http://biomedicalupd-001-site1.itempurl.com/api/AllUsersByhealthDirectoryId/',\r\n  // GetAllUsersByhealthDistrictId:'http://biomedicalupd-001-site1.itempurl.com/api/AllUsersByhealthDistrictId/',\r\n  // GetAllUsersByOrganizationId:'http://biomedicalupd-001-site1.itempurl.com/api/AllUsersByOrganizationId/',\r\n  // GetAllEcris:'http://biomedicalupd-001-site1.itempurl.com/api/Ecri/GetAllEcris',\r\n  // GetALLSubOrganization:' http://biomedicalupd-001-site1.itempurl.com/api/subOrganization/',\r\n  // AddNewSubOrganization: 'http://biomedicalupd-001-site1.itempurl.com/api/subOrganization/',\r\n  // updateSubOrganization: 'http://biomedicalupd-001-site1.itempurl.com/api/subOrganization/',\r\n  // deleteSubOrganization: 'http://biomedicalupd-001-site1.itempurl.com/api/subOrganization/',\r\n  // GetSubOrganization:'http://biomedicalupd-001-site1.itempurl.com/api/subOrganization/',\r\n  // GetAttachmentsForEquipment:'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentAttachments/getEquipAttachmentsForEquipment/',\r\n  // GetEquipmentEmployee: 'http://biomedicalupd-001-site1.itempurl.com/api/User/GetEquipmentemployees/',\r\n  // GetImagePath:'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentAttachments/getPathOfImage/',\r\n  // DeleteAttach:'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentAttachments/',\r\n  // GetAttachmentsForMasterEquipment:'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentAttachments/getEquipAttachmentsWithNoEquipment/',\r\n  // GetMasterEquipmentAttachmentIDs:'http://biomedicalupd-001-site1.itempurl.com/api/MasterEquipmentAttachment/Masterupload/',\r\n  // GetAttachmentsForMEquipment: 'http://biomedicalupd-001-site1.itempurl.com/api/MasterEquipmentAttachment/getAttachmentsForMasterEquipment/',\r\n  // DeleteMasterAttach: 'http://biomedicalupd-001-site1.itempurl.com/api/MasterEquipmentAttachment/',\r\n  // getMasterByBrand: \"http://biomedicalupd-001-site1.itempurl.com/api/MasterEquipment/GetMasterByBrands/\",\r\n  // GetEquipmentBymaster: \"http://biomedicalupd-001-site1.itempurl.com/api/Equipments/GetmasterEquipment/\",\r\n  // GetUsersByEquipmentId: 'http://biomedicalupd-001-site1.itempurl.com/api/user/GetEquipmentemployees/',\r\n  // GetAllByHospital: 'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/GetEquipmentByHospital/',\r\n  // CreateQr: 'http://biomedicalupd-001-site1.itempurl.com/api/QRCoder/Index/',\r\n  // AddInInventory:'http://biomedicalupd-001-site1.itempurl.com/api/Inventory/',\r\n  // getAllInventories:'http://biomedicalupd-001-site1.itempurl.com/api/Inventory/',\r\n  // GetEquipmentsOnGovernorate:'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/GetEquipByGovernorate/',\r\n  // GetEquipmentsOnCity:'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/GetEquipByDistrict/',\r\n  // GetEquipmentsOnOrganization:'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/GetEquipByOrganization/',\r\n  // GetEquipmentsOnSupplier:'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/GetEquipBySupplier/',\r\n  // FilterData:'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/FilterEquipment/',\r\n  // GetAllEquipmentswithscanningDate:'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/scanningDate/',\r\n  // GetAllscannedequipments:'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/group',\r\n  // GetAllEquipmentsforinventory: 'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/inventories/', \r\n  // addEquipmentRecall:'http://biomedicalupd-001-site1.itempurl.com/api/EquipmentRecall',\r\n  // GetAllRecalledEquipments:'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/recalledEqs',\r\n  // getEquipmentInHospital:'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/GetEquipmentInHospital/',\r\n  // AddContractRequest:'http://biomedicalupd-001-site1.itempurl.com/api/ContractRequest/',\r\n  // AddOrganizationContractRequest:'http://biomedicalupd-001-site1.itempurl.com/api/ContractRequest/AddOrganizationRequest/',\r\n  // getHosForOrganization:'http://biomedicalupd-001-site1.itempurl.com/api/ContractRequest/GethospitalsInOrganization/',\r\n  // getRequestbetweenDates:'http://biomedicalupd-001-site1.itempurl.com/api/ContractRequest/getRequestBetweenDates/',\r\n  // getRequestForUPA:'http://biomedicalupd-001-site1.itempurl.com/api/ContractRequest/getRequestForUPA/',\r\n  // getEquipmentInContract:'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/getEquipmentInContract/',\r\n  // getOneContract:'http://biomedicalupd-001-site1.itempurl.com/api/Contract/',\r\n  // EquipmentInContract:'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/EquipmentInContract/',\r\n  // getEquipmentsInContract:'http://biomedicalupd-001-site1.itempurl.com/api/Equipments/getEquipmentsInContract/',\r\n  // GetAllMasterEquipmentWithPaging: 'http://biomedicalupd-001-site1.itempurl.com/api/MasterEquipment/GetMasterEquipmentsWithPaging/',\r\n  // getcount:'http://biomedicalupd-001-site1.itempurl.com/api/MasterEquipment/getcount/',\r\n};\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { scanningDateVm, scanningequipmentVM } from '../Models/Equipment';\r\nimport { CityVM, Equipment, EquipmentVM, filterDto, GovernorateVM, HospitalVM, OrganizationVM, SupplierVM } from '../Models/Equipment';\r\nimport { EquipmentRecall } from '../Models/equipment-recall';\r\nimport { EquipmentAttachments } from '../Models/EquipmentAttachments';\r\nimport { MasterEquipment } from '../Models/MasterEquipment';\r\nimport { Organization } from '../Models/Organization';\r\nimport { Paging } from '../Models/Paging';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EquipmentService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n  httpHeader = {\r\n    headers: new HttpHeaders({\r\n      'content-type': 'application/json',\r\n      'Accept': '*/*'\r\n    })\r\n  };\r\n\r\n  getAllEquipments(): Observable<Equipment[]> {\r\n    return this.httpClient.get<Equipment[]>(`${environment.GetAllEquipments}`, this.httpHeader);\r\n  }\r\n  GetAllEquipmentsforinventory(): Observable<Equipment[]> {\r\n    return this.httpClient.get<Equipment[]>(`${environment.GetAllEquipmentsforinventory}`, this.httpHeader);\r\n  }\r\n  getAllEquipmentswithscanningDate(): Observable<Equipment[]> {\r\n    return this.httpClient.get<Equipment[]>(`${environment.GetAllEquipmentswithscanningDate}`, this.httpHeader);\r\n\r\n  }\r\n  getcount():Observable<number>\r\n  {\r\n    return this.httpClient.get<number>(`${environment.getEquipmentcount}`);\r\n  }\r\n  getAllwithpaging(page:Paging):Observable<Equipment[]>\r\n  {\r\n    return this.httpClient.put<Equipment[]>(`${environment.GetAllEquipmentWithPaging}`,page,this.httpHeader);\r\n  }\r\n  addNewEquipments(newEquipment: Equipment): Observable<Equipment> {\r\n    return this.httpClient.post<Equipment>(`${environment.AddNewEquipments}`, newEquipment, this.httpHeader);\r\n  }\r\n  deleteEquipment(id: any): Observable<Equipment> {\r\n    return this.httpClient.delete<Equipment>(`${environment.DeleteEquipment}${id}`, this.httpHeader);\r\n  }\r\n  updateEquipment(id: number, equipment: Equipment): Observable<any> {\r\n    return this.httpClient.put<any>(`${environment.UpdateEquipment}${id}`, equipment, this.httpHeader);\r\n  }\r\n  // getEquipmentsByemp(email:string):Observable<Equipment[]>{\r\n  //   return this.httpClient.get<Equipment[]>(`${environment.GetAllEquimentsByEmp}${email}`,this.httpHeader);\r\n  // }\r\n  getEquipmentById(id: number): Observable<Equipment> {\r\n    return this.httpClient.get<Equipment>(`${environment.GetOneEquipment}${id}`, this.httpHeader);\r\n  }\r\n  getEquipmentAttachmentIDs(event: string[]): Observable<number[]> {\r\n    return this.httpClient.post<number[]>(`${environment.GetEquipmentAttachmentIDs}${event}`, this.httpHeader);\r\n  }\r\n  getAllAttachWithNoEquipment(): Observable<EquipmentAttachments[]> {\r\n    return this.httpClient.get<EquipmentAttachments[]>(`${environment.GetEquipmentAttachments}`, this.httpHeader);\r\n  }\r\n  getAllAttachForEquipment(equipId: number): Observable<EquipmentAttachments[]> {\r\n    return this.httpClient.get<EquipmentAttachments[]>(`${environment.GetAttachmentsForEquipment}${equipId}`, this.httpHeader);\r\n  }\r\n  getImagePath(Img: string): Observable<string> {\r\n    return this.httpClient.get<string>(`${environment.GetImagePath}${Img}`, this.httpHeader);\r\n  }\r\n  DeleteAttachment(id: number): Observable<EquipmentAttachments> {\r\n    return this.httpClient.delete<EquipmentAttachments>(`${environment.DeleteAttach}${id}`, this.httpHeader);\r\n  }\r\n  GetAllBymaster(brandId: number): Observable<Equipment[]> {\r\n    return this.httpClient.get<Equipment[]>(`${environment.GetEquipmentBymaster}${brandId}`, this.httpHeader);\r\n  }\r\n  /*getAllMasterEquipment()\r\n  {\r\n    return this.httpClient.get<MasterEquipment[]>(`${environment.GetAllMasterEquipment}`);\r\n  }*/\r\n  GetAllByHospital(data: Equipment[]): Observable<HospitalVM[]> {\r\n    return this.httpClient.post<HospitalVM[]>(`${environment.GetAllByHospital}`, data, this.httpHeader);\r\n  }\r\n  getScannedDateWithequipmentsgroups(): Observable<scanningDateVm[]> {\r\n    return this.httpClient.get<scanningDateVm[]>(`${environment.GetAllscannedequipments}`, this.httpHeader);\r\n  }\r\n\r\n  GetEquipmentsOnGovernorate(data: Equipment[]): Observable<GovernorateVM[]> {\r\n    return this.httpClient.post<GovernorateVM[]>(`${environment.GetEquipmentsOnGovernorate}`, data, this.httpHeader);\r\n  }\r\n  GetEquipmentsOnDistrict(data: Equipment[]): Observable<CityVM[]> {\r\n    return this.httpClient.post<CityVM[]>(`${environment.GetEquipmentsOnCity}`, data, this.httpHeader);\r\n  }\r\n  GetEquipmentsOnOrganization(data: Equipment[]): Observable<OrganizationVM[]> {\r\n    return this.httpClient.post<OrganizationVM[]>(`${environment.GetEquipmentsOnOrganization}`, data, this.httpHeader);\r\n  }\r\n  GetEquipmentsOnSupplier(data: Equipment[]): Observable<SupplierVM[]> {\r\n    return this.httpClient.post<SupplierVM[]>(`${environment.GetEquipmentsOnSupplier}`, data, this.httpHeader);\r\n  }\r\n  FilterData(data: filterDto): Observable<Equipment[]> {\r\n    return this.httpClient.post<Equipment[]>(`${environment.FilterData}`, data, this.httpHeader);\r\n  }\r\n  addEquipmentRecall(recallRequest: EquipmentRecall): Observable<EquipmentRecall> {\r\n    return this.httpClient.post<EquipmentRecall>(`${environment.addEquipmentRecall}`, recallRequest, this.httpHeader)\r\n\r\n  }\r\n  GetAllRecalledEquipments(): Observable<Equipment[]> {\r\n    return this.httpClient.get<Equipment[]>(`${environment.GetAllRecalledEquipments}`, this.httpHeader)\r\n  }\r\n  getEquipmentInHospital(hosId: number): Observable<Equipment[]> {\r\n    return this.httpClient.get<Equipment[]>(`${environment.getEquipmentInHospital}${hosId}`, this.httpHeader);\r\n  }\r\n  getEquipmentInHospitalToEdit(equipment: Equipment[],hosId:number): Observable<Equipment[]>\r\n  {\r\n    return this.httpClient.put<Equipment[]>(`${environment.getEquipmentInHospitalToEdit}${hosId}`,equipment, this.httpHeader);\r\n  }\r\n  // upload(id:number):Observable<any>\r\n  // {\r\n  //   return this.httpClient.post<any>(`${environment.upload}${id}`, this.httpHeader)\r\n  // }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HealthCareUnit } from '../Models/HealthCareUnit';\r\nimport { Status } from '../Models/Status';\r\nimport { Priority } from '../Models/Priority';\r\nimport { Manufacturer } from '../Models/Manufacturer';\r\nimport { Origin } from '../Models/Origin';\r\nimport { Category } from '../Models/Category';\r\nimport { SubCategory } from '../Models/SubCategory';\r\nimport { Department } from '../Models/Department';\r\nimport { Supplier } from '../Models/Supplier';\r\nimport { Employee } from '../Models/Employee';\r\nimport { healthDirectory } from '../Models/healthDirectory';\r\nimport { Mode } from '../Models/Mode';\r\nimport { HealthDistrict } from '../Models/HealthDistrict';\r\nimport { Miantenance } from '../Models/Miantenance';\r\nimport { SparePart } from '../Models/SparePart';\r\nimport { EcriCode } from '../Models/ecri-code';\r\nimport { Paging } from '../Models/Paging';\r\nimport { User } from '../Models/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SharedService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n  httpHeader = {\r\n    headers: new HttpHeaders({\r\n      'content-type': 'application/json',\r\n      'Accept': '*/*'\r\n    })\r\n  };\r\n\r\n  getAllunits(): Observable<HealthCareUnit[]> {\r\n    return this.httpClient.get<HealthCareUnit[]>(`${environment.GetAllHealthCareUnits}`, this.httpHeader);\r\n  }\r\n  getunitById(id:Number): Observable<HealthCareUnit> {\r\n    return this.httpClient.get<HealthCareUnit>(`${environment.GetAllHealthCareUnitById}${id}`, this.httpHeader);\r\n  }\r\n  getAllunitsByDistrictId(id:Number): Observable<HealthCareUnit[]> {\r\n    return this.httpClient.get<HealthCareUnit[]>(`${environment.GetAllHealthCareUnitsByDistrictId}${id}`, this.httpHeader);\r\n  }\r\n  // getDistrictBydistrictId(id:Number): Observable<HealthDistrict> {\r\n  //   return this.httpClient.get<HealthDistrict>(`${environment.GetByDistrictId}${id}`, this.httpHeader);\r\n  // }\r\n  getDirectorybydirectoryId(id:number):Observable<healthDirectory>{\r\n    return this.httpClient.get<healthDirectory>(`${environment.GetByDirectoryId}${id}`,this.httpHeader)\r\n  }\r\n  getAllstatuses(): Observable<Status[]> {\r\n    return this.httpClient.get<Status[]>(`${environment.GetAllStatuses}`, this.httpHeader);\r\n  }\r\n  getUserscount():Observable<number>\r\n  {\r\n    return this.httpClient.get<number>(`${environment.getUserscount}`);\r\n  }\r\n  getAllUserswithpaging(page:Paging):Observable<User[]>\r\n  {\r\n    return this.httpClient.put<User[]>(`${environment.getAllUserswithpaging}`,page,this.httpHeader);\r\n  }\r\n  getAllpriorities(): Observable<Priority[]> {\r\n    return this.httpClient.get<Priority[]>(`${environment.GetAllPriorities}`, this.httpHeader);\r\n  }\r\n  getAllmanufacturer(): Observable<Manufacturer[]> {\r\n    return this.httpClient.get<Manufacturer[]>(`${environment.GetAllManufacturers}`, this.httpHeader);\r\n  }\r\n  getAllOrigins(): Observable<Origin[]> {\r\n    return this.httpClient.get<Origin[]>(`${environment.GetAllOrigins}`, this.httpHeader);\r\n  }\r\n  getAllCategories(): Observable<Category[]> {\r\n    return this.httpClient.get<Category[]>(`${environment.GetAllCategories}`, this.httpHeader);\r\n  }\r\n  getSubCategories(): Observable<SubCategory[]> {\r\n    return this.httpClient.get<SubCategory[]>(`${environment.GetSubCategories}`, this.httpHeader);\r\n  }\r\n  getAllSubCategories(id:Number): Observable<SubCategory[]> {\r\n    return this.httpClient.get<SubCategory[]>(`${environment.GetAllSubCategories}${id}`, this.httpHeader);\r\n  }\r\n  getAllDepartments() {\r\n    return this.httpClient.get<Department[]>(`${environment.GetAllDepartments}`, this.httpHeader);\r\n  }\r\n  getAllSuppliers() {\r\n    return this.httpClient.get<Supplier[]>(`${environment.GetAllSuppliers}`, this.httpHeader);\r\n  }\r\n  // getAllEmployees() {\r\n  //   return this.httpClient.get<Employee[]>(`${environment.GetAllEmployees}`, this.httpHeader);\r\n  // }\r\n  getAllHealthDirectories() {\r\n    return this.httpClient.get<healthDirectory[]>(`${environment.GetAllHealthDirectories}`, this.httpHeader);\r\n  }\r\n  // getAllHealthDistricts() {\r\n  //   return this.httpClient.get<HealthDistrict[]>(`${environment.GetAllHealthDitricts}`, this.httpHeader);\r\n  // }\r\n  getAllHealthDistricts(id:Number) {\r\n    return this.httpClient.get<HealthDistrict[]>(`${environment.GetAllHealthDitricts}${id}`, this.httpHeader);\r\n  }\r\n  getAllHealthDistrictsByDirectoryName(name:string) {\r\n    return this.httpClient.get<HealthDistrict[]>(`${environment.GetAllHealthDitrictsByDirectoryName}${name}`, this.httpHeader);\r\n  }\r\n  getDirectoryIdByname(name:string)\r\n  {\r\n    return this.httpClient.get<number>(`${environment.GetHealthDirectoryIdByName}${name}`, this.httpHeader);\r\n  }\r\n  GetHealthDistrictsIdbyName(name:string)\r\n  {\r\n    return this.httpClient.get<number>(`${environment.GetHealthDistrictsIdbyName}${name}`, this.httpHeader);\r\n  }\r\n  getAllHealthDistrict() {\r\n    return this.httpClient.get<HealthDistrict[]>(`${environment.GetHealthDitricts}`, this.httpHeader);\r\n  }\r\n  getAllModes() {\r\n    return this.httpClient.get<Mode[]>(`${environment.GetAllModes}`, this.httpHeader);\r\n  }\r\n  addNewCategory(newCategory: Category): Observable<Category> {\r\n    return this.httpClient.post<Category>(`${environment.AddNewCategory}`, newCategory, this.httpHeader);\r\n  }\r\n  updateCategory(id: Number, category: Category): Observable<Category> {\r\n    return this.httpClient.put<Category>(`${environment.updateCategory}${id}`, category, this.httpHeader);\r\n  }\r\n  deleteCategory(id: Number) {\r\n    return this.httpClient.delete<Category>(`${environment.deleteCategory}${id}`, this.httpHeader);\r\n  }\r\n  addNewSubCategory(newSubCategory: SubCategory): Observable<SubCategory> {\r\n    return this.httpClient.post<SubCategory>(`${environment.AddNewSubCategory}`, newSubCategory, this.httpHeader);\r\n  }\r\n  updateSubCategory(id: Number, subCat: SubCategory): Observable<SubCategory> {\r\n    return this.httpClient.put<SubCategory>(`${environment.updateSubCategory}${id}`, subCat, this.httpHeader);\r\n  }\r\n  deleteSubCategory(id: Number) {\r\n    return this.httpClient.delete<SubCategory>(`${environment.deleteSubCategory}${id}`, this.httpHeader);\r\n  }\r\n  addNewOrigin(originObj: Origin): Observable<Origin> {\r\n    return this.httpClient.post<Origin>(`${environment.addNewOrigin}`, originObj, this.httpHeader);\r\n  }\r\n  updateOrigin(id: Number, originObj: Origin): Observable<Origin> {\r\n    return this.httpClient.put<Origin>(`${environment.updateOrigin}${id}`, originObj, this.httpHeader);\r\n  }\r\n  deleteOrigin(id: Number) {\r\n    return this.httpClient.delete<Origin>(`${environment.deleteOrigin}${id}`, this.httpHeader);\r\n  }\r\n  addNewManufacturer(newManufacturer: Manufacturer): Observable<Manufacturer> {\r\n    return this.httpClient.post<Manufacturer>(`${environment.addNewManufacturer}`, newManufacturer, this.httpHeader);\r\n  }\r\n  updateManufacturer(id: Number, manufacturer: Manufacturer): Observable<Manufacturer> {\r\n    return this.httpClient.put<Manufacturer>(`${environment.updateManufacturer}${id}`, manufacturer, this.httpHeader);\r\n  }\r\n  deleteManufacturer(id: Number) {\r\n    return this.httpClient.delete<Manufacturer>(`${environment.deleteManufacturer}${id}`, this.httpHeader);\r\n  }\r\n  addNewStatus(equipmentStatusObj: Status): Observable<Status> {\r\n    return this.httpClient.post<Status>(`${environment.addNewStatus}`, equipmentStatusObj, this.httpHeader);\r\n  }\r\n updateStatus(id: Number, equipmentStatusObj: Status): Observable<Status> {\r\n    return this.httpClient.put<Status>(`${environment.updateStatus}${id}`, equipmentStatusObj, this.httpHeader);\r\n  }\r\n  deleteStatus(id: Number) {\r\n    return this.httpClient.delete<Status>(`${environment.deleteStatus}${id}`, this.httpHeader);\r\n  }\r\n    addNewPriority(priorityObj: Priority): Observable<Priority> {\r\n    return this.httpClient.post<Priority>(`${environment.addNewPriority}`, priorityObj, this.httpHeader);\r\n  }\r\n  updatePriority(id: Number, priorityObj: Priority): Observable<Priority> {\r\n    return this.httpClient.put<Priority>(`${environment.updatePriority}${id}`, priorityObj, this.httpHeader);\r\n  }\r\n  deletePriority(id: Number) {\r\n    return this.httpClient.delete<Priority>(`${environment.deletePriority}${id}`, this.httpHeader);\r\n  }\r\n  addNewDepartment(departmentObj: Department): Observable<Department> {\r\n    return this.httpClient.post<Department>(`${environment.addNewDepartment}`, departmentObj, this.httpHeader);\r\n  }\r\n  updateDepartment(id: Number, department: Department): Observable<Department> {\r\n    return this.httpClient.put<Department>(`${environment.updateDepartment}${id}`, department, this.httpHeader);\r\n  }\r\n\r\n  deleteDepartment(id: Number) {\r\n    return this.httpClient.delete<Department>(`${environment.deleteDepartment}${id}`, this.httpHeader);\r\n  }\r\n  addNewSupplier(NewSupplier: Supplier): Observable<Supplier> {\r\n    return this.httpClient.post<Supplier>(`${environment.addNewSupplier}`, NewSupplier, this.httpHeader);\r\n  }\r\n  updateSupplier(id: Number, supplier: Supplier): Observable<Supplier> {\r\n    return this.httpClient.put<Supplier>(`${environment.updateSupplier}${id}`, supplier, this.httpHeader);\r\n  }\r\n  deleteSupplier(id: Number) {\r\n    return this.httpClient.delete<Supplier>(`${environment.deleteSupplier}${id}`, this.httpHeader);\r\n  }\r\n  addNewMode(NewMode: Mode): Observable<Mode> {\r\n    return this.httpClient.post<Mode>(`${environment.addNewMode}`, NewMode, this.httpHeader);\r\n  }\r\n  updateMode(id: Number, mode: Mode): Observable<Mode> {\r\n    return this.httpClient.put<Mode>(`${environment.updateMode}${id}`, mode, this.httpHeader);\r\n  }\r\n  deleteMode(id: Number) {\r\n    return this.httpClient.delete<Mode>(`${environment.deleteMode}${id}`, this.httpHeader);\r\n  }\r\n  // getemployee(id:Number){\r\n  //   return this.httpClient.get<Employee>(`${environment.GetEmployee}${id}`, this.httpHeader);\r\n  // }\r\n  AddMaintenance(newMaintenance:Miantenance):Observable<Miantenance>\r\n  {\r\n    return this.httpClient.post<Miantenance>(`${environment.AddNewMaintenance}`, newMaintenance, this.httpHeader);\r\n  }\r\n  AddSparePart(newSparePart:SparePart):Observable<SparePart>\r\n  {\r\n    return this.httpClient.post<SparePart>(`${environment.AddNewSparePart}`, newSparePart, this.httpHeader);\r\n  }\r\n  deleteHealthUnit(id:number){\r\n    return this.httpClient.delete<HealthCareUnit>(`${environment.DeleteHealthCareUnit}${id}`,this.httpHeader)\r\n  }\r\n  updateUnit(id:number,unit:HealthCareUnit): Observable<HealthCareUnit> {\r\n    return this.httpClient.put<HealthCareUnit>(`${environment.updateHealthCareUnit}${id}`,unit,this.httpHeader)\r\n  }\r\n  addNewHealthCareUnit(newUnit:HealthCareUnit)\r\n  {\r\n    return this.httpClient.post<HealthCareUnit>(`${environment.addNewUnit}`,newUnit,this.httpHeader)\r\n  }\r\ngetAllEcricodes():Observable<EcriCode[]> {\r\n    return this.httpClient.get<EcriCode[]>(`${environment.GetAllecriCodes}`, this.httpHeader);\r\n}\r\nupdateEcriCode(id:number,ecriCode:EcriCode): Observable<EcriCode> {\r\n  return this.httpClient.put<EcriCode>(`${environment.updateEcriCode}${id}`,ecriCode,this.httpHeader)\r\n}\r\ndeleteEcriCode(id:number){\r\n  return this.httpClient.delete<EcriCode>(`${environment.deleteEcriCode}${id}`,this.httpHeader)\r\n\r\n}\r\naddEcriCode(ecri:EcriCode):Observable<EcriCode>{\r\n  return this.httpClient.post<EcriCode>(`${environment.addNewecri}`,ecri,this.httpHeader)\r\n}\r\ngetHospitalscount():Observable<number>\r\n{\r\n  return this.httpClient.get<number>(`${environment.GetHospitalsCount}`);\r\n}\r\ngetAllHospitalswithpaging(page:Paging):Observable<HealthCareUnit[]>\r\n{\r\n  return this.httpClient.put<HealthCareUnit[]>(`${environment.GetAllHospitalsWithPaging}`,page,this.httpHeader);\r\n}\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Employee } from '../Models/Employee';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n \r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n  httpHeader={headers: new HttpHeaders({\r\n    'content-type':'application/json',\r\n    'Accept': '*/*'\r\n  })};\r\n//   getAllEmployees():Observable<Employee[]>\r\n//   {\r\n//     return this.httpClient.get<Employee[]>(`${environment.GetAllEmployees}`,this.httpHeader);\r\n//   }\r\n\r\n//   addNewEmployee(newEmployee: Employee):Observable<Employee>\r\n//   {\r\n//     return this.httpClient.post<Employee>(`${environment.AddEmployee}`,newEmployee,this.httpHeader);\r\n//   }\r\n//   deleteEmployee(id: any): Observable <Employee >{\r\n//     return this.httpClient.delete<Employee> (`${environment.DeleteEmployee}${id}`,this.httpHeader) ;\r\n// }\r\n//  updateEmployee(id:Number,employee:Employee):Observable<any>{\r\n//   return this.httpClient.put<any> (`${environment.UpdateEmployee}${id}`,employee,this.httpHeader) ;\r\n//  }\r\n// getEquipmentEmployees(equipId:Number)\r\n// {\r\n//   return this.httpClient.get<Employee[]>(`${environment.GetEquipmentEmployee}${equipId}`, this.httpHeader);\r\n// }\r\n// getUserByEmail(email:string):Observable<Employee>\r\n// {\r\n//   return this.httpClient.get<Employee>(`${environment.getEmployeeByMail}${email}`,this.httpHeader);\r\n// }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { BrandVM, Equipment } from '../Models/Equipment';\r\nimport { MasterEquipment } from '../Models/MasterEquipment';\r\nimport { MasterEquipmentAttachments } from '../Models/MasterEquipmentAttachments';\r\nimport { Paging } from '../Models/Paging';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MasterequipmentService {\r\n\r\n  constructor(private httpClient:HttpClient,\r\n              ) { }\r\n  httpHeader={headers: new HttpHeaders({\r\n    'content-type':'application/json',\r\n    'Accept': '*/*'\r\n  })};\r\naddNewEquipments(newEquipment: MasterEquipment):Observable<MasterEquipment>\r\n{\r\n  return this.httpClient.post<MasterEquipment>(`${environment.AddNewMasterEquipments}`,newEquipment,this.httpHeader);\r\n}\r\ngetAll():Observable<MasterEquipment[]>\r\n{\r\n  return this.httpClient.get<MasterEquipment[]>(`${environment.GetAllMasterEquipment}`);\r\n}\r\ngetAllwithpaging(page:Paging):Observable<MasterEquipment[]>\r\n{\r\n  return this.httpClient.put<MasterEquipment[]>(`${environment.GetAllMasterEquipmentWithPaging}`,page,this.httpHeader);\r\n}\r\ngetcount():Observable<number>\r\n{\r\n  return this.httpClient.get<number>(`${environment.getcount}`);\r\n}\r\nupdate(Id:Number,masterEquipment:MasterEquipment):Observable<any>\r\n{\r\n  return this.httpClient.put<any>(`${environment.UpdateMasterEquipment}${Id}`,masterEquipment,this.httpHeader)\r\n}\r\nDelete(Id:Number):Observable<any>\r\n{\r\n  return this.httpClient.delete<any>(`${environment.DeleteMasterEquipment}${Id}`);\r\n}\r\ngetAllAttachWithNoMasterEquipment():Observable<MasterEquipmentAttachments[]>\r\n{\r\n  return this.httpClient.get<MasterEquipmentAttachments[]>(`${environment.GetAttachmentsForMasterEquipment}`,this.httpHeader);\r\n}\r\ngetAllAttachForEquipment(equipId:number):Observable<MasterEquipmentAttachments[]>\r\n{\r\n  return this.httpClient.get<MasterEquipmentAttachments[]>(`${environment.GetAttachmentsForMEquipment}${equipId}`,this.httpHeader);\r\n}\r\nDeleteAttachment(id:number):Observable<MasterEquipmentAttachments>\r\n{\r\n  return this.httpClient.delete<MasterEquipmentAttachments> (`${environment.DeleteMasterAttach}${id}`,this.httpHeader) ;\r\n}\r\ngetMasterByBrand(data:Equipment[]):Observable<BrandVM[]>\r\n{\r\n  return this.httpClient.post<BrandVM[]> (`${environment.getMasterByBrand}`,data,this.httpHeader) ;\r\n}\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Role } from '../Models/Role';\r\nimport { User } from '../Models/User';\r\nimport { from } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { pipe } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Employee } from '../Models/Employee';\r\n\r\n\r\nimport { ResetPassword } from '../Models/ResetPassword';\r\nimport { Paging } from '../Models/Paging';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private currentUserSubject: BehaviorSubject<User>;\r\n  public currentUser: Observable<User>;\r\n  httpHeader = {\r\n    headers: new HttpHeaders({\r\n      'content-type': 'application/json',\r\n      'Accept': '*/*'\r\n    })\r\n  };\r\n  constructor(private httpClient: HttpClient, private router: Router) {\r\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): User {\r\n    return this.currentUserSubject.value;\r\n  }\r\n  register(newUser: User): Observable<User> {\r\n    return this.httpClient.post<User>(`${environment.Register}`, newUser, this.httpHeader);\r\n  }\r\n  login(existingUser: User): Observable<User> {\r\n    return this.httpClient.post<User>(`${environment.Login}`, existingUser, this.httpHeader)\r\n      .pipe(map(user => {\r\n        // login successful if there's a jwt token in the response\r\n        if (user && user.token) {\r\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n          localStorage.setItem('currentUser', JSON.stringify(user));\r\n          this.currentUserSubject.next(user);\r\n        }\r\n        return user;\r\n      }));\r\n  }\r\n  getUsers(): Observable<User[]> {\r\n    return this.httpClient.get<User[]>(`${environment.GetUsers}`, this.httpHeader);\r\n  }\r\n  getUserscount():Observable<number>\r\n  {\r\n    return this.httpClient.get<number>(`${environment.getUserscount}`);\r\n  }\r\n  getAllUserswithpaging(page:Paging):Observable<User[]>\r\n  {\r\n    return this.httpClient.put<User[]>(`${environment.getAllUserswithpaging}`,page,this.httpHeader);\r\n  }\r\n\r\n  getUsersByEquipmentId(id:number): Observable<User[]> {\r\n    return this.httpClient.get<User[]>(`${environment.GetUsersByEquipmentId}${id}`, this.httpHeader);\r\n  }\r\n  deleteUser(id: string): Observable<User> {\r\n    return this.httpClient.delete<User>(`${environment.DeleteUser}${id}`);\r\n  }\r\n  getUnRegisteredUsers(): Observable<User[]> {\r\n    return this.httpClient.get<User[]>(`${environment.GetUnregisteredUsers}`, this.httpHeader);\r\n  }\r\n  getUsersByHealthcareunitId(id:number): Observable<User[]> {\r\n    return this.httpClient.get<User[]>(`${environment.GetAllUsersByHealthcareunitId}${id}`, this.httpHeader);\r\n  }\r\n  getUsersByhealthDirectoryId(id:number): Observable<User[]> {\r\n    return this.httpClient.get<User[]>(`${environment.GetAllUsersByhealthDirectoryId}${id}`, this.httpHeader);\r\n  }\r\n  getUsersByhealthDistrictId(id:number): Observable<User[]> {\r\n    return this.httpClient.get<User[]>(`${environment.GetAllUsersByhealthDistrictId}${id}`, this.httpHeader);\r\n  }\r\n  getUsersByOrganizationId(id:number): Observable<User[]> {\r\n    return this.httpClient.get<User[]>(`${environment.GetAllUsersByOrganizationId}${id}`, this.httpHeader);\r\n  } \r\n  getEquipmentEmployees(equipId:number)\r\n{\r\n  return this.httpClient.get<User[]>(`${environment.GetEquipmentEmployee}${equipId}`, this.httpHeader);\r\n}\r\n  getRoles(): Observable<Role[]> {\r\n    return this.httpClient.get<Role[]>(`${environment.GetAllRoles}`, this.httpHeader);\r\n  }\r\n  updateRole(user: User) {\r\n    return this.httpClient.put<User[]>(`${environment.UpdateRole}`, user, this.httpHeader);\r\n\r\n  }\r\n  // updateUser(id:string,user: User) {\r\n  //   return this.httpClient.put<User[]>(`${environment.UpdateUser}${id}`, user, this.httpHeader);\r\n\r\n  // }\r\n  getById(id: string) {\r\n    return this.httpClient.get<User>(`${environment.getUserById}${id}`);\r\n  }\r\n  getRoleById(id: string) {\r\n    return this.httpClient.get<String>(`${environment.getRoleById}${id}`);\r\n  }\r\n  createRoles()\r\n  {\r\n    return this.httpClient.get<any>(`${environment.CreateRoles}`);\r\n  }\r\n\r\n  forgetPassword(email:string):Observable<any>\r\n  {\r\n    return this.httpClient.post<any>(`${environment.forgetPassword}${email}`, this.httpHeader);\r\n  }\r\n  resetPassword(Resetpassword:ResetPassword):Observable<ResetPassword>\r\n  {\r\n    return this.httpClient.post<ResetPassword>(`${environment.resetpassword}`, Resetpassword, this.httpHeader);\r\n  }\r\n\r\n  logout() {\r\n    // remove user from local storage and set current user to null\r\n    localStorage.removeItem('currentUser');\r\n    this.currentUserSubject.next(null);\r\n    this.router.navigate(['/']);\r\n  }\r\n}\r\n","<!-- <p-messages [value]=\"msgs\"></p-messages>\r\n        <p-toolbar styleClass=\"p-mb-4\">\r\n            <ng-template pTemplate=\"left\">\r\n                <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary  p-button-rounded p-mr-2 new\"\r\n                    routerLink=\"/home/addEquipment\" pTooltip=\"Add a New Equipment\" tooltipPosition=\"right\"></button>\r\n\r\n                 <button pButton pRipple label=\"{{'Actions.Scan' | translate}}\" class=\"p-button-info p-mr-2 info\" routerLink=\"/home/qrcode\"></button>\r\n\r\n            </ng-template>\r\n        </p-toolbar> -->\r\n\r\n<div class=\"container-fluid\">\r\n\r\n    <div class=\"card\">\r\n\r\n        <!-- <p-messages [value]=\"msgs\"></p-messages> -->\r\n        <p-toast posinset=\"top-right\"></p-toast>\r\n        <div class=\"card-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-11\">\r\n                    <h5>{{'Dashboard.ManageEquipments' | translate}}</h5>\r\n                </div>\r\n                <div class=\"col-md-1\" style=\"text-align: right;\">\r\n                    <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary  p-button-rounded p-mr-2 new\"\r\n                        routerLink=\"/home/addEquipment\" pTooltip=\"Add a New Equipment\" tooltipPosition=\"right\"></button>\r\n                    <button type=\"button\" pButton pRipple icon=\"pi pi-file-pdf\" (click)=\"openLink()\"\r\n                        class=\"p-button-warning download\" pTooltip=\"PDF\" tooltipPosition=\"bottom\"></button>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\"><br /></div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n                    <p-table #dt [value]=\"equipments\" [rows]=\"10\" styleClass=\"p-datatable-responsive-demo\"\r\n                        [paginator]=\"true\" [(selection)]=\"selectedProducts\" [rowHover]=\"true\" dataKey=\"id\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        [showCurrentPageReport]=\"true\"\r\n                        [rowsPerPageOptions]=\"[5,10,15,20]\"\r\n                        [totalRecords]=\"{count}\"\r\n                        [globalFilterFields]=\"['equipmentName','department','manufacturer','supplier']\" >\r\n                        <ng-template pTemplate=\"caption\">\r\n                            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                                <span class=\"p-input-icon-right\">\r\n                                    <i class=\"pi pi-search\"></i>\r\n                                    <input pInputText class=\"form-control\" type=\"text\"\r\n                                        (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                                        placeholder=\"{{'search.Search'|translate}}...\" />\r\n                                </span>\r\n                            </div>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"header\">\r\n                            <!----------------------------Admin View-------------------->\r\n                            <tr *ngIf=\"currentUser.roleName==='Admin'|| currentUser.roleName==='HeadQuarter'\">\r\n                                <th pSortableColumn=\"Code\">{{'equipment.internalCode' | translate}}\r\n                                    <p-sortIcon field=\"Code\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"upaCode\">{{'equipment.upaCode' | translate}} <p-sortIcon\r\n                                        field=\"upaCode\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"equipmentName\">{{'equipment.Name' | translate}} <p-sortIcon\r\n                                        field=\"equipmentName\"></p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"manufacturer\">{{'equipment.Manufacturer' | translate}} <p-sortIcon\r\n                                        field=\"manufacturer\"></p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"healthDirectoryName\">{{'equipment.governorate' | translate}}\r\n                                    <p-sortIcon field=\"healthDirectoryName\"></p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"healthDistrictName\">{{'equipment.district' | translate}}\r\n                                    <p-sortIcon field=\"healthDistrictName\"></p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"healthCareUnitName\">{{'equipment.healthCareUnit' | translate}}\r\n                                    <p-sortIcon field=\"healthCareUnitName\"></p-sortIcon>\r\n                                </th>\r\n                                <th>{{'Actions.Action' | translate}}</th>\r\n                            </tr>\r\n                            <!----------------------------Hospital View-------------------->\r\n                            <tr\r\n                                *ngIf=\"currentUser.roleName==='Hospital'||currentUser.roleName==='Governorate' ||currentUser.roleName==='City' ||currentUser.roleName==='Technician'\">\r\n                                <th pSortableColumn=\"Code\">{{'equipment.internalCode' | translate}} <p-sortIcon\r\n                                        field=\"Code\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"upaCode\">{{'equipment.upaCode' | translate}} <p-sortIcon\r\n                                        field=\"upaCode\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"equipmentName\">{{'equipment.Name' | translate}} <p-sortIcon\r\n                                        field=\"equipmentName\"></p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"manufacturer\">{{'equipment.Manufacturer' | translate}} <p-sortIcon\r\n                                        field=\"manufacturer\"></p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"serialNumber\">{{'equipment.serialNumber' | translate}} <p-sortIcon\r\n                                        field=\"serialNumber\"></p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"Department\">{{'equipment.Department' | translate}} <p-sortIcon\r\n                                        field=\"Department\"></p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"supplier\">{{'equipment.Supplier' | translate}} <p-sortIcon\r\n                                        field=\"supplier\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"purchaseDate\">{{'equipment.PurchaseDate' | translate}} <p-sortIcon\r\n                                        field=\"purchaseDate\"></p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"installationDate\">{{'equipment.InstallationDate' | translate}}\r\n                                    <p-sortIcon field=\"installationDate\"></p-sortIcon>\r\n                                </th>\r\n                                <th>{{'Actions.Action' | translate}}</th>\r\n                            </tr>\r\n                            <!----------------------------Admin View-------------------->\r\n                            <tr *ngIf=\"currentUser.roleName==='Admin'|| currentUser.roleName==='HeadQuarter'\">\r\n                                <th>\r\n                                    <input pInputText type=\"text\"\r\n                                        (input)=\"dt.filter($event.target.value, 'internalCode', 'contains')\"\r\n                                        [value]=\"dt.filters['internalCode']?.value\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n                                </th>\r\n                                <th>\r\n                                    <input pInputText type=\"text\"\r\n                                        (input)=\"dt.filter($event.target.value, 'upaCode', 'contains')\"\r\n                                        [value]=\"dt.filters['upaCode']?.value\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n                                </th>\r\n                                <th>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"equipments\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentName\"\r\n                                        optionValue=\"equipmentName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'equipmentName','equals')\"\r\n                                        [filterBy]=\"dt.filters['equipmentName']?.value\" styleClass=\"ui-column-filter\"\r\n                                        class=\"filterDropdwon\"></p-dropdown>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"equipments\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentNameAr\"\r\n                                        optionValue=\"equipmentNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'equipmentNameAr','equals')\"\r\n                                        [filterBy]=\"dt.filters['equipmentNameAr']?.value\" styleClass=\"ui-column-filter\">\r\n                                    </p-dropdown>\r\n                                </th>\r\n                                <th>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"manufacturerList\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerName\"\r\n                                        optionValue=\"manufacturerName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'manufacturerName','equals')\"\r\n                                        [filterBy]=\"dt.filters['manufacturerName']?.value\" styleClass=\"ui-column-filter\"\r\n                                        class=\"filterDropdwon\"></p-dropdown>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"manufacturerList\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerNameAr\"\r\n                                        optionValue=\"manufacturerNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'manufacturerNameAr','equals')\"\r\n                                        [filterBy]=\"dt.filters['manufacturerNameAr']?.value\"\r\n                                        styleClass=\"ui-column-filter\">\r\n                                    </p-dropdown>\r\n                                </th>\r\n                                <th>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"healthDirectoriesList\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthDirectoryName\"\r\n                                        optionValue=\"healthDirectoryName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        optionKey=\"id\" filterBy=\"label\"\r\n                                        (onChange)=\"dt.filter($event.value,'healthDirectoryName','equals') ;fillDistrict($event.value)\"\r\n                                        [filterBy]=\"dt.filters['healthDirectoryName']\" styleClass=\"ui-column-filter\"\r\n                                        class=\"filterDropdwon\"></p-dropdown>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"healthDirectoriesList\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthDirectoryNameAr\"\r\n                                        optionValue=\"healthDirectoryNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'healthDirectoryNameAr','contains') ;fillDistrict($event.value)\"\r\n                                        [filterBy]=\"dt.filters['healthDirectoryNameAr']?.value\"\r\n                                        styleClass=\"ui-column-filter\">\r\n                                    </p-dropdown>\r\n                                </th>\r\n                                <th>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"HealthDistrictsList\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthDistrictName\"\r\n                                        optionValue=\"healthDistrictName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'healthDistrictName','contains') ; fillHospital($event.value)\"\r\n                                        [filterBy]=\"dt.filters['healthDistrictName']?.value\"\r\n                                        styleClass=\"ui-column-filter\" class=\"filterDropdwon\"></p-dropdown>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"HealthDistrictsList\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthDistrictNameAr\"\r\n                                        optionValue=\"healthDistrictNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'healthDistrictNameAr','contains'); fillHospital($event.value)\"\r\n                                        [filterBy]=\"dt.filters['healthDistrictNameAr']?.value\"\r\n                                        styleClass=\"ui-column-filter\">\r\n                                    </p-dropdown>\r\n                                </th>\r\n                                <th>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"healthCareUnits\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthCareUnitName\"\r\n                                        optionValue=\"healthCareUnitName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'healthCareUnitName','equals')\"\r\n                                        [filterBy]=\"dt.filters['healthCareUnitName']?.value\"\r\n                                        styleClass=\"ui-column-filter\" class=\"filterDropdwon\"></p-dropdown>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"healthCareUnits\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthCareUnitNameAr\"\r\n                                        optionValue=\"healthCareUnitNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'healthCareUnitNameAr','equals')\"\r\n                                        [filterBy]=\"dt.filters['healthCareUnitNameAr']?.value\"\r\n                                        styleClass=\"ui-column-filter\">\r\n                                    </p-dropdown>\r\n                                </th>\r\n                                <th></th>\r\n                            </tr>\r\n                            <!----------------------------Hospital View-------------------->\r\n                            <tr\r\n                                *ngIf=\"currentUser.roleName==='Hospital'||currentUser.roleName==='Governorate' ||currentUser.roleName==='City' ||currentUser.roleName==='Technician' \">\r\n                                <th>\r\n                                    <input pInputText type=\"text\"\r\n                                        (input)=\"dt.filter($event.target.value, 'internalCode', 'contains')\"\r\n                                        [value]=\"dt.filters['internalCode']?.value\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n                                </th>\r\n                                <th>\r\n                                    <input pInputText type=\"text\"\r\n                                        (input)=\"dt.filter($event.target.value, 'upaCode', 'contains')\"\r\n                                        [value]=\"dt.filters['upaCode']?.value\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n                                </th>\r\n                                <th>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"equipments\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentName\"\r\n                                        optionValue=\"equipmentName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'equipmentName','equals')\"\r\n                                        [filterBy]=\"dt.filters['equipmentName']?.value\" styleClass=\"ui-column-filter\"\r\n                                        class=\"filterDropdwon\"></p-dropdown>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"equipments\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentNameAr\"\r\n                                        optionValue=\"equipmentNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'equipmentNameAr','equals')\"\r\n                                        [filterBy]=\"dt.filters['equipmentNameAr']?.value\" styleClass=\"ui-column-filter\">\r\n                                    </p-dropdown>\r\n                                </th>\r\n                                <th>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"manufacturerList\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerName\"\r\n                                        optionValue=\"manufacturerName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'manufacturerName','equals')\"\r\n                                        [filterBy]=\"dt.filters['manufacturerName']?.value\" styleClass=\"ui-column-filter\"\r\n                                        class=\"filterDropdwon\"></p-dropdown>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"manufacturerList\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerNameAr\"\r\n                                        optionValue=\"manufacturerNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'manufacturerNameAr','equals')\"\r\n                                        [filterBy]=\"dt.filters['manufacturerNameAr']?.value\"\r\n                                        styleClass=\"ui-column-filter\">\r\n                                    </p-dropdown>\r\n                                </th>\r\n                                <th>\r\n                                    <input pInputText type=\"text\"\r\n                                        (input)=\"dt.filter($event.target.value, 'serialNumber', 'contains')\"\r\n                                        [value]=\"dt.filters['serialNumber']?.value\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n                                </th>\r\n                                <th>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"departmentsList\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"departmentName\"\r\n                                        optionValue=\"departmentName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'departmentName','contains') ; fillHospital($event.value)\"\r\n                                        [filterBy]=\"dt.filters['departmentName']?.value\" styleClass=\"ui-column-filter\"\r\n                                        class=\"filterDropdwon\"></p-dropdown>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"departmentsList\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"departmentNameAr\"\r\n                                        optionValue=\"departmentNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'departmentNameAr','contains'); fillHospital($event.value)\"\r\n                                        [filterBy]=\"dt.filters['departmentNameAr']?.value\"\r\n                                        styleClass=\"ui-column-filter\">\r\n                                    </p-dropdown>\r\n                                </th>\r\n                                <th>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"suppliersList\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"supplierName\"\r\n                                        optionValue=\"supplierName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'supplierName','equals')\"\r\n                                        [filterBy]=\"dt.filters['supplierName']?.value\" styleClass=\"ui-column-filter\"\r\n                                        class=\"filterDropdwon\"></p-dropdown>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"suppliersList\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"supplierNameAr\"\r\n                                        optionValue=\"supplierNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'supplierNameAr','equals')\"\r\n                                        [filterBy]=\"dt.filters['supplierNameAr']?.value\" styleClass=\"ui-column-filter\">\r\n                                    </p-dropdown>\r\n                                </th>\r\n                                <th>\r\n                                    <input pInputText type=\"date\"\r\n                                        (input)=\"dt.filter($event.target.value, 'purchaseDate', 'contains')\"\r\n                                        [value]=\"dt.filters['purchaseDate']?.value\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n                                </th>\r\n                                <th>\r\n                                    <input pInputText type=\"date\"\r\n                                        (input)=\"dt.filter($event.target.value, 'installationDate', 'contains')\"\r\n                                        [value]=\"dt.filters['installationDate']?.value\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n                                </th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"body\" let-eq>\r\n                            <!----------------------------Admin View-------------------->\r\n\r\n                            <tr *ngIf=\"currentUser.roleName==='Admin' || currentUser.roleName==='HeadQuarter'\">\r\n                                <td>{{eq.internalCode}}</td>\r\n                                <td>{{eq.upaCode}}</td>\r\n                                <td>{{translate.currentLang == \"En\" ? eq.equipmentName:eq.equipmentNameAr}}</td>\r\n                                <td>{{translate.currentLang == \"En\" ? eq.manufacturerName:eq.manufacturerNameAr}}</td>\r\n                                <td>{{translate.currentLang == \"En\" ? eq.healthDirectoryName:eq.healthDirectoryNameAr}}\r\n                                </td>\r\n                                <td>{{translate.currentLang == \"En\" ? eq.healthDistrictName:eq.healthDistrictNameAr}}\r\n                                </td>\r\n                                <td>{{translate.currentLang == \"En\" ? eq.healthCareUnitName:eq.healthCareUnitNameAr}}\r\n                                </td>\r\n\r\n                                <td>\r\n                                    <button pButton pRipple pTooltip=\"view this Equipment\" tooltipPosition=\"top\"\r\n                                        icon=\"pi pi-align-justify\" (click)=\"getDetails(eq.id)\"\r\n                                        class=\"p-button-rounded p-button-info edit\"></button>\r\n\r\n                                    <!-- <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary  p-button-rounded p-mr-2 new\"\r\n                          routerLink=\"/home/addEquipment\" pTooltip=\"Add a New Equipment\" tooltipPosition=\"right\"></button> -->\r\n                                </td>\r\n                            </tr>\r\n                            <!----------------------------Hospital View-------------------->\r\n                            <tr\r\n                                *ngIf=\"currentUser.roleName==='Organization'||currentUser.roleName==='Hospital'||currentUser.roleName==='Governorate' ||currentUser.roleName==='City' ||currentUser.roleName==='Technician' \">\r\n                                <td>{{eq.internalCode}}</td>\r\n                                <td>{{eq.upaCode}}</td>\r\n                                <td>{{translate.currentLang == \"En\" ? eq.equipmentName:eq.equipmentNameAr}}</td>\r\n                                <td>{{translate.currentLang == \"En\" ? eq.manufacturerName:eq.manufacturerNameAr}}</td>\r\n                                <td>{{eq.serialNumber}}</td>\r\n                                <td>{{translate.currentLang == \"En\" ? eq.departmentName:eq.departmentNameAr}}</td>\r\n                                <td>{{translate.currentLang == \"En\" ? eq.supplierName:eq.supplierNameAr}}</td>\r\n                                <td>{{eq.purchaseDate}}</td>\r\n                                <td>{{eq.installationDate}}</td>\r\n                                <td>\r\n                                    <button pButton pRipple icon=\"pi pi-pencil\"\r\n                                        class=\"p-button-rounded p-button-info edit\" (click)=\"openNew(eq)\"></button>\r\n\r\n                                    <button pButton pRipple (click)=\"confirmDelete(eq.id,eq.equipmentName)\"\r\n                                        pTooltip=\"delete an Equipment\" tooltipPosition=\"top\" icon=\"pi pi-trash\"\r\n                                        class=\"p-button-rounded p-button-danger edit\"></button>\r\n                                </td>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"summary\">\r\n                            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                                {{'In total there are.In total there are'| translate}} {{equipments ? equipments.length\r\n                                : 0 }}\r\n                                {{'Sidebar.equipments'| translate}}.\r\n                            </div>\r\n                        </ng-template>\r\n                    </p-table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p-dialog [(visible)]=\"equipmentDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <p-messages severity=\"error\" [value]=\"msgs\"></p-messages>\r\n\r\n                <h3 class=\"title\">{{'equipment.EditEquipment'|translate}}</h3>\r\n            </div>\r\n            <div>\r\n                <img src=\"./../assets/images/medical-equipment-icon.jpg\" class=\"img\" [alt]=\"product\">\r\n            </div>\r\n        </div>\r\n\r\n        <form (ngSubmit)=\"EditEquipmentForm.valid && updateProduct()\" #EditEquipmentForm=\"ngForm\">\r\n            <div class=\"container\">\r\n                <p-tabView [activeIndex]=\"index\" (onChange)=\"handleChange($event)\">\r\n                    <p-tabPanel header=\"{{'equipment.Details' | translate}}\">\r\n                        <fieldset class=\"tab\">\r\n                            <legend>{{'equipment.Details'| translate}}</legend>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-3 form-group\" *ngIf=\"translate.currentLang == 'En'\">\r\n                                    <label for=\"name\">{{\"equipment.Name\"| translate}}</label>\r\n                                    <select class=\"form-control\" name=\"masterequipmentName\"\r\n                                        [class.is-invalid]=\"masterequipmentName.touched && masterequipmentName.errors || EditEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"masterequipmentName.valid && EditEquipmentForm.submitted\"\r\n                                        #masterequipmentName=\"ngModel\" [(ngModel)]=\"equipmentObj.masterEquipmentId\"\r\n                                        pTooltip=\"Please,Select An Equipment\" tooltipPosition=\"bottom\" required>\r\n                                        <option selected disabled>--select--</option>\r\n                                        <option *ngFor=\"let s of masterEquipment\" [value]=\"s.id\">\r\n                                            {{s.name}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div\r\n                                        *ngIf=\"(masterequipmentName.touched || EditEquipmentForm.submitted) && masterequipmentName.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            English name is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-md-3 form-group\" *ngIf=\"translate.currentLang == 'Ar'\">\r\n                                    <label for=\"name\">{{\"equipment.NameAr\"| translate}}</label>\r\n                                    <select class=\"form-control\" id=\"masterequipmentNameAr\" name=\"masterequipmentNameAr\"\r\n                                        #masterequipmentNameAr=\"ngModel\"\r\n                                        [class.is-invalid]=\"masterequipmentNameAr.touched && masterequipmentNameAr.errors || EditEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"masterequipmentNameAr.valid && EditEquipmentForm.submitted\"\r\n                                        [(ngModel)]=\"equipmentObj.equipmentNameAr\" required>\r\n                                        <option selected disabled>--select--</option>\r\n                                        <option *ngFor=\"let s of masterEquipment\" [value]=\"s.nameAr\">\r\n                                            {{s.nameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div\r\n                                        *ngIf=\"(masterequipmentNameAr.touched || EditEquipmentForm.submitted) && masterequipmentNameAr.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            Arabic name is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"internalCode\">{{'equipment.barcode'| translate}}</label>\r\n                                    <input type=\"text\" pInputText id=\"barcode\" class=\"form-control\" name=\"barcode\"\r\n                                        [(ngModel)]=\"equipmentObj.barcode\" required #barCode=\"ngModel\"\r\n                                        [class.is-invalid]=\"barCode.touched && barCode.errors || EditEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"barCode.valid && EditEquipmentForm.submitted\"\r\n                                        pTooltip=\"Please,Enter A barCode\" tooltipPosition=\"bottom\" />\r\n                                    <span class=\"text-danger\"\r\n                                        *ngIf=\"(barCode.touched || EditEquipmentForm.submitted) && barCode.errors?.required\">\r\n                                        Code is required\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"status\">{{'equipment.EquipmentStatus'|translate}}</label>\r\n                                    <div>\r\n                                        <ul class=\"list-group\" pTooltip=\"Select A status\" tooltipPosition=\"bottom\">\r\n                                            <li class=\"list-group-item\" *ngFor=\"let item of statusList\">\r\n                                                <input type=\"radio\" [(ngModel)]=\"equipmentObj.equipmentStatuSId\"\r\n                                                    name=\"status\" id=\"status\" #status=\"ngModel\" [value]=\"item.id\" />\r\n                                                {{translate.currentLang == \"En\" ?item.status:item.status}}\r\n                                            </li>\r\n                                        </ul>\r\n                                        <div *ngIf=\"!equipmentObj.equipmentStatuSId\">\r\n                                            <span class=\"text-danger\">\r\n                                                Status is required\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n\r\n                                <div class=\"col-md-12 \" *ngIf=\"translate.currentLang == 'En'\">\r\n\r\n                                    <label for=\"Description\">{{'equipment.Description'| translate}}</label>\r\n                                    <textarea class=\"form-control\" id=\"Description\" type=\"text\"\r\n                                        [(ngModel)]=\"equipmentObj.equipmentDescription\"\r\n                                        [ngModelOptions]=\"{standalone: true}\"\r\n                                        pTooltip=\"Please,Select An equipmentDescription\"\r\n                                        tooltipPosition=\"bottom\"></textarea>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12\" *ngIf=\"translate.currentLang == 'Ar'\">\r\n\r\n\r\n\r\n                                    <label for=\"Description\">{{'equipment.DescriptionAr'| translate}}</label>\r\n                                    <textarea class=\"form-control\" id=\"Description\" type=\"text\"\r\n                                        [(ngModel)]=\"equipmentObj.equipmentDescriptionAr\"\r\n                                        [ngModelOptions]=\"{standalone: true}\"\r\n                                        pTooltip=\"Please,Select An equipmentDescription\"\r\n                                        tooltipPosition=\"bottom\"></textarea>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <!-- <div class=\"row\">\r\n                                    \r\n                                </div> -->\r\n                            <br>\r\n\r\n                            <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\"\r\n                                [hidden]=\"isNextvalid\">Next</button>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\"\r\n                                [hidden]=\"isPrevvalid\">previous</button>\r\n\r\n                            <br><br><br>\r\n                        </fieldset>\r\n                    </p-tabPanel>\r\n\r\n                    <p-tabPanel header=\"{{'equipment.IndustryDetails' | translate}}\">\r\n                        <fieldset class=\"tab\">\r\n                            <legend>{{'equipment.IndustryDetails' | translate}}</legend>\r\n                            <div class=\"row\">\r\n\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"color\">{{'equipment.Color'| translate}}</label>\r\n                                    <input type=\"text\" pInputText id=\"Color\" class=\"form-control\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.color\" autofocus\r\n                                        pTooltip=\"Enter A Color\" tooltipPosition=\"bottom\" />\r\n                                </div>\r\n                                <!-- <div class=\"col-md-3\">\r\n                                        <label for=\"Color\">{{'equipment.ColorAr'| translate}}</label>\r\n                                        <input type=\"text\" pInputText id=\"Color\" class=\"form-control\"\r\n                                            [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.colorAr\"/>\r\n                                    </div> -->\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"weight\">{{'equipment.weight'| translate}}</label>\r\n                                    <input type=\"number\" pInputText id=\"weight\" [ngModelOptions]=\"{standalone: true}\"\r\n                                        class=\"form-control\" [(ngModel)]=\"equipmentObj.weight\" pTooltip=\"Enter A weight\"\r\n                                        tooltipPosition=\"bottom\" />\r\n                                    <small class=\"p-error\" *ngIf=\"submitted && !equipmentObj.weight\">weight is\r\n                                        required.</small>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"length\">{{'equipment.length'| translate}}</label>\r\n                                    <input type=\"number\" pInputText id=\"length\" [ngModelOptions]=\"{standalone: true}\"\r\n                                        class=\"form-control\" [(ngModel)]=\"equipmentObj.length\" pTooltip=\"Enter A length\"\r\n                                        tooltipPosition=\"bottom\" />\r\n                                    <small class=\"p-error\" *ngIf=\"submitted && !equipmentObj.length\">length is\r\n                                        required.</small>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"height\">{{'equipment.height'| translate}}</label>\r\n                                    <input type=\"number\" pInputText id=\"height\" class=\"form-control\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.height\"\r\n                                        pTooltip=\"Enter A height\" tooltipPosition=\"bottom\" />\r\n                                    <small class=\"p-error\" *ngIf=\"submitted && !equipmentObj.height\">height is\r\n                                        required.</small>\r\n                                </div>\r\n\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"serialNumber\">{{'equipment.serialNumber'| translate}}</label>\r\n                                    <input type=\"text\" pInputText id=\"serialNumber\" class=\"form-control\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.serialNumber\"\r\n                                        pTooltip=\"Enter A serialNumber\" tooltipPosition=\"bottom\" />\r\n                                </div>\r\n                            </div>\r\n                            <br>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\">Next</button>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\">previous</button>\r\n\r\n                            <br><br><br>\r\n                        </fieldset>\r\n                    </p-tabPanel>\r\n\r\n                    <p-tabPanel header=\"{{'equipment.Location' |translate}}\">\r\n\r\n                        <fieldset class=\"tab\">\r\n                            <legend>{{'equipment.Location' |translate}}</legend>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-3 form-group\">\r\n                                    <label for=\"healthName\">{{'equipment.healthCareUnit'|translate}}</label>\r\n                                    <select class=\"form-control\" id=\"healthName\" name=\"healthName\" #healthName=\"ngModel\"\r\n                                        [class.is-invalid]=\"healthName.touched && healthName.errors || EditEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"healthName.valid && EditEquipmentForm.submitted\"\r\n                                        [(ngModel)]=\"equipmentObj.HealthCareUnitId\" required\r\n                                        pTooltip=\"Select A HealthCareUnit\" tooltipPosition=\"bottom\">\r\n                                        <option >--select--</option>\r\n                                        <option *ngFor=\"let h of healthCareUnitsList\" [value]=\"h.id\">\r\n                                            {{translate.currentLang == \"En\" ?\r\n                                            h.healthCareUnitName:h.healthCareUnitNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div\r\n                                        *ngIf=\"(healthName.touched|| EditEquipmentForm.submitted) && healthName.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            health CareUnit is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- <div class=\"col-md-3\">\r\n    \r\n                                        <label for=\"healthDirectory\">{{'equipment.healthDirectory' |translate}}</label>\r\n    \r\n                                        <select class=\"form-control\" id=\"healthDirectory\" name=\"healthDirectory\"\r\n                                            #healthDirectory=\"ngModel\"\r\n                                            [(ngModel)]=\"equipmentObj.HealthDirectoryId\" (change)=\"fillDistrict(equipmentObj.HealthDirectoryId)\"\r\n                                            [class.is-invalid]=\"healthDirectory.touched && healthDirectory.errors || EditEquipmentForm.submitted\" \r\n                                            [class.is-valid]=\"healthDirectory.valid && EditEquipmentForm.submitted\" required>\r\n                                            <option selected>--select--</option>\r\n                                            <option *ngFor=\"let hd of healthDirectoriesList\" [value]=\"hd.id\">\r\n                                                {{translate.currentLang == \"En\" ?\r\n                                                hd.healthDirectoryName:hd.healthDirectoryNameAr}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <div *ngIf=\"(healthDirectory.touched || EditEquipmentForm.submitted) && healthDirectory.errors?.required\">\r\n                                            <span class=\"text-danger\">        \r\n                                                health Directory is required                               \r\n                                            </span>\r\n                                        </div>\r\n                                    </div> -->\r\n\r\n\r\n                                <!-- <div class=\"col-md-3\">\r\n                                        <label for=\"healthDistrict\">{{'equipment.healthDistrict'|translate}}</label>\r\n                                        <select class=\"form-control\" id=\"healthDistrict\" name=\"healthDistrict\"\r\n                                            #healthDistrict=\"ngModel\"\r\n                                            [(ngModel)]=\"equipmentObj.HealthDistrictId\"\r\n                                            [class.is-invalid]=\"healthDistrict.touched && healthDistrict.errors || EditEquipmentForm.submitted\" \r\n                                            [class.is-valid]=\"healthDistrict.valid && EditEquipmentForm.submitted\" required>\r\n                                            <option selected disabled>--select--</option>\r\n                                            <option *ngFor=\"let hd of HealthDistrictsList\" [value]=\"hd.id\">\r\n                                                {{translate.currentLang == \"En\" ?\r\n                                                hd.healthDistrictName:hd.healthDistrictNameAr}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <div *ngIf=\"(healthDistrict.touched|| EditEquipmentForm.submitted) && healthDistrict.errors?.required\">\r\n                                            <span class=\"text-danger\">        \r\n                                                health district is required                               \r\n                                            </span>\r\n                                        </div>\r\n                                    </div> -->\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"Department\">{{'equipment.Department' |translate}}</label>\r\n                                    <select type=\"text\" id=\"Department\" class=\"form-control\" #department=\"ngModel\"\r\n                                        name=\"department\" [(ngModel)]=\"equipmentObj.departmentId\"\r\n                                        [class.is-invalid]=\"department.touched && department.errors || EditEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"department.valid && EditEquipmentForm.submitted\" required\r\n                                        pTooltip=\"Select A Department\" tooltipPosition=\"bottom\">\r\n                                        <option selected disabled>--select--</option>\r\n                                        <option *ngFor=\"let d of departmentsList\" [value]=\"d.id\">\r\n                                            {{translate.currentLang == \"En\" ? d.departmentName:d.departmentNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div\r\n                                        *ngIf=\"(department.touched || EditEquipmentForm.submitted) && department.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            department is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"Employee\">{{'equipment.Employee' |translate}}</label>\r\n                                    <!-- <p-multiSelect [options]=\"users\" (onChange)=\"checkCheckBoxvalue($event)\"\r\n                                        defaultLabel=\"Select employee\" optionLabel=\"userName\" name=\"userName\"\r\n                                        pTooltip=\"Please,Select one or more employee\" tooltipPosition=\"bottom\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"selectedEmployees\"\r\n                                        selectedItemsLabel=\"{{selectedItemsLabel}} columns selected\"\r\n                                       >\r\n                                        <ng-template let-selectedEmployees pTemplate=\"selectedItems\" >\r\n                                          \r\n                                            <ng-container *ngFor=\"let selectedLayer of selectedEmployees;\">\r\n                                                {{selectedLayer.userName}} ,\r\n\r\n                                            </ng-container>\r\n                                          \r\n                                        </ng-template>\r\n                                    </p-multiSelect> -->\r\n\r\n                                    <!-- <select class=\"select\" multiple>\r\n                                        <option [value]=\"user.id\" *ngFor=\"let user of users\">{{user.userName}}</option>\r\n                                       \r\n                                      </select> -->\r\n\r\n                                    <ng-multiselect-dropdown \r\n                                    [placeholder]=\"'select an Employee'\"                                            \r\n                                    [settings]=\"dropdownSettings\" \r\n                                    [data]=\"users\"         \r\n                                    [(ngModel)]=\"selectedEmployees\"\r\n                                    name=\"userName\"\r\n                                    pTooltip=\"Please,Select one or more employee\"\r\n                                    tooltipPosition=\"bottom\" \r\n                                    [ngModelOptions]=\"{standalone: true}\"\r\n                                    (onSelect)=\"onItemSelect($event)\" \r\n                                    (onDeSelect)=\"onItemDeSelect($event)\"\r\n                                    (onSelectAll)=\"onSelectAll($event)\">\r\n                                    </ng-multiselect-dropdown>\r\n\r\n\r\n                                </div>\r\n\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"Floor\">{{'equipment.Floor' | translate}}</label>\r\n                                    <input type=\"number\" id=\"Floor\" class=\"form-control\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.floor\"\r\n                                        pTooltip=\"Select A Floor\" tooltipPosition=\"bottom\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"Room\">{{'equipment.Room' | translate}}</label>\r\n                                    <input type=\"number\" id=\"Room\" class=\"form-control\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.room\"\r\n                                        pTooltip=\"Select A Room\" tooltipPosition=\"bottom\" />\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"internalCode\">{{'equipment.internalCode' |translate}}</label>\r\n                                    <input type=\"text\" pInputText id=\"internalCode\" class=\"form-control\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.internalCode\"\r\n                                        pTooltip=\"Please,Select An InternalCode\" tooltipPosition=\"bottom\" />\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <br>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\">Next</button>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\">previous</button>\r\n\r\n                            <br><br><br>\r\n                        </fieldset>\r\n                    </p-tabPanel>\r\n\r\n                    <p-tabPanel header=\"{{'equipment.PurchasingDetails'|translate}}\">\r\n\r\n                        <fieldset class=\"tab\">\r\n                            <legend>{{'equipment.PurchasingDetails'|translate}}</legend>\r\n                            <div class=\"row\">\r\n\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"date\">{{'equipment.InstallationDate'|translate}}</label>\r\n                                    <input type=\"date\" class=\"form-control\" id=\"installationDate\"\r\n                                        name=\"installationDate\" placeholder=\"Installation Date\"\r\n                                        [(ngModel)]=\"equipmentObj.installationDate\" #installationDate=\"ngModel\"\r\n                                        [class.is-invalid]=\"installationDate.touched && installationDate.errors || EditEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"installationDate.valid && EditEquipmentForm.submitted\"\r\n                                        required pTooltip=\"Please,Enter An InstallationDate\" tooltipPosition=\"bottom\">\r\n                                    <div\r\n                                        *ngIf=\"(installationDate.touched || EditEquipmentForm.submitted) && installationDate.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            Installation Date is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"purchasedate\">{{'equipment.PurchaseDate'|translate}}</label>\r\n                                    <input type=\"date\" class=\"form-control\" id=\"purchasedate\" name=\"purchasedate\"\r\n                                        placeholder=\"purchase Date\" [(ngModel)]=\"equipmentObj.purchaseDate\"\r\n                                        #PurchaseDate=\"ngModel\"\r\n                                        [class.is-invalid]=\"PurchaseDate.touched && PurchaseDate.errors || EditEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"PurchaseDate.valid && EditEquipmentForm.submitted\" required\r\n                                        pTooltip=\"Please,Enter An PurchaseDate\" tooltipPosition=\"bottom\">\r\n                                    <div\r\n                                        *ngIf=\"(PurchaseDate.touched || EditEquipmentForm.submitted) && PurchaseDate.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            Purchase Date is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"supplier\">{{'equipment.Supplier'|translate}}</label>\r\n                                    <select type=\"text\" id=\"supplier\" class=\"form-control\" name=\"supplier\"\r\n                                        [(ngModel)]=\"equipmentObj.supplierId\" #supplierName=\"ngModel\"\r\n                                        [class.is-invalid]=\"supplierName.touched && supplierName.errors || EditEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"supplierName.valid && EditEquipmentForm.submitted\" required\r\n                                        pTooltip=\"Please,Select supplierName\" tooltipPosition=\"bottom\">\r\n                                        <option selected disabled>--select--</option>\r\n                                        <option *ngFor=\"let s of suppliersList\" [value]=\"s.id\">\r\n                                            {{translate.currentLang == \"En\" ? s.supplierName:s.supplierNameAr}}\r\n                                            <!-- {{s.supplierName}} -->\r\n                                        </option>\r\n                                    </select>\r\n                                    <div\r\n                                        *ngIf=\"(supplierName.touched || EditEquipmentForm.submitted) && supplierName.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            supplier is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"price\">{{'equipment.Price' |translate}}</label>\r\n                                    <input type=\"text\" pInputText id=\"price\" class=\"form-control\" name=\"price\"\r\n                                        [(ngModel)]=\"equipmentObj.price\" #price=\"ngModel\"\r\n                                        [class.is-invalid]=\"price.touched && price.errors || EditEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"price.valid && EditEquipmentForm.submitted\" required\r\n                                        pTooltip=\"Please,Enter the Price\" tooltipPosition=\"bottom\" />\r\n                                    <div\r\n                                        *ngIf=\"(price.touched || EditEquipmentForm.submitted) && price.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            price is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <br>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\">Next</button>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\">previous</button>\r\n\r\n                            <br><br><br>\r\n                        </fieldset>\r\n\r\n                    </p-tabPanel>\r\n\r\n                    <p-tabPanel header=\"{{'Actions.Attachments' |translate}}\">\r\n\r\n                        <fieldset class=\"tab\">\r\n                            <legend>{{'Actions.Attachments' |translate}}</legend>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12\">\r\n                                    <p-fileUpload\r\n                                        url=\"http://biomedicalupd-001-site1.itempurl.com/api/EquipmentAttachments/upload/\"\r\n                                        multiple=\"multiple\"\r\n                                        accept=\".xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf\"\r\n                                        maxFileSize=\"1000000000\" value=\"{Attachs}\">\r\n                                    </p-fileUpload>\r\n                                    <ul class=\"ulStyle\">\r\n                                        <div *ngFor=\"let file of Attachs\">\r\n                                            <li *ngIf=\"(file.fileName).includes('svg')||(file.fileName).includes('png')||\r\n                                                                           (file.fileName).includes('jpg')\">\r\n                                                <span><img\r\n                                                        src=\"http://biomedicalupd-001-site1.itempurl.com/{{file.fileName}}\"\r\n                                                        class=\"ng-star-inserted\" width=\"50\" [hidden]=\"isvisible\"></span>\r\n                                                &nbsp; &nbsp; &nbsp;\r\n                                                <button icon=\"pi pi-times\" pbutton=\"\" type=\"button\"\r\n                                                    ng-reflect-icon=\"pi pi-times\"\r\n                                                    class=\"p-button p-component p-button-icon-only\"\r\n                                                    (click)=\"RemoveAttach(file.id)\" [hidden]=\"isbtnvisible\">\r\n                                                    <span class=\"p-button-icon pi pi-times\" aria-hidden=\"true\"></span>\r\n                                                    <span aria-hidden=\"true\" class=\"p-button-label\">&nbsp;&nbsp;</span>\r\n                                                </button>\r\n                                            </li>\r\n                                            <li\r\n                                                *ngIf=\"(file.fileName).includes('xls')||(file.fileName).includes('xlsx')||\r\n                                                                        (file.fileName).includes('doc')||(file.fileName).includes('docx')||\r\n                                                                        (file.fileName).includes('ppt')||(file.fileName).includes('pptx')||\r\n                                                                        (file.fileName).includes('txt')||(file.fileName).includes('pdf')\">\r\n                                                <span class=\"ng-star-inserted\" [hidden]=\"isvisible\">\r\n                                                    {{file.fileName.substring(17)}}\r\n                                                </span>\r\n                                                &nbsp; &nbsp;\r\n                                                <button icon=\"pi pi-times\" pbutton=\"\" type=\"button\"\r\n                                                    ng-reflect-icon=\"pi pi-times\"\r\n                                                    class=\"p-button p-component p-button-icon-only\"\r\n                                                    (click)=\"RemoveAttach(file.id)\" [hidden]=\"isbtnvisible\">\r\n                                                    <span class=\"p-button-icon pi pi-times\" aria-hidden=\"true\"></span>\r\n                                                    <span aria-hidden=\"true\" class=\"p-button-label\">&amp;nbsp;</span>\r\n                                                </button>\r\n                                            </li>\r\n                                        </div>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <br>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-2\">\r\n                                    <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                                        (click)=\"hideDialog()\" type=\"button\" value=\"cancel\"\r\n                                        class=\"btn btn-info\"></button>\r\n                                </div>\r\n                                <div class=\"col-lg-2\">\r\n                                    <button pButton pRipple label=\"{{'Actions.Save' |translate}}\" icon=\"pi pi-check\"\r\n                                        value=\"save\" type=\"submit\" class=\"btn btn-info\"></button>\r\n                                </div>\r\n                            </div>\r\n                            <br>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\"\r\n                                [hidden]=\"isNextvalid\">Next</button>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\"\r\n                                [hidden]=\"isPrevvalid\">previous</button>\r\n\r\n                            <br><br><br>\r\n                        </fieldset>\r\n                    </p-tabPanel>\r\n\r\n                </p-tabView>\r\n            </div>\r\n\r\n        </form>\r\n    </ng-template>\r\n    <!-- <ng-template pTemplate=\"footer\">\r\n            <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\" class=\"p-button-text\" (click)=\"hideDialog()\"\r\n                value=\"cancel\"></button>\r\n            <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\" class=\"p-button-text\" (click)=\"updateProduct()\"\r\n                value=\"save\"></button>\r\n\r\n        </ng-template> -->\r\n</p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Equipment } from 'src/app/Shared/Models/Equipment';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\nimport { EmployeeService } from 'src/app/Shared/services/employee.service';\r\nimport { Category } from 'src/app/Shared/Models/Category';\r\nimport { Manufacturer } from 'src/app/Shared/Models/Manufacturer';\r\nimport { Origin } from 'src/app/Shared/Models/Origin';\r\nimport { Priority } from 'src/app/Shared/Models/Priority';\r\nimport { Status } from 'src/app/Shared/Models/Status';\r\nimport { SubCategory } from 'src/app/Shared/Models/SubCategory';\r\nimport { HealthCareUnit } from 'src/app/Shared/Models/HealthCareUnit';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { Department } from 'src/app/Shared/Models/Department';\r\nimport { Supplier } from 'src/app/Shared/Models/Supplier';\r\nimport { HealthDistrict } from 'src/app/Shared/Models/HealthDistrict';\r\nimport { healthDirectory } from 'src/app/Shared/Models/healthDirectory';\r\nimport { MasterequipmentService } from 'src/app/Shared/services/masterequipment.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Employee } from 'src/app/Shared/Models/Employee';\r\nimport { MasterEquipment } from 'src/app/Shared/Models/MasterEquipment';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ConfirmationService, Message, MessageService } from 'primeng/api';\r\nimport { FormGroup, NgForm } from '@angular/forms'\r\n\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { EquipmentAttachments } from 'src/app/Shared/Models/EquipmentAttachments';\r\n\r\nimport {  IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { Paging } from 'src/app/Shared/Models/Paging';\r\n\r\n\r\n//import { MasterEquipmentService } from 'src/app/Shared/services/Master-equipment.service';\r\n\r\n@Component({\r\n  selector: 'app-equipments-list',\r\n  templateUrl: './equipments-list.component.html',\r\n  styleUrls: ['./equipments-list.component.scss'],\r\n  styles: [`\r\n  :host ::ng-deep .p-dialog .product-image {\r\n      width: 150px;\r\n      margin: 0 auto 2rem auto;\r\n      display: block;\r\n  }\r\n`],\r\n  providers: [DatePipe]\r\n})\r\nexport class EquipmentsListComponent implements OnInit {\r\n  eqId: Number\r\n\r\n  equipmentDialog: boolean;\r\n  equipments: Equipment[];\r\n  MasterEquipment: MasterEquipment[];\r\n  equipmentObj: Equipment;\r\n  selectedProducts: Equipment[];\r\n  submitted: boolean;\r\n  opened: boolean;\r\n  healthCareUnitsList: HealthCareUnit[];\r\n  healthCareUnits: HealthCareUnit[];\r\n  CareUnits: HealthCareUnit[];\r\n  statusList: Status[];\r\n  priorityList: Priority[];\r\n  manufacturerList: Manufacturer[];\r\n  originsList: Origin[];\r\n  categoriesList: Category[];\r\n  subCategoriesList: SubCategory[];\r\n  departmentsList: Department[];\r\n  suppliersList: Supplier[];\r\n  employeeList: Employee[];\r\n  healthDirectoriesList: healthDirectory[];\r\n  HealthDistrictsList: HealthDistrict[];\r\n  users: User[];\r\n  organizations:Equipment[]\r\n  TecniciensList = []\r\n  employees: any[] = [];\r\n  selectedEmployees: User[];\r\n  EpmIDs: string[] = [];\r\n  msgs: Message[] = [];\r\n  districtsList: HealthDistrict[];\r\n  masterEquipment: MasterEquipment[];\r\n  InstallationDate: string = '';\r\n  purchaseDat: string = '';\r\n  index: number = 0;\r\n  Id: number;\r\n  ID = '';\r\n  isNextvalid: boolean = false;\r\n  isPrevvalid: boolean = true;\r\n  currentUser: User;\r\n  directories: Equipment[];\r\n  hospitals: Equipment[];\r\n  districts: Equipment[];\r\n  techniciens: Equipment[];\r\n  Attachs: EquipmentAttachments[];\r\n  Attach: EquipmentAttachments;\r\n  ImagePath: string;\r\n  fileName: string[];\r\n  isvisible: boolean = false;\r\n  isbtnvisible: boolean = false;\r\n  EquipAttachs: EquipmentAttachments[];\r\n  IDs: number[] = [];\r\n  page:Paging;\r\n  count:number;\r\n  public checkedemployees: string[] = ['8df79975-4750-441c-8254-a10a679585d5']\r\n  constructor(private equipmentService: EquipmentService,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    public translate: TranslateService,\r\n    private employeeService: EmployeeService,\r\n    private datePipe: DatePipe,\r\n    private masterEquipmentService: MasterequipmentService,\r\n    private confirmationService: ConfirmationService,\r\n    private messageservice: MessageService,\r\n    private userService: UserService) { this.currentUser = this.userService.currentUserValue; }\r\n\r\n\r\n  dropdownSettings:IDropdownSettings;\r\n  ngOnInit() {\r\n    this.selectedEmployees = []\r\n    this.directories = []\r\n    this.hospitals = []\r\n    this.TecniciensList = []\r\n    this.techniciens = []\r\n    this.sharedService.getAllunits().subscribe(data => { this.healthCareUnitsList = data });\r\n    this.sharedService.getAllstatuses().subscribe(data => { this.statusList = data });\r\n    this.sharedService.getAllpriorities().subscribe(data => { this.priorityList = data });\r\n    this.sharedService.getAllmanufacturer().subscribe(data => { this.manufacturerList = data });\r\n    this.sharedService.getAllOrigins().subscribe(data => { this.originsList = data });\r\n    this.sharedService.getAllCategories().subscribe(data => { this.categoriesList = data });\r\n    this.sharedService.getAllDepartments().subscribe(data => { this.departmentsList = data });\r\n    this.sharedService.getAllSuppliers().subscribe(data => { this.suppliersList = data});\r\n    this.sharedService.getAllHealthDirectories().subscribe(data => { this.healthDirectoriesList = data });\r\n    // this.sharedService.getAllEmployees().subscribe(data => { this.employeesList = data });\r\n    this.sharedService.getAllHealthDistrict().subscribe(data => { this.districtsList = data });\r\n    this.page={\r\n      pagenumber:1,\r\n      pagesize:10\r\n    }\r\n  this.equipmentService.getcount().subscribe(data=>\r\n  {\r\n    this.count=data\r\n  })\r\n    this.equipmentService.getAllwithpaging(this.page).subscribe(data=>{\r\n      this.equipments=data;      \r\n    })\r\n    this.equipmentObj = {\r\n      id: 0,\r\n      equipmentDescription: '',\r\n      equipmentDescriptionAr: '',\r\n      equipmentName: \"\",\r\n      equipmentNameAr: \"\",\r\n      installationDate: new Date(),\r\n      purchaseDate: new Date(),\r\n      priorityId: 0,\r\n      equipmentCategoryId: 0,\r\n      equipmentSubCategoryId: 0,\r\n      equipmentStatuSId: 0,\r\n      statusName: '',\r\n      statusNameAr: '',\r\n      manufacturerId: 0,\r\n      originId: 0,\r\n      healthCareUnitId: 0,\r\n      healthCareUnit: '',\r\n      healthCareUnitName: '',\r\n      healthCareUnitNameAr: '',\r\n      supplierId: 0,\r\n      supplierName: '',\r\n      supplierNameAr: '',\r\n      expectedLifeTime: 0,\r\n      length: 0,\r\n      height: 0,\r\n      weight: 0,\r\n      departmentId: 0,\r\n      departmentName: '',\r\n      departmentNameAr: '',\r\n      room: 0,\r\n      floor: 0,\r\n      remarks: '',\r\n      price: 0,\r\n      modelNumber: '',\r\n      versionNumber: '',\r\n      serialNumber: '',\r\n      internalCode: '',\r\n      upaCode: '',\r\n      barcode: '',\r\n      color: '',\r\n      colorAr: '',\r\n      manufacturerName: '',\r\n      manufacturerNameAr: '',\r\n      healthDirectoryId: 0,\r\n      healthDirectoryName: '',\r\n      healthDirectoryNameAr: '',\r\n      healthDistrictId: 0,\r\n      healthDistrictName: '',\r\n      healthDistrictNameAr: '',\r\n      employeeIDs: [],\r\n      AttachmentIDs: [],\r\n      masterEquipmentId: 0,\r\n      qrImgPath: '',\r\n      createdAt: new Date(),\r\n      organizationName: '',\r\n      organizationNameAr: '',\r\n      time: '',\r\n      recallNumber: 0,\r\n      recallDate: new Date(),\r\n      organizationId: 0,\r\n      contractRequestId:0,\r\n      organizationrequestid:0,\r\n      contractid:0\r\n    }\r\n    this.Attach = {\r\n      id: 0,\r\n      fileName: '',\r\n      equipmentId: 0\r\n    }\r\n    this.equipmentObj.employeeIDs = [];\r\n    this.dropdownSettings = {\r\n      singleSelection: false,\r\n      idField: 'id',\r\n      textField: 'userName',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      itemsShowLimit: 3,\r\n      allowSearchFilter: true\r\n    };   \r\n  }\r\n\r\n  onItemSelect(item) {\r\n    this.equipmentObj.employeeIDs.push(item.id)\r\n  //   if(this.equipmentObj.employeeIDs.length>0){\r\n  //         this.equipmentObj.employeeIDs.push(item.id)\r\n  //     this.equipmentObj.employeeIDs.forEach(element => {\r\n  //       console.log(\"eeee\",element,item.id)\r\n  //       if(element!=item.id){\r\n  //         console.log(\"basooma\",this.equipmentObj.employeeIDs)\r\n  //        }\r\n  //        else{\r\n  //          console.log(\"they are equal\")\r\n  //        }\r\n  //      });\r\n  //     for(var i=0;i<this.equipmentObj.employeeIDs.length;){\r\n  //       if(this.equipmentObj.employeeIDs[i]!=item.id){\r\n  //            this.equipmentObj.employeeIDs.push(item.id)\r\n  //         //     console.log(\"basooma\",this.equipmentObj.employeeIDs)\r\n  //         //    }\r\n  //     }\r\n  //   }\r\n  // }\r\n  //   else if(this.equipmentObj.employeeIDs.length== 0){\r\n  //     this.equipmentObj.employeeIDs.push(item.id)\r\n  //     console.log(\"basbeso\",this.equipmentObj.employeeIDs)\r\n    \r\n  // }\r\n}\r\nonItemDeSelect(item){\r\n  for(var i=0;i<this.equipmentObj.employeeIDs.length;i++){\r\n    if(this.equipmentObj.employeeIDs[i]==item.id){\r\n      this.equipmentObj.employeeIDs.splice(i,1)\r\n    }\r\n  }\r\n}\r\n  onSelectAll(items: any) {\r\n  }\r\n  getHealthCareUnit(id: number) {\r\n    this.sharedService.getAllunitsByDistrictId(id).subscribe(data => { this.CareUnits = data })\r\n\r\n  }\r\n  getAll() {\r\n    if (this.currentUser.roleName == 'Admin') {\r\n      this.equipmentService.getAllEquipments().\r\n        subscribe(data => { this.equipments = data})\r\n    }\r\n\r\n    if (this.currentUser.roleName == 'Governorate') {\r\n      this.equipmentService.getAllEquipments().\r\n        subscribe(data => {\r\n          this.equipments = data,\r\n\r\n\r\n            this.equipments.forEach(element => {\r\n              if (element.healthDirectoryId == this.currentUser.healthdirId) {\r\n\r\n                this.directories.push(element)\r\n                this.equipments = this.directories\r\n              }\r\n            })\r\n        });\r\n    }\r\n\r\n    if (this.currentUser.roleName == 'Hospital') {\r\n      this.equipmentService.getAllEquipments().\r\n        subscribe(data => {\r\n          this.equipments = data,\r\n            this.equipments.forEach(element => {\r\n              if (element.healthCareUnitId == this.currentUser.healthCareUnitId) {\r\n                this.hospitals.push(element)\r\n              }\r\n              if (this.currentUser.roleName == 'Hospital') {\r\n                this.equipments = this.hospitals\r\n              }\r\n            })\r\n        });\r\n    }\r\n\r\n    if (this.currentUser.roleName == 'City') {\r\n      this.equipmentService.getAllEquipments().\r\n        subscribe(data => {\r\n          this.equipments = data,\r\n            this.equipments.forEach(element => {\r\n              if (element.healthDistrictId == this.currentUser.healthDistrictId) {\r\n                this.districts.push(element)\r\n              }\r\n              if (this.currentUser.roleName == 'City') {\r\n                this.equipments = this.districts\r\n              }\r\n            })\r\n        });\r\n    }\r\n\r\n    if (this.currentUser.roleName == 'Technician') {\r\n    \r\n      this.equipmentService.getAllEquipments().\r\n        subscribe(data => {\r\n          this.equipments = data,\r\n            this.equipments.forEach(element => {\r\n              element.employeeIDs.forEach(usrElement => {\r\n                if (usrElement == this.currentUser.id) {                \r\n                  this.techniciens.push(element)\r\n                }\r\n               \r\n              })              \r\n            })\r\n            if (this.currentUser.roleName == 'Technician') {\r\n              this.equipments = this.techniciens\r\n            }\r\n        });\r\n      }\r\n\r\n        if (this.currentUser.roleName == 'Organization') {\r\n          this.equipmentService.getAllEquipments().\r\n            subscribe(data => {\r\n              this.equipments = data,\r\n                this.equipments.forEach(element => {\r\n                  if (element.organizationId == this.currentUser.organizationId) {\r\n                    this.organizations.push(element)\r\n                  }\r\n                  if (this.currentUser.roleName == 'Organization') {\r\n                    this.equipments = this.organizations\r\n                  }\r\n                })\r\n            });\r\n        }\r\n  }\r\n  openNew(eq) {\r\n    this.InstallationDate = this.datePipe.transform(eq.installationDate, 'yyyy-MM-dd');\r\n    this.purchaseDat = this.datePipe.transform(eq.purchaseDate, 'yyyy-MM-dd');\r\n    this.getAttachs(eq.id);\r\n    eq.installationDate = this.InstallationDate;\r\n    eq.purchaseDate = this.purchaseDat;\r\n    this.equipmentDialog = true\r\n    this.submitted = false;\r\n\r\n    this.equipmentObj = eq;\r\n    this.getSelectedemployees(eq.id);\r\n    this.eqId = this.equipmentObj.id;\r\n    this.sharedService.getAllunits().subscribe(data => {\r\n      this.healthCareUnitsList = data\r\n    });\r\n\r\n    this.sharedService.getAllstatuses().subscribe(data => { this.statusList = data });\r\n    this.sharedService.getAllpriorities().subscribe(data => { this.priorityList = data });\r\n    this.sharedService.getAllmanufacturer().subscribe(data => { this.manufacturerList = data });\r\n    this.sharedService.getAllOrigins().subscribe(data => { this.originsList = data });\r\n    this.sharedService.getAllCategories().subscribe(data => { this.categoriesList = data });\r\n    this.sharedService.getAllDepartments().subscribe(data => { this.departmentsList = data });\r\n    this.sharedService.getAllSuppliers().subscribe(data => { this.suppliersList = data });\r\n    this.userService.getUsers().subscribe(data => {\r\n      this.users = data,\r\n      this.users.forEach(element => {\r\n        if (this.currentUser.roleName == 'Hospital') {\r\n          if ((element.healthCareUnitId == this.currentUser.healthCareUnitId) && element.roleName == 'Technician') {\r\n            this.TecniciensList.push(element)\r\n            this.users = this.TecniciensList\r\n          }\r\n        }\r\n      })\r\n    });\r\n    this.sharedService.getAllHealthDirectories().subscribe(data => { this.healthDirectoriesList = data });\r\n    this.masterEquipmentService.getAll().subscribe(data => { this.masterEquipment = data });\r\n\r\n  }\r\n  getAllMasterEquipment() {\r\n    this.masterEquipmentService.getAll().subscribe(data => { this.MasterEquipment = data});\r\n  }\r\n  fillDistrict(name: string) {\r\n    this.sharedService.getDirectoryIdByname(name).subscribe(data => {\r\n      this.sharedService.getAllHealthDistricts(data).subscribe(data => {\r\n        this.HealthDistrictsList = data\r\n      });\r\n    });\r\n\r\n  }\r\n  fillHospital(name: string) {\r\n    this.sharedService.getDirectoryIdByname(name).subscribe(data => {\r\n      this.sharedService.getAllunitsByDistrictId(data).subscribe(data => {\r\n        this.healthCareUnits = data;\r\n      })\r\n    })\r\n  }\r\n  fillSubCategory() {\r\n    this.sharedService.getAllSubCategories(this.equipmentObj.equipmentCategoryId).subscribe(data => { this.subCategoriesList = data});\r\n  }\r\n  hideDialog() {\r\n    this.equipmentDialog = false;\r\n    this.submitted = false;\r\n\r\n  }\r\n  getAttachs(equipId) {\r\n    this.equipmentService.getAllAttachForEquipment(equipId).subscribe(data => {\r\n      this.Attachs = data,\r\n        this.Attachs.forEach(el => {\r\n        });\r\n    })\r\n  }\r\n  getimagepath(img) {\r\n    this.equipmentService.getImagePath(img).subscribe(data => {\r\n      this.ImagePath = data\r\n    });\r\n  }\r\n\r\n  getSelectedemployees(id) {\r\n\r\n    this.userService.getEquipmentEmployees(id).subscribe(\r\n      data => {\r\n        this.selectedEmployees = data;\r\n        this.selectedEmployees.forEach(value => {\r\n          this.EpmIDs.push(value.id);\r\n        });\r\n      });\r\n  }\r\n  updateProduct(myform: NgForm) {\r\n    this.submitted = true;\r\n    this.equipmentObj.installationDate = new Date(this.InstallationDate);\r\n    this.equipmentObj.purchaseDate = new Date(this.purchaseDat);\r\n    this.equipmentService.getAllAttachWithNoEquipment().subscribe(data => {\r\n      this.EquipAttachs = data;\r\n      this.EquipAttachs.forEach(element => {\r\n        this.IDs.push(element.id);\r\n      });\r\n      this.equipmentObj.AttachmentIDs = this.IDs;\r\n      this.equipmentService.updateEquipment(this.equipmentObj.id, this.equipmentObj).subscribe(data => { this.hideDialog() });\r\n\r\n    });\r\n  }\r\n\r\n  deleteProduct(equipmentId) {\r\n\r\n    this.equipmentService.deleteEquipment(equipmentId).subscribe(\r\n      data => {\r\n    this.getAll();\r\n      });\r\n\r\n  }\r\n  confirmDelete(eqId, eqName) {\r\n    if (this.translate.currentLang == 'En') {\r\n\r\n      this.confirmationService.confirm({\r\n        message: 'Do you want to delete this' + eqName + ' Equipment?',\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        accept: () => {\r\n          this.deleteProduct(eqId)\r\n          this.messageservice.add({ severity: 'info', detail: 'Record deleted' });\r\n\r\n        },\r\n        reject: () => {\r\n          this.messageservice.add({ severity: 'info', detail: 'Delete rejected' });\r\n        },\r\n        acceptLabel: \"yes\",\r\n        rejectLabel: \"No\"\r\n      });\r\n    }\r\n    else if (this.translate.currentLang == 'Ar') {\r\n      this.confirmationService.confirm({\r\n        message: 'هل انت متأكد من مسح' + eqName + 'من القائمه ',\r\n        header: 'تاكيد عملية المسح',\r\n        icon: 'pi pi-info-circle',\r\n\r\n        accept: () => {\r\n          this.deleteProduct(eqId)\r\n          this.msgs = [{ severity: 'info', detail: 'تم المسح' }]\r\n\r\n\r\n        },\r\n        reject: () => {\r\n          this.msgs = [{ severity: 'info', detail: 'رفض عمليه المسح' }];\r\n        },\r\n        acceptLabel: \"نعم\",\r\n        rejectLabel: \"لا\",\r\n      });\r\n    }\r\n  }\r\n\r\n  // checkCheckBoxvalue(event) {\r\n  //   this.EpmIDs = [];\r\n  //   console.log(\"selected111\", this.selectedEmployees);\r\n  //   var index = this.selectedEmployees.length;\r\n  //   if (event.value.length === index + 1) {\r\n  //     console.log(\"index\", index);\r\n  //     console.log(event)\r\n  //     this.selectedEmployees.forEach(value => {\r\n  //       if (value.id != event.itemValue.id) {\r\n  //         console.log(value, event.itemValue.id, \"uuuuuuddddddddddddddd\")\r\n  //         this.equipmentObj.employeeIDs.push(event.itemValue.id);\r\n  //       }\r\n  //     });\r\n  //   }\r\n  //   else {\r\n\r\n  //     var ind = this.equipmentObj.employeeIDs.indexOf(event.itemValue.id);\r\n  //     this.equipmentObj.employeeIDs.splice(ind, 1);\r\n  //   }\r\n  //   this.EpmIDs = this.equipmentObj.employeeIDs\r\n\r\n  //   console.log(\"basooma\", this.EpmIDs, \"yyyyyyyyyy\", this.equipmentObj.employeeIDs)\r\n  //   // var index = this.equipmentObj.employeeIDs.length;\r\n  //   // if (event.value.length === index + 1) {\r\n  //   //   if (event.itemValue.id === event.value[index].id) {\r\n  //   //     this.equipmentObj.employeeIDs.push(event.value[index].id);\r\n  //   //     //     console.log(\"after push\", this.equipmentObj.employeeIDs);\r\n  //   //   }\r\n  //   // }\r\n  //   // else {\r\n  //   //   var ind = this.equipmentObj.employeeIDs.indexOf(event.itemValue.id);\r\n  //   //   this.equipmentObj.employeeIDs.splice(ind, 1);\r\n  //   //   //   console.log(\"after remove\", this.equipmentObj.employeeIDs);\r\n  //   // }\r\n  // }\r\n  Next() {\r\n    this.index++;\r\n    if (this.index === 4) {\r\n      this.isNextvalid = true;\r\n      this.isPrevvalid = false;\r\n    }\r\n\r\n  }\r\n  Previous() {\r\n    this.index--;\r\n    if (this.index === 0) {\r\n      this.isNextvalid = false;\r\n      this.isPrevvalid = true;\r\n    }\r\n\r\n  }\r\n  handleChange(e) {\r\n    this.index = e.index;\r\n    if (this.index === 4) {\r\n      this.isNextvalid = true;\r\n      this.isPrevvalid = false;\r\n    }\r\n    else if (this.index === 0) {\r\n      this.isNextvalid = false;\r\n      this.isPrevvalid = true;\r\n    }\r\n\r\n  }\r\n  getDetails(id: number) {\r\n    this.router.navigate(['home/EquipmentDetailsAdminComponent', id]);\r\n  }\r\n  RemoveAttach(id: number) {\r\n    this.equipmentService.DeleteAttachment(id).subscribe(data => {});\r\n    this.isvisible = true;\r\n    this.isbtnvisible = true;\r\n  }\r\n  openLink() {\r\n    // window.open(\"http://localhost:4200/pdfCreate\");\r\n    this.router.navigate(['/pdfCreate']);\r\n  }\r\n}\r\n","<p-dialog [(visible)]=\"equipmentDialog\" [style]=\"{width: '70vw'}\" [modal]=\"true\" styleClass=\"p-fluid\"\r\n    (onHide)=\"hideDialog()\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <h3 class=\"title\">{{'equipment.AddNewEquipment' | translate}}</h3>\r\n            </div>\r\n            <div>\r\n                <img src=\"./../assets/images/ecg.png\" class=\"img\" [alt]=\"product\">\r\n            </div>\r\n        </div>\r\n        <form (ngSubmit)=\"AddEquipmentForm.valid && NextAndSave()\" #AddEquipmentForm=\"ngForm\">\r\n            <div class=\"container\">\r\n                <p-tabView [activeIndex]=\"index\" (onChange)=\"handleChange($event)\">\r\n                    <p-tabPanel header=\"{{'equipment.Details' | translate}}\" [disabled]=true>\r\n                        <fieldset class=\"tab\">\r\n                            <legend>{{'equipment.Details'| translate}}</legend>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-3 form-group\" *ngIf=\"translate.currentLang == 'En'\">\r\n                                    <label for=\"name\">{{\"equipment.Name\"| translate}}</label>\r\n                                    <select class=\"form-control\" name=\"masterequipmentName\"\r\n                                        [class.is-invalid]=\"masterequipmentName.touched && masterequipmentName.errors || AddEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"masterequipmentName.valid && AddEquipmentForm.submitted\"\r\n                                        #masterequipmentName=\"ngModel\" [(ngModel)]=\"equipmentObj.MasterEquipmentId\"\r\n                                        pTooltip=\"Please,Select An Equipment\" tooltipPosition=\"bottom\" required>\r\n                                        <option selected disabled>--select--</option>\r\n                                        <option *ngFor=\"let s of masterEquipment\" [value]=\"s.id\">\r\n                                            {{s.name}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div\r\n                                        *ngIf=\"(masterequipmentName.touched || AddEquipmentForm.submitted) && masterequipmentName.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            English name is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-md-3 form-group\" *ngIf=\"translate.currentLang == 'Ar'\">\r\n                                    <label for=\"name\">{{\"equipment.NameAr\"| translate}}</label>\r\n                                    <select class=\"form-control\" id=\"masterequipmentNameAr\" name=\"masterequipmentNameAr\"\r\n                                        #masterequipmentNameAr=\"ngModel\"\r\n                                        [class.is-invalid]=\"masterequipmentNameAr.touched && masterequipmentNameAr.errors || AddEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"masterequipmentNameAr.valid && AddEquipmentForm.submitted\"\r\n                                        [(ngModel)]=\"equipmentObj.equipmentNameAr\" required>\r\n                                        <option selected disabled>--select--</option>\r\n                                        <option *ngFor=\"let s of masterEquipment\" [value]=\"s.nameAr\">\r\n                                            {{s.nameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div\r\n                                        *ngIf=\"(masterequipmentNameAr.touched || AddEquipmentForm.submitted) && masterequipmentNameAr.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            Arabic name is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"internalCode\">{{'equipment.barcode'| translate}}</label>\r\n                                    <input type=\"text\" pInputText id=\"barcode\" class=\"form-control\" name=\"barcode\"\r\n                                        [(ngModel)]=\"equipmentObj.barcode\" required #barCode=\"ngModel\"\r\n                                        [class.is-invalid]=\"barCode.touched && barCode.errors || AddEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"barCode.valid && AddEquipmentForm.submitted\"\r\n                                        pTooltip=\"Please,Enter A barCode\" tooltipPosition=\"bottom\" />\r\n                                    <span class=\"text-danger\"\r\n                                        *ngIf=\"(barCode.touched || AddEquipmentForm.submitted) && barCode.errors?.required\">\r\n                                        Code is required\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"status\">{{'equipment.EquipmentStatus'|translate}}</label>\r\n                                    <div>\r\n                                        <ul class=\"list-group\" pTooltip=\"Select A status\" tooltipPosition=\"bottom\">\r\n                                            <li class=\"list-group-item\" *ngFor=\"let item of statusList\">\r\n                                                <input type=\"radio\" [(ngModel)]=\"equipmentObj.equipmentStatuSId\"\r\n                                                    name=\"status\" id=\"status\" #status=\"ngModel\" [value]=\"item.id\" />\r\n                                                {{translate.currentLang == \"En\" ?item.status:item.status}}\r\n                                            </li>\r\n                                        </ul>\r\n                                        <div *ngIf=\"!equipmentObj.equipmentStatuSId\">\r\n                                            <span class=\"text-danger\">\r\n                                                Status is required\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n\r\n                                <div class=\"col-md-12 \" *ngIf=\"translate.currentLang == 'En'\">\r\n\r\n                                    <label for=\"Description\">{{'equipment.Description'| translate}}</label>\r\n                                    <textarea class=\"form-control\" id=\"Description\" type=\"text\"\r\n                                        [(ngModel)]=\"equipmentObj.equipmentDescription\"\r\n                                        [ngModelOptions]=\"{standalone: true}\"\r\n                                        pTooltip=\"Please,Select An equipmentDescription\"\r\n                                        tooltipPosition=\"bottom\"></textarea>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12\" *ngIf=\"translate.currentLang == 'Ar'\">\r\n                                    <label for=\"Description\">{{'equipment.DescriptionAr'| translate}}</label>\r\n                                    <textarea class=\"form-control\" id=\"Description\" type=\"text\"\r\n                                        [(ngModel)]=\"equipmentObj.equipmentDescriptionAr\"\r\n                                        [ngModelOptions]=\"{standalone: true}\"\r\n                                        pTooltip=\"Please,Select An equipmentDescription\"\r\n                                        tooltipPosition=\"bottom\"></textarea>\r\n                                </div>\r\n                            </div>\r\n                        <br><br><br>\r\n                    </fieldset>\r\n                    <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\"\r\n                        [hidden]=\"isNextvalid\">Next</button>\r\n                    <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\"\r\n                        [hidden]=\"isPrevvalid\">previous</button>\r\n                    </p-tabPanel>\r\n\r\n                    <p-tabPanel header=\"{{'equipment.IndustryDetails' | translate}}\" [disabled]=true>\r\n                        <fieldset class=\"tab\">\r\n                            <legend>{{'equipment.IndustryDetails' | translate}}</legend>\r\n                            <div class=\"row\">\r\n\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"Color\">{{'equipment.Color'| translate}}</label>\r\n                                    <input type=\"text\" pInputText id=\"Color\" class=\"form-control\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.color\" autofocus\r\n                                        pTooltip=\"Enter A Color\" tooltipPosition=\"bottom\" />\r\n                                </div>\r\n                                <!-- <div class=\"col-md-3\">\r\n                                    <label for=\"Color\">{{'equipment.ColorAr'| translate}}</label>\r\n                                    <input type=\"text\" pInputText id=\"Color\" class=\"form-control\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.colorAr\"/>\r\n                                </div> -->\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"weight\">{{'equipment.weight'| translate}}</label>\r\n                                    <input type=\"number\" pInputText id=\"weight\" [ngModelOptions]=\"{standalone: true}\"\r\n                                        class=\"form-control\" [(ngModel)]=\"equipmentObj.weight\" pTooltip=\"Enter A weight\"\r\n                                        tooltipPosition=\"bottom\" />\r\n                                    <!-- <small class=\"p-error\" *ngIf=\"submitted && !equipmentObj.weight\">weight is\r\n                                        required.</small> -->\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"length\">{{'equipment.length'| translate}}</label>\r\n                                    <input type=\"number\" pInputText id=\"length\" [ngModelOptions]=\"{standalone: true}\"\r\n                                        class=\"form-control\" [(ngModel)]=\"equipmentObj.length\" pTooltip=\"Enter A length\"\r\n                                        tooltipPosition=\"bottom\" />\r\n                                    <!-- <small class=\"p-error\" *ngIf=\"submitted && !equipmentObj.length\">length is\r\n                                        required.</small> -->\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"height\">{{'equipment.height'| translate}}</label>\r\n                                    <input type=\"number\" pInputText id=\"height\" class=\"form-control\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.height\"\r\n                                        pTooltip=\"Enter A height\" tooltipPosition=\"bottom\" />\r\n                                    <!-- <small class=\"p-error\" *ngIf=\"submitted && !equipmentObj.height\">height is\r\n                                        required.</small> -->\r\n                                </div>\r\n\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"serialNumber\">{{'equipment.serialNumber'| translate}}</label>\r\n                                    <input type=\"text\" pInputText id=\"serialNumber\" class=\"form-control\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.serialNumber\"\r\n                                        pTooltip=\"Enter A serialNumber\" tooltipPosition=\"bottom\" />\r\n                                </div>\r\n                            </div>\r\n                            <br>\r\n                            \r\n                            <br><br><br>\r\n                        </fieldset>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\">previous</button>\r\n                    </p-tabPanel>\r\n\r\n                    <p-tabPanel header=\"{{'equipment.Location' |translate}}\" [disabled]=true>\r\n\r\n                        <fieldset class=\"tab\">\r\n                            <legend>{{'equipment.Location' |translate}}</legend>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-3 form-group\" *ngIf=\"currentUser.roleName==='Admin' || currentUser.roleName==='Governorate' \r\n                                || currentUser.roleName==='City' ||currentUser.roleName==='Organization'||currentUser.roleName==='HeadQuarter'\r\n                                ||currentUser.roleName==='DataEntry' ||currentUser.roleName==='Supplier'\">\r\n                                    <label for=\"healthName\">{{'equipment.healthCareUnit'|translate}}</label>\r\n                                    <select class=\"form-control\" id=\"healthName\" name=\"healthName\" #healthName=\"ngModel\"\r\n                                        [class.is-invalid]=\"healthName.touched && healthName.errors || AddEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"healthName.valid && AddEquipmentForm.submitted\"\r\n                                        [(ngModel)]=\"equipmentObj.HealthCareUnitId\" required\r\n                                        pTooltip=\"Select A HealthCareUnit\" tooltipPosition=\"bottom\">\r\n                                        <option selected disabled>--select--</option>\r\n                                        <option *ngFor=\"let h of healthCareUnitsList\" [value]=\"h.id\">\r\n                                            {{translate.currentLang == \"En\" ?\r\n                                            h.healthCareUnitName:h.healthCareUnitNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div\r\n                                        *ngIf=\"(healthName.touched|| AddEquipmentForm.submitted) && healthName.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            health CareUnit is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                              \r\n                                <!-- <div class=\"col-md-3\">\r\n\r\n                                    <label for=\"healthDirectory\">{{'equipment.healthDirectory' |translate}}</label>\r\n\r\n                                    <select class=\"form-control\" id=\"healthDirectory\" name=\"healthDirectory\"\r\n                                        #healthDirectory=\"ngModel\"\r\n                                        [(ngModel)]=\"equipmentObj.HealthDirectoryId\" (change)=\"fillDistrict(equipmentObj.HealthDirectoryId)\"\r\n                                        [class.is-invalid]=\"healthDirectory.touched && healthDirectory.errors || AddEquipmentForm.submitted\" \r\n                                        [class.is-valid]=\"healthDirectory.valid && AddEquipmentForm.submitted\" required>\r\n                                        <option selected>--select--</option>\r\n                                        <option *ngFor=\"let hd of healthDirectoriesList\" [value]=\"hd.id\">\r\n                                            {{translate.currentLang == \"En\" ?\r\n                                            hd.healthDirectoryName:hd.healthDirectoryNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div *ngIf=\"(healthDirectory.touched || AddEquipmentForm.submitted) && healthDirectory.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            health Directory is required                               \r\n                                        </span>\r\n                                    </div>\r\n                                </div> -->\r\n\r\n\r\n                                <!-- <div class=\"col-md-3\">\r\n                                    <label for=\"healthDistrict\">{{'equipment.healthDistrict'|translate}}</label>\r\n                                    <select class=\"form-control\" id=\"healthDistrict\" name=\"healthDistrict\"\r\n                                        #healthDistrict=\"ngModel\"\r\n                                        [(ngModel)]=\"equipmentObj.HealthDistrictId\"\r\n                                        [class.is-invalid]=\"healthDistrict.touched && healthDistrict.errors || AddEquipmentForm.submitted\" \r\n                                        [class.is-valid]=\"healthDistrict.valid && AddEquipmentForm.submitted\" required>\r\n                                        <option selected disabled>--select--</option>\r\n                                        <option *ngFor=\"let hd of HealthDistrictsList\" [value]=\"hd.id\">\r\n                                            {{translate.currentLang == \"En\" ?\r\n                                            hd.healthDistrictName:hd.healthDistrictNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div *ngIf=\"(healthDistrict.touched|| AddEquipmentForm.submitted) && healthDistrict.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            health district is required                               \r\n                                        </span>\r\n                                    </div>\r\n                                </div> -->\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"Department\">{{'equipment.Department' |translate}}</label>\r\n                                    <select type=\"text\" id=\"Department\" class=\"form-control\" #department=\"ngModel\"\r\n                                        name=\"department\" [(ngModel)]=\"equipmentObj.DepartmentId\"\r\n                                        [class.is-invalid]=\"department.touched && department.errors || AddEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"department.valid && AddEquipmentForm.submitted\" required\r\n                                        pTooltip=\"Select A Department\" tooltipPosition=\"bottom\">\r\n                                        <option selected disabled>--select--</option>\r\n                                        <option *ngFor=\"let d of departmentsList\" [value]=\"d.id\">\r\n                                            {{translate.currentLang == \"En\" ? d.departmentName:d.departmentNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div\r\n                                        *ngIf=\"(department.touched || AddEquipmentForm.submitted) && department.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            department is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"Employee\">{{'equipment.Employee' |translate}}</label>\r\n                                    <!-- <p-multiSelect [options]=\"users\" (onChange)=\"checkCheckBoxvalue($event)\"\r\n                                        defaultLabel=\"Select employee\" optionLabel=\"userName\" \r\n                                        [class.is-invalid]=\"employees.touched && employees.errors || AddEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"employees.valid && AddEquipmentForm.submitted\"\r\n                                        pTooltip=\"Please,Select one or more employee\" tooltipPosition=\"bottom\" required>\r\n                                    </p-multiSelect> -->\r\n                                    <ng-multiselect-dropdown \r\n                                    [placeholder]=\"'select an Employee'\"                                              \r\n                                    [settings]=\"dropdownSettings\" \r\n                                    [data]=\"users\"                                  \r\n                                    name=\"userName\"\r\n                                    pTooltip=\"Please,Select one or more employee\"\r\n                                    tooltipPosition=\"bottom\"                               \r\n                                    (onSelect)=\"onItemSelect($event)\" \r\n                                    (onDeSelect)=\"onItemDeSelect($event)\"\r\n                                    (onSelectAll)=\"onSelectAll($event)\">\r\n                                    </ng-multiselect-dropdown>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"Floor\">{{'equipment.Floor' | translate}}</label>\r\n                                    <input type=\"number\" id=\"Floor\" class=\"form-control\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.floor\"\r\n                                        pTooltip=\"Select A Floor\" tooltipPosition=\"bottom\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"Room\">{{'equipment.Room' | translate}}</label>\r\n                                    <input type=\"number\" id=\"Room\" class=\"form-control\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.room\"\r\n                                        pTooltip=\"Select A Room\" tooltipPosition=\"bottom\" />\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"internalCode\">{{'equipment.internalCode' |translate}}</label>\r\n                                    <input type=\"text\" pInputText id=\"internalCode\" class=\"form-control\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.internalCode\"\r\n                                        pTooltip=\"Please,Select An InternalCode\" tooltipPosition=\"bottom\" />\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <br>\r\n                            \r\n                            <br><br><br>\r\n                        </fieldset>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\">previous</button>\r\n                    </p-tabPanel>\r\n\r\n                    <p-tabPanel header=\"{{'equipment.PurchasingDetails'|translate}}\" [disabled]=true>\r\n\r\n                        <fieldset class=\"tab\">\r\n                            <legend>{{'equipment.PurchasingDetails'|translate}}</legend>\r\n                            <div class=\"row\">\r\n\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"date\">{{'equipment.InstallationDate'|translate}}</label>\r\n                                    <input type=\"date\" class=\"form-control\" id=\"installationDate\"\r\n                                        name=\"installationDate\" placeholder=\"Installation Date\"\r\n                                        [(ngModel)]=\"equipmentObj.InstallationDate\" #installationDate=\"ngModel\"\r\n                                        [class.is-invalid]=\"installationDate.touched && installationDate.errors || AddEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"installationDate.valid && AddEquipmentForm.submitted\" required\r\n                                        pTooltip=\"Please,Enter An InstallationDate\" tooltipPosition=\"bottom\">\r\n                                    <div\r\n                                        *ngIf=\"(installationDate.touched || AddEquipmentForm.submitted) && installationDate.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            Installation Date is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"purchasedate\">{{'equipment.PurchaseDate'|translate}}</label>\r\n                                    <input type=\"date\" class=\"form-control\" id=\"purchasedate\" name=\"purchasedate\"\r\n                                        placeholder=\"purchase Date\" [(ngModel)]=\"equipmentObj.PurchaseDate\"\r\n                                        #PurchaseDate=\"ngModel\"\r\n                                        [class.is-invalid]=\"PurchaseDate.touched && PurchaseDate.errors || AddEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"PurchaseDate.valid && AddEquipmentForm.submitted\" required\r\n                                        pTooltip=\"Please,Enter An PurchaseDate\" tooltipPosition=\"bottom\">\r\n                                    <div\r\n                                        *ngIf=\"(PurchaseDate.touched || AddEquipmentForm.submitted) && PurchaseDate.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            Purchase Date is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"supplier\">{{'equipment.Supplier'|translate}}</label>\r\n                                    <select type=\"text\" id=\"supplier\" class=\"form-control\" name=\"supplier\"\r\n                                        [(ngModel)]=\"equipmentObj.SupplierId\" #supplierName=\"ngModel\"\r\n                                        [class.is-invalid]=\"supplierName.touched && supplierName.errors || AddEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"supplierName.valid && AddEquipmentForm.submitted\" required\r\n                                        pTooltip=\"Please,Select supplierName\" tooltipPosition=\"bottom\">\r\n                                        <option selected disabled>--select--</option>\r\n                                        <option *ngFor=\"let s of suppliersList\" [value]=\"s.id\">\r\n                                            {{translate.currentLang == \"En\" ? s.supplierName:s.supplierNameAr}}\r\n                                            <!-- {{s.supplierName}} -->\r\n                                        </option>\r\n                                    </select>\r\n                                    <div\r\n                                        *ngIf=\"(supplierName.touched || AddEquipmentForm.submitted) && supplierName.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            supplier is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"price\">{{'equipment.Price' |translate}}</label>\r\n                                    <input type=\"text\" pInputText id=\"price\" class=\"form-control\" name=\"price\"\r\n                                        [(ngModel)]=\"equipmentObj.Price\" #price=\"ngModel\"\r\n                                        [class.is-invalid]=\"price.touched && price.errors || AddEquipmentForm.submitted\"\r\n                                        [class.is-valid]=\"price.valid && AddEquipmentForm.submitted\" required\r\n                                        pTooltip=\"Please,Enter the Price\" tooltipPosition=\"bottom\" />\r\n                                    <div\r\n                                        *ngIf=\"(price.touched || AddEquipmentForm.submitted) && price.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            price is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <br>\r\n                            \r\n                            <br><br><br>\r\n                        </fieldset>\r\n                        <button type=\"submit\" class=\"btn btn-info btnNext\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\">previous</button>\r\n\r\n                    </p-tabPanel>\r\n\r\n                    <p-tabPanel header=\"{{'Actions.Attachments' |translate}}\" [disabled]=true>\r\n                        <fieldset class=\"tab\">\r\n                            <!-- http://localhost:51368/api/EquipmentAttachments/upload/{{eqId}} -->\r\n                            <!-- url=\"http://biomedicalupd-001-site1.itempurl.com/api/EquipmentAttachments/upload/{{eqId}}\" -->\r\n                            <legend>{{'Actions.Attachments' |translate}}</legend>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12\">\r\n                                    <p-fileUpload name=\"demo[]\" multiple=\"true\"\r\n                                        url=\"http://localhost:51368/api/EquipmentAttachments/upload/{{eqId}}\"\r\n                                        accept=\".xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf\"\r\n                                        maxFileSize=\"1000000000\">\r\n                                    </p-fileUpload>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <br>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-2\">\r\n                                    <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                                        (click)=\"hideDialog()\" type=\"button\" value=\"cancel\"\r\n                                        class=\"btn btn-info\"></button>\r\n                                </div>\r\n                                <div class=\"col-lg-2\">\r\n                                    <button pButton pRipple label=\"{{'Actions.Save' |translate}}\" icon=\"pi pi-check\"\r\n                                        value=\"save\" type=\"button\" class=\"btn btn-info\" (click)=\"saveProduct()\"></button>\r\n                                </div>\r\n                            </div>\r\n                            <br>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\"\r\n                                [hidden]=\"isNextvalid\">Next</button>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\"\r\n                                [hidden]=\"isPrevvalid\">previous</button>\r\n\r\n                            <br><br><br>\r\n                        </fieldset>\r\n                    </p-tabPanel>\r\n                    \r\n                    <p-tabPanel header=\"{{'equipment.QrCode'|translate}}\">\r\n                        <fieldset class=\"tab\">\r\n                            <legend>{{'equipment.QrCode'|translate}}</legend>\r\n                            <div>\r\n                                <h4>QRCODE GENERATOR</h4>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-3\">\r\n                                    <input [(ngModel)]=\"equipmentObj.serialNumber\"\r\n                                        [ngModelOptions]=\"{standalone: true}\">\r\n                                </div>\r\n                                <!-- <div class=\"row\">\r\n                                    <div class=\"col-3\">\r\n                                        <ngx-qrcode [elementType]=\"elementType\" [errorCorrectionLevel]=\"correctionLevel\"\r\n                                            [value]=\"equipmentObj.serialNumber\" class=\"coolQRCode\"></ngx-qrcode>\r\n                                    </div>\r\n                                   \r\n                                </div> -->\r\n                            </div>\r\n                            <br>\r\n                            <button (click)=\"upload(value)\">generate QRCode</button>\r\n                            <br>\r\n                            <br><br><br>\r\n                        </fieldset>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\">previous</button>\r\n                    </p-tabPanel>\r\n                </p-tabView>\r\n            </div>\r\n        </form>\r\n    </ng-template>\r\n</p-dialog>","import { HttpClient, HttpEventType, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Category } from 'src/app/Shared/Models/Category';\r\nimport { Department } from 'src/app/Shared/Models/Department';\r\nimport { Employee } from 'src/app/Shared/Models/Employee';\r\nimport { healthDirectory } from 'src/app/Shared/Models/healthDirectory';\r\nimport { Manufacturer } from 'src/app/Shared/Models/Manufacturer';\r\nimport { Origin } from 'src/app/Shared/Models/Origin';\r\nimport { Priority } from 'src/app/Shared/Models/Priority';\r\nimport { Status } from 'src/app/Shared/Models/Status';\r\nimport { SubCategory } from 'src/app/Shared/Models/SubCategory';\r\nimport { Supplier } from 'src/app/Shared/Models/Supplier';\r\nimport { Equipment } from 'src/app/Shared/Models/Equipment';\r\nimport { HealthCareUnit } from 'src/app/Shared/Models/HealthCareUnit';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\n\r\n\r\n\r\n\r\n// import { StatusServiceService } from '../../Shared/services/status-service.service'\r\n\r\nimport { MasterequipmentService } from 'src/app/Shared/services/masterequipment.service';\r\n\r\n\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { HealthDistrict } from 'src/app/Shared/Models/HealthDistrict';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FormBuilder, FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MasterEquipment } from 'src/app/Shared/Models/MasterEquipment';\r\n\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { EquipmentAttachments } from 'src/app/Shared/Models/EquipmentAttachments';\r\nimport { NgxQrcodeElementTypes, NgxQrcodeErrorCorrectionLevels } from '@techiediaries/ngx-qrcode';\r\nimport { Inventory } from 'src/app/Shared/Models/Inventory';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-new-equipment',\r\n  templateUrl: './new-equipment.component.html',\r\n  styleUrls: ['./new-equipment.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styles: [`\r\n  :host ::ng-deep .p-dialog .product-image {\r\n      width: 150px;\r\n      margin: 0 auto 2rem auto;\r\n      display: block;\r\n  }\r\n`]\r\n})\r\nexport class NewEquipmentComponent implements OnInit {\r\n  equipmentDialog: boolean;\r\n  equipments: Equipment[];\r\n  masterEquipment: MasterEquipment[];\r\n  equipmentObj: Equipment;\r\n  submitted: boolean;\r\n  healthCareUnitsList: HealthCareUnit[];\r\n  healthCareUnitsListByDistrictId: HealthCareUnit[];\r\n  statusList: Status[];\r\n  priorityList: Priority[];\r\n  manufacturerList: Manufacturer[];\r\n  originsList: Origin[];\r\n  categoriesList: Category[];\r\n  subCategoriesList: SubCategory[];\r\n  departmentsList: Department[];\r\n  suppliersList: Supplier[];\r\n  employees: any[] = [];\r\n  employee: Employee;\r\n  employeesList: Employee[];\r\n  EquipmentEmployessList: Employee[];\r\n  healthDirectoriesList: healthDirectory[];\r\n  HealthDistrictsList: HealthDistrict[];\r\n  healthDirectory: healthDirectory;\r\n  uploadedFiles: string[] = [];\r\n  opened: boolean;\r\n  items = [];\r\n  index: number = 0;\r\n  isNextvalid: boolean = false;\r\n  isPrevvalid: boolean = true;\r\n  lang: string;\r\n  IDs: number[] = [];\r\n  Names: any[];\r\n  EquipAttachs: EquipmentAttachments[];\r\n  equipmentform: FormGroup;\r\n  public progress: number;\r\n  public message: string;\r\n  public response: { dbPath: '' };\r\n  currentUser: User\r\n  users: User[];\r\n  TecniciensList = [];\r\n  public value;\r\n  eqId: number;\r\n  invent: Inventory\r\n  private baseUrl: 'http://localhost:51368/api/QRCoder/Index/'\r\n  public elementType = NgxQrcodeElementTypes.URL;\r\n  public correctionLevel = NgxQrcodeErrorCorrectionLevels.HIGH;\r\n  @Output() public onUploadFinished = new EventEmitter();\r\n  constructor(private http: HttpClient, private equipmentService: EquipmentService,\r\n    private sharedService: SharedService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private masterEquipmentService: MasterequipmentService,\r\n    private userService: UserService,\r\n\r\n    // private masterEquipmentService:MasterEquipmentService,\r\n\r\n    // private masterEquipmentService:MasterEquipmentService,\r\n\r\n    // private masterEquipmentService:MasterEquipmentService,\r\n    private translate: TranslateService) {\r\n    this.currentUser = this.userService.currentUserValue;\r\n    this.items = Array.from({ length: 100000 }).map((_, i) => `Item #${i}`);\r\n    // this.fillSubCategory();\r\n\r\n    // private fb: FormBuilder,\r\n    //  private messageService: MessageService\r\n    //   this.fillSubCategory();\r\n  }\r\n  httpHeader = {\r\n    headers: new HttpHeaders({\r\n      'content-type': 'application/json',\r\n      'Accept': '*/*'\r\n    })\r\n  };\r\n  dropdownSettings:IDropdownSettings;\r\n  ngOnInit() {\r\n    this.TecniciensList = []\r\n    this.EquipmentEmployessList = [];\r\n    this.employeesList = []\r\n    console.log('Ay7aga', this.equipmentObj);\r\n    this.equipmentObj = {\r\n      id: 0,\r\n      equipmentDescription: '',\r\n      equipmentName: \"\",\r\n      equipmentDescriptionAr: '',\r\n      equipmentNameAr: \"\",\r\n      installationDate: new Date(),\r\n      purchaseDate: new Date(),\r\n      priorityId: 0,\r\n      equipmentCategoryId: 0,\r\n      equipmentSubCategoryId: 0,\r\n      equipmentStatuSId: 0,\r\n      statusName: '',\r\n      statusNameAr: '',\r\n      manufacturerId: 0,\r\n      originId: 0,\r\n      healthCareUnitId: 0,\r\n      healthCareUnit: '',\r\n      healthCareUnitName: '',\r\n      healthCareUnitNameAr: '',\r\n      supplierId: 0,\r\n      supplierName: '',\r\n      supplierNameAr: '',\r\n      employeeIDs: [],\r\n      AttachmentIDs: [],\r\n      expectedLifeTime: 0,\r\n      length: 0,\r\n      height: 0,\r\n      weight: 0,\r\n      departmentId: 0,\r\n      departmentName: '',\r\n      departmentNameAr: '',\r\n      room: 0,\r\n      floor: 0,\r\n      remarks: '',\r\n      price: 0,\r\n      modelNumber: '',\r\n      versionNumber: '',\r\n      serialNumber: '',\r\n      internalCode: '',\r\n      upaCode: '',\r\n      barcode: '',\r\n      color: '',\r\n      colorAr: '',\r\n      manufacturerName: '',\r\n      manufacturerNameAr: '',\r\n      healthDirectoryId: 0,\r\n      healthDirectoryName: '',\r\n      healthDirectoryNameAr: '',\r\n      healthDistrictId: 0,\r\n      healthDistrictName: '',\r\n      healthDistrictNameAr: '',\r\n      masterEquipmentId: 0,\r\n      qrImgPath: '',\r\n      createdAt:new Date(),\r\n\r\n      organizationName:'',\r\n      organizationNameAr:'',\r\n      time:'',\r\n      recallNumber:0,\r\n      recallDate:new Date(),\r\n      organizationId:0,\r\n      contractRequestId:0,\r\n      organizationrequestid:0,\r\n      contractid:0\r\n    }\r\n    // this.invent = {\r\n\r\n    //   equipmentId: 0,\r\n    //   id: 0,\r\n    //   userId: '',\r\n    //   userName:'',\r\n    //   equipmentCode: '',\r\n    //   createdAt: new Date\r\n\r\n    // };\r\n    this.dropdownSettings = {\r\n      singleSelection: false,\r\n      idField: 'id',\r\n      textField: 'userName',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      itemsShowLimit: 3,\r\n      allowSearchFilter: true\r\n    };   \r\n    // console.log(this.equipmentObj.imgPath)\r\n    this.openNew()\r\n    this.show()\r\n\r\n  }\r\n  onItemSelect(item: User) {\r\n    console.log(item);\r\n    this.equipmentObj.employeeIDs.push(item.id);\r\n  }\r\n  onSelectAll(items: any) {\r\n    console.log(items);\r\n  }\r\n  onItemDeSelect(item){\r\n    console.log(item)\r\n    for(var i=0;i<this.equipmentObj.employeeIDs.length;i++){\r\n      if(this.equipmentObj.employeeIDs[i]==item.id){\r\n        this.equipmentObj.employeeIDs.splice(i,1)\r\n  \r\n        console.log(this.equipmentObj.employeeIDs.length)\r\n      }\r\n    }\r\n    console.log(this.equipmentObj.employeeIDs)\r\n  }\r\n  // checkCheckBoxvalue(event) {\r\n  //   //  console.log(\"object\", this.equipmentObj.employeeIDs);\r\n  //   var index = this.equipmentObj.employeeIDs.length;\r\n  //   if (event.value.length === index + 1) {\r\n  //     if (event.itemValue.id === event.value[index].id) {\r\n  //       this.equipmentObj.employeeIDs.push(event.value[index].id);\r\n  //       //     console.log(\"after push\", this.equipmentObj.employeeIDs);\r\n  //     }\r\n  //   }\r\n  //   else {\r\n  //     var ind = this.equipmentObj.employeeIDs.indexOf(event.itemValue.id);\r\n  //     this.equipmentObj.employeeIDs.splice(ind, 1);\r\n  //     //   console.log(\"after remove\", this.equipmentObj.employeeIDs);\r\n  //   }\r\n  // }\r\n  openNew() {\r\n    this.TecniciensList=[]\r\n    this.value = this.equipmentObj.serialNumber\r\n    this.equipmentDialog = true\r\n    this.submitted = false;\r\n    this.sharedService.getAllunits().subscribe(data => { this.healthCareUnitsList = data,\r\n      console.log(\"this.healthCareUnitsList\",this.healthCareUnitsList) });\r\n    // this.equipmentform = this.fb.group({\r\n    //   'equipmentName': new FormControl('', Validators.required)\r\n    // })\r\n\r\n    this.sharedService.getAllstatuses().subscribe(data => { this.statusList = data });\r\n    this.sharedService.getAllpriorities().subscribe(data => { this.priorityList = data });\r\n    this.sharedService.getAllmanufacturer().subscribe(data => { this.manufacturerList = data });\r\n    this.sharedService.getAllOrigins().subscribe(data => { this.originsList = data });\r\n    this.sharedService.getAllCategories().subscribe(data => { this.categoriesList = data });\r\n    this.sharedService.getAllDepartments().subscribe(data => { this.departmentsList = data });\r\n    this.sharedService.getAllSuppliers().subscribe(data => { this.suppliersList = data });\r\n    this.userService.getUsers().subscribe(data => {\r\n      this.users = data,\r\n      console.log(this.users,this.currentUser.roleName)\r\n        this.users.forEach(element => {\r\n          if (this.currentUser.roleName == 'Hospital') {\r\n            console.log(element.healthCareUnitId,this.currentUser.healthCareUnitId)\r\n            if ((element.healthCareUnitId == this.currentUser.healthCareUnitId) && element.roleName == 'Technician') {\r\n              console.log(element.roleName)\r\n              this.TecniciensList.push(element)\r\n              this.users = this.TecniciensList\r\n              console.log(\"iiiiiii\",this.TecniciensList)\r\n            }\r\n           \r\n          }\r\n        })\r\n    });\r\n    this.sharedService.getAllHealthDirectories().subscribe(data => { this.healthDirectoriesList = data });\r\n\r\n    this.masterEquipmentService.getAll().subscribe(data => {\r\n      this.masterEquipment = data;\r\n      //console.log(\"masterEquipment\", this.masterEquipment) \r\n    });\r\n\r\n  }\r\n  hideDialog() {\r\n    //   console.log(\"inside hide\");\r\n    this.equipmentDialog = false;\r\n    this.submitted = false;\r\n    this.router.navigate(['/home/equipmentsList/'])\r\n  }\r\n  show() {\r\n    this.opened = false;\r\n  }\r\n  saveProduct(myform: NgForm) {\r\n    //  console.log(\"inside Save\");\r\n    this.submitted = true;\r\n    this.equipmentDialog = false;\r\n    //this.addEquipment();\r\n\r\n    // window.location.reload();\r\n  }\r\n\r\n  addEquipment() {\r\n    console.log(this.equipmentObj)\r\n    // this.equipmentService.getAllAttachWithNoEquipment().subscribe(data => {\r\n    //   this.EquipAttachs = data;\r\n    //   this.EquipAttachs.forEach(element => {\r\n    //     this.IDs.push(element.id);\r\n    //   });\r\n    //  this.equipmentObj.AttachmentIDs = this.IDs;\r\n\r\n    if(this.currentUser.roleName==\"Hospital\" || this.currentUser.roleName==\"Technician\")\r\n    {\r\n      console.log(\"this.currentUser.healthCareUnitId\",this.currentUser.healthCareUnitId)\r\n      this.equipmentObj.healthCareUnitId=this.currentUser.healthCareUnitId;\r\n    }\r\n      this.equipmentService.addNewEquipments(this.equipmentObj).subscribe(data => {\r\n        this.equipmentObj = data,\r\n          this.eqId = this.equipmentObj.id\r\n      //  this.router.navigate(['/home/equipmentsList/']);\r\n      });\r\n    // });\r\n\r\n  }\r\n\r\n  fillDistrictAndDirectory(id: number) {\r\n\r\n    //this.sharedService.getAllHealthDistricts(id).subscribe(data => { this.HealthDistrictsList = data });\r\n  }\r\n  fillSubCategory(id: number) {\r\n    this.sharedService.getAllSubCategories(id).subscribe(data => {\r\n      this.subCategoriesList = data;\r\n      // console.log(\"subcat\", this.subCategoriesList);\r\n    });\r\n  }\r\n\r\n  fillHealthCareUnit() {\r\n    this.sharedService.getAllunitsByDistrictId(this.equipmentObj.healthDistrictId).subscribe(data => {\r\n       this.healthCareUnitsListByDistrictId = data, console.log(\"units by districtId\", data) });\r\n\r\n  }\r\n  // onDrop(event: any) {\r\n  //   console.log(event);\r\n  //   event.preventDefault();\r\n  //   event.stopPropagation();\r\n  //   // your code goes here after droping files or any\r\n  // }\r\n\r\n  // onDragOver(evt) {\r\n  //   console.log(evt);\r\n\r\n  //   evt.preventDefault();\r\n  //   evt.stopPropagation();\r\n  // }\r\n\r\n  // onDragLeave(evt) {\r\n  //   console.log(evt);\r\n\r\n  //   evt.preventDefault();\r\n  //   evt.stopPropagation();\r\n  // }\r\n\r\n  // upload(event:any) {\r\n  // //  console.log(\"file\",event);\r\n  //   for (let file of event.files) {\r\n  //       this.uploadedFiles.push(file.name);\r\n  //       //  const formData= new FormData();\r\n  //       //  formData.append('file', event.files[0]);\r\n  //       //  console.log(\"formData\",formData);      \r\n  //  }\r\n  //   this.equipmentService.getEquipmentAttachmentIDs(this.uploadedFiles).subscribe(data=>{\r\n  //     this.IDs=data;\r\n  //     console.log(\"IDDDDs\",this.IDs);\r\n  //   });\r\n  // //  let fileToUpload = <File>files[0];\r\n  //   console.log(\"fileToUpload\",this.uploadedFiles);\r\n  //  // console.log(\"elements\",this.uploadedFiles);\r\n\r\n  //   //this.equipmentObj.AttachmentIDs=\r\n  // }\r\n\r\n  // public upload = (files) => {\r\n  //   console.log(\"in upload files\");\r\n  //   if (files.length === 0) {\r\n  //     return;\r\n  //   }\r\n  //   let fileToUpload = <File>files[0];\r\n  //   const formData = new FormData();\r\n  //   formData.append('file', fileToUpload, fileToUpload.name);\r\n  //   this.http.post('http://localhost:51368/api/ImgUpload/', formData, {reportProgress: true, observe: 'events'})\r\n  //     .subscribe(event => {\r\n  //       console.log(\"subscribe\");\r\n  //       if (event.type === HttpEventType.UploadProgress)\r\n  //         this.progress = Math.round(100 * event.loaded / event.total);\r\n  //       else if (event.type === HttpEventType.Response) {\r\n  //         this.message = 'Upload success.';\r\n  //         this.onUploadFinished.emit(event.body);\r\n  //         console.log(\"filesssss\",fileToUpload.name);\r\n  //       }\r\n  //       console.log(\"files\",fileToUpload.name);\r\n  //     });\r\n\r\n  // }\r\n  // upload($event)\r\n  // {\r\n  //   console.log(\"eeeevent\",$event);\r\n  // }\r\n  // public createImgPath = (serverPath: string) => {\r\n  //   return `http://localhost:51368/api/Attachments/upload/${serverPath}`;\r\n  // }\r\n  // public uploadFinished = (event) => {\r\n  //   console.log(\"finished upload\");\r\n  //   this.response = event;\r\n  // }\r\n  Next() {\r\n    this.index++;\r\n    if (this.index === 4) {\r\n      this.isNextvalid = true;\r\n      this.isPrevvalid = false;\r\n    }\r\n   \r\n  }\r\n  Previous() {\r\n    this.index--;\r\n    if (this.index === 0) {\r\n      this.isNextvalid = false;\r\n      this.isPrevvalid = true;\r\n    }\r\n \r\n  }\r\n  handleChange(e) {\r\n    this.index = e.index;\r\n    if (this.index === 4) {\r\n      this.isNextvalid = true;\r\n      this.isPrevvalid = false;\r\n    }\r\n    else if (this.index === 0) {\r\n      this.isNextvalid = false;\r\n      this.isPrevvalid = true;\r\n    }\r\n\r\n  }\r\n  NextAndSave()\r\n  {\r\n    console.log(\"in save\")\r\n    this.index++;\r\n    this.addEquipment();\r\n    if (this.index === 4) {\r\n      this.isNextvalid = true;\r\n      this.isPrevvalid = false;\r\n    }\r\n  }\r\n  onSelectEvent(event) {\r\n    console.log(\"Selected files\", event);\r\n  }\r\n}\r\n\r\n\r\n","import {HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RequestService } from '../Models/RequstService';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RequestServiceService {\r\n\r\n  constructor(private httpClient:HttpClient) { }\r\n  httpHeader={headers: new HttpHeaders({\r\n    'content-type':'application/json',\r\n    'Accept': '*/*'\r\n  })};\r\n\r\n  getAllserviceRequests():Observable<RequestService[]>\r\n  {\r\n    return this.httpClient.get<RequestService[]>(`${environment.GetAllServiceRequests}`,this.httpHeader);\r\n  }\r\n  // getAllserviceRequestsbyempId(email:string):Observable<RequestService[]>\r\n  // {\r\n  //   return this.httpClient.get<RequestService[]>(`${environment.GetAllServiceRequestsByEmpEmail}${email}`,this.httpHeader);\r\n  // }\r\n  makeRequest(newRequest: RequestService):Observable<RequestService>{\r\n    console.log(\"pppp\")\r\n    return this.httpClient.post<RequestService>(`${environment.MakeRequest}`,newRequest,this.httpHeader);\r\n\r\n  }\r\n  updateRequest(id:number,request:RequestService):Observable<any>{\r\n    return this.httpClient.put<any> (`${environment.UpdateRequest}${id}`,request,this.httpHeader) ;\r\n   }\r\n   deleteRequest(id:Number){\r\n    return this.httpClient.delete<any> (`${environment.DeleteRequest}${id}`,this.httpHeader) ;\r\n\r\n   }\r\n  \r\n   getAllRequestsByDirectoryId(dirId:Number):Observable<RequestService[]>{\r\n    return this.httpClient.get<RequestService[]>(`${environment.GetAllRequestsByDirectory}${dirId}`,this.httpHeader);\r\n\r\n   }\r\n}\r\n","<p-dialog [(visible)]=\"requestDialog\" [style]=\"{width: '700px'}\" [modal]=\"true\" styleClass=\"p-fluid\" (onHide)=\"hideDialog()\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <h3 class=\"title\">{{'SeviceRequest.MakeARequest' |translate}}</h3>\r\n            </div>\r\n            <div>\r\n                <img src=\"./../assets/images/service_request.png\" class=\"img\" [alt]=\"product\">\r\n            </div>\r\n        </div>\r\n\r\n        <!-- <img [src]=\"'assets/showcase/images/demo/product/' + product.image\" [alt]=\"product.image\" class=\"product-image\" *ngIf=\"product.image\"> -->\r\n        <form (ngSubmit)=\"AddRequestForm.valid && saveProduct()\" #AddRequestForm=\"ngForm\">\r\n            <fieldset>\r\n                <legend>{{'SeviceRequest.RequestDetails' |translate}}</legend>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6 form-group\">\r\n                        <label for=\"equipmentName\">{{'SeviceRequest.EquipmentName' |translate}}</label>\r\n\r\n                        <select class=\"form-control\" id=\"equipmentName\" name=\"equipmentName\" \r\n                            #equipmentName=\"ngModel\"\r\n                            [(ngModel)]=\"requestObj.equipmentId\" (change)=\"onselectEquipment(requestObj.equipmentId)\"\r\n                            [class.is-invalid]=\"equipmentName.touched && equipmentName.errors\" \r\n                            [class.is-valid]=\"equipmentName.valid\" required\r\n                            pTooltip=\"select an Equipment\" tooltipPosition=\"bottom\"\r\n                            >\r\n                            <option selected >--select--</option>\r\n\r\n                            <option *ngFor=\"let e of equipmentList\" [value]=\"e.id\">\r\n                                {{e.equipmentName}}\r\n                            </option>\r\n                        </select>\r\n                        <div *ngIf=\"(equipmentName.touched || AddRequestForm.submitted) && equipmentName.errors?.required\">\r\n                            <span class=\"text-danger\">        \r\n                                Equipment name is required                               \r\n                            </span>\r\n                       </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <label for=\"serviceRequestCode\">{{'SeviceRequest.serviceRequestCode' |translate}}</label>\r\n                        <input type=\"text\" pInputText id=\"serviceRequestCode\" class=\"form-control\"\r\n                            name=\"code\" #code=\"ngModel\"\r\n                            [(ngModel)]=\"requestObj.ServiceRequestCode\" required\r\n                            [class.is-invalid]=\"code.touched && code.errors || AddRequestForm.submitted\" \r\n                            [class.is-valid]=\"code.valid && AddRequestForm.submitted\"\r\n                            pTooltip=\"enter a RequestCode\" tooltipPosition=\"bottom\"/>\r\n                        <div *ngIf=\"(code.touched || AddRequestForm.submitted) && code.errors?.required\">\r\n                            <span class=\"text-danger\">        \r\n                                code is required                               \r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <label for=\"serviceRequestTitle\">{{'SeviceRequest.serviceRequestTitle'|translate}}</label>\r\n                        <input type=\"text\" pInputText id=\"serviceRequestTitle\" class=\"form-control\"\r\n                            name=\"serviceEnRequestTitle\" #titleEn=\"ngModel\"\r\n                            [(ngModel)]=\"requestObj.ServiceRequestTitle\" required\r\n                            [class.is-invalid]=\"titleEn.touched && titleEn.errors || AddRequestForm.submitted\" \r\n                            [class.is-valid]=\"titleEn.valid && AddRequestForm.submitted\"\r\n                            pTooltip=\"Enter A title\" tooltipPosition=\"bottom\"/>\r\n                        <div *ngIf=\"(titleEn.touched || AddRequestForm.submitted) && titleEn.errors?.required\">\r\n                            <span class=\"text-danger\">        \r\n                                English title is required                               \r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <label for=\"serviceRequestTitle\">{{'SeviceRequest.serviceRequestTitleAr'|translate}}</label>\r\n                        <input type=\"text\" pInputText id=\"serviceRequestTitle\" class=\"form-control\"\r\n                            name=\"serviceArRequestTitle\" [(ngModel)]=\"requestObj.ServiceRequestTitleAr\" required\r\n                            [class.is-invalid]=\"artitle.touched && artitle.errors || AddRequestForm.submitted\" #artitle=\"ngModel\"\r\n                            [class.is-valid]=\"artitle.valid && AddRequestForm.submitted\"\r\n                            pTooltip=\"Enter a title in arabic\" tooltipPosition=\"bottom\"/>\r\n                        <div *ngIf=\"(artitle.touched|| AddRequestForm.submitted) && artitle.errors?.required\">\r\n                            <span class=\"text-danger\">        \r\n                                Arabic title is required                               \r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <label for=\"requestType\">{{'SeviceRequest.requestType'|translate}}</label>\r\n\r\n                        <input type=\"text\" pInputText id=\"requestType\" class=\"form-control\"\r\n                            name=\"requestType\" [(ngModel)]=\"requestObj.requestType\" required\r\n                            [class.is-invalid]=\"type.touched && type.errors || AddRequestForm.submitted\" #type=\"ngModel\"\r\n                            [class.is-valid]=\"type.valid && AddRequestForm.submitted\"\r\n                            pTooltip=\"enter A request type\" tooltipPosition=\"bottom\"/>\r\n                        <div *ngIf=\"(type.touched || AddRequestForm.submitted) && type.errors?.required\">\r\n                            <span class=\"text-danger\">        \r\n                                Type is required                               \r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"problemDescription\">{{'SeviceRequest.problemDescription'|translate}}</label>\r\n                        <input type=\"text\" pInputText id=\"problemDescription\" class=\"form-control\"\r\n                            [ngModelOptions]=\"{standalone: true}\"\r\n                            pTooltip=\"Enter A Description\" tooltipPosition=\"bottom\"\r\n                            [(ngModel)]=\"requestObj.problemDescription\"/>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"problemDescription\">{{'SeviceRequest.problemDescriptionAr'|translate}}</label>\r\n\r\n                        <input type=\"text\" pInputText id=\"problemDescription\" class=\"form-control\"\r\n                            [ngModelOptions]=\"{standalone: true}\" \r\n                            pTooltip=\"enter a Description in Arabic\" tooltipPosition=\"bottom\"\r\n                            [(ngModel)]=\"requestObj.problemDescriptionAr\"/>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <label for=\"serviceRequestDate\">{{'SeviceRequest.serviceRequestDate'|translate}}</label>\r\n                        <input type=\"date\"  pInputText id=\"serviceRequestDate\" class=\"form-control\" disabled\r\n                        name=\"serviceRequestDate\" [(ngModel)]=\"s\"\r\n                        />\r\n                        <!-- <p-calendar class=\"date\" inputId=\"basic\" [(ngModel)]=\"s\" disabled=\"true\"></p-calendar> -->\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <label for=\"serviceRequestTime\">{{'SeviceRequest.serviceRequestTime'|translate}}</label>\r\n                        <input type=\"text\" pInputText id=\"serviceRequestTime\" class=\"form-control\"\r\n                           name=\"serviceRequestTime\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"requestObj.serviceRequestTime\"/>\r\n                    </div>\r\n                 \r\n                    <div class=\"col-md-6\">\r\n                        <label for=\"priority\">{{'SeviceRequest.RequestMode'|translate}}</label>\r\n\r\n                        <div>\r\n                            <ul class=\"list-group\"\r\n                            pTooltip=\"select a mode\" tooltipPosition=\"bottom\"\r\n                            >\r\n                                <li class=\"list-group-item\" *ngFor=\"let item of modesList\">\r\n                                    <input type=\"radio\"\r\n                                     [(ngModel)]=\"requestObj.ModeId\" name=\"mode\"\r\n                                        id=\"mode\" #mode=\"ngModel\" [value]=\"item.id\" />\r\n                                        \r\n                                        {{translate.currentLang == \"En\" ? item.requestMode:item.requestModeAr}}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <label for=\"priority\">{{'SeviceRequest.RequestPriority'|translate}}</label>\r\n\r\n                        <div>\r\n                            <ul class=\"list-group\" pTooltip=\"select an priority\" tooltipPosition=\"bottom\"\r\n                            >\r\n                                <li class=\"list-group-item\" *ngFor=\"let item of priorityList\">\r\n                                    <input type=\"radio\" \r\n                                    pTooltip=\"select an priority\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"requestObj.PriorityId\" name=\"priority\"\r\n                                        id=\"priority\" #priority=\"ngModel\" [value]=\"item.id\" />\r\n                                    {{translate.currentLang == \"En\" ? item.priorityLevel:item.priorityLevelAr}}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </fieldset>\r\n            <br />\r\n\r\n            <fieldset>\r\n                <legend>{{'Actions.Attachments' |translate}}</legend>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <p-fileUpload   (onUpload)=\"upload($event)\"  name=\"demo[]\" url=\"http://localhost:51368/api/ImgUpload/\"\r\n                        multiple=\"multiple\"accept=\".xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf\" maxFileSize=\"1000000\">\r\n                        </p-fileUpload>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <br />\r\n\r\n            <div class=\"col-12\">\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\" required>\r\n                    <label class=\"form-check-label\" for=\"invalidCheck\">\r\n                        {{'SeviceRequest.Agreetotermsandconditions'|translate}}\r\n                    </label>\r\n                    <div class=\"invalid-feedback\">\r\n                        {{'SeviceRequest.Youmustagreebeforesubmitting'|translate}}.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br><br>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-3\">\r\n                    <button pButton pRipple label=\"{{'Actions.Cancel' |translate}}\" icon=\"pi pi-times\" class=\"btn btn-info\" \r\n                    (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>                          \r\n              </div>\r\n              <div class=\"col-lg-3\">\r\n                <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\" class=\"btn btn-info\"\r\n                value=\"save\" type=\"submit\"></button>\r\n              </div>\r\n            </div>\r\n        </form>\r\n\r\n    </ng-template>\r\n</p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Equipment } from 'src/app/Shared/Models/Equipment';\r\nimport { Mode } from 'src/app/Shared/Models/Mode';\r\nimport { Priority } from 'src/app/Shared/Models/Priority';\r\nimport { RequestService } from 'src/app/Shared/Models/RequstService';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\nimport { RequestServiceService } from 'src/app/Shared/services/request-service.service';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\nimport { EmployeeService } from 'src/app/Shared/services/employee.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Employee } from 'src/app/Shared/Models/Employee';\r\nimport { DatePipe } from '@angular/common';\r\n@Component({\r\n  selector: 'app-service-request-add',\r\n  templateUrl: './service-request-add.component.html',\r\n  styleUrls: ['./service-request-add.component.css'],\r\n  providers: [DatePipe]\r\n})\r\n\r\nexport class ServiceRequestAddComponent implements OnInit {\r\n  currentUser: User;\r\n  constructor(private router: Router, private requestService: RequestServiceService,\r\n    private sharedService: SharedService,\r\n    private equipmentService: EquipmentService,\r\n    private userService: UserService,\r\n    private employeeService: EmployeeService,\r\n    private translate: TranslateService,\r\n    private datePipe: DatePipe\r\n  ) { this.currentUser = this.userService.currentUserValue; }\r\n  requestDialog: boolean;\r\n  requests: RequestService[];\r\n  requestObj: RequestService;\r\n  equipmentObj: Equipment;\r\n  submitted: boolean;\r\n  priorityList: Priority[];\r\n  modesList: Mode[];\r\n  equipmentList: Equipment[];\r\n  equipId: number;\r\n  employee: Employee;\r\n  selectedEquip: Equipment;\r\n  // myDate: Date;\r\n  s: string = ''\r\n  myDate = new Date();\r\n  districtsEquipments: Equipment[]\r\n  // equipList:Equipment[];\r\n  ngOnInit() {\r\n    this.requestObj = {\r\n      id: 0,\r\n      serviceRequestCode: '',\r\n      serviceRequestTitle: '',\r\n      serviceRequestTitleAr: '',\r\n      problemDescriptionAr: '',\r\n      problemDescription: '',\r\n      serviceRequestDate: new Date,\r\n      serviceRequestTime: '',\r\n      employeeEmail: '',\r\n      requestType: '',\r\n      EquipmentId: 0,\r\n      employeeId: '',\r\n      healthDirectoryId: 0,\r\n      healthDistrictId: 0,\r\n      modeId: 0,\r\n      priorityId: 0\r\n    };\r\n\r\n    this.equipmentObj = {\r\n      id: 0,\r\n      equipmentDescription: '',\r\n      equipmentName: \"\",\r\n      equipmentDescriptionAr: '',\r\n      equipmentNameAr: \"\",\r\n      installationDate: new Date(),\r\n      purchaseDate: new Date(),\r\n      priorityId: 0,\r\n      equipmentCategoryId: 0,\r\n      equipmentSubCategoryId: 0,\r\n      equipmentStatuSId: 0,\r\n      statusName:'',\r\n      statusNameAr:'',\r\n      manufacturerId: 0,\r\n      originId: 0,\r\n      healthCareUnitId: 0,\r\n      healthCareUnit: '',\r\n      healthCareUnitName:'',\r\n      healthCareUnitNameAr:'',\r\n      supplierId: 0,\r\n      supplierName:'',\r\n      supplierNameAr:'',\r\n      expectedLifeTime: 0,\r\n      length: 0,\r\n      height: 0,\r\n      weight: 0,\r\n      departmentId: 0,\r\n      departmentName:'',\r\n      departmentNameAr:'',\r\n      room: 0,\r\n      floor: 0,\r\n      remarks: '',\r\n      price: 0,\r\n      modelNumber: '',\r\n      versionNumber: '',\r\n      serialNumber: '',\r\n      internalCode: '',\r\n      upaCode:'',\r\n      barcode: '',\r\n      color: '',\r\n      colorAr: '',\r\n      manufacturerName: '',\r\n      manufacturerNameAr:'',\r\n      healthDirectoryId: 0,\r\n      healthDirectoryName: '',\r\n      healthDirectoryNameAr:'',\r\n      healthDistrictId: 0,\r\n      healthDistrictName: '',\r\n      healthDistrictNameAr:'',\r\n      employeeIDs: [],\r\n      AttachmentIDs:[],\r\n      masterEquipmentId: 0,\r\n      qrImgPath:'',\r\n      createdAt:new Date(),\r\n      organizationName:'',\r\n      organizationNameAr:'',\r\n      time:'',\r\n      recallNumber:0,\r\n      recallDate:new Date(),\r\n      organizationId:0,\r\n      contractRequestId:0,\r\n      organizationrequestid:0,\r\n      contractid:0\r\n    }\r\n    this.districtsEquipments = []\r\n    this.s = this.datePipe.transform(this.myDate, 'yyyy-MM-dd')\r\n    console.log(this.s, \"jjjj\")\r\n\r\n    var hours = this.requestObj.serviceRequestDate.getHours();\r\n    var minutes = this.requestObj.serviceRequestDate.getMinutes();\r\n    var secondes = this.requestObj.serviceRequestDate.getSeconds();\r\n    console.log(\"cuurentuser\", this.currentUser);\r\n    this.requestObj.serviceRequestTime = hours + ':' + minutes + ':' + secondes;\r\n\r\n\r\n    this.openNew()\r\n    this.sharedService.getAllpriorities().subscribe(data => { this.priorityList = data, console.log(\"priority list\", this.priorityList) });\r\n    this.sharedService.getAllModes().subscribe(data => { this.modesList = data });\r\n\r\n\r\n    console.log(\"currentUserEmail\", this.currentUser.email);\r\n  }\r\n  openNew() {\r\n\r\n    this.requestDialog = true;\r\n\r\n    if (this.currentUser.roleName == 'Technician') {\r\n      // this.employeeService.getUserByEmail(this.currentUser.email).subscribe(data => {\r\n      //   this.employee = data,\r\n      //     console.log(\"UsersEmps\", this.employee);\r\n      //   this.requestObj.employeeId = this.employee.id;\r\n      //   console.log(\"IID\", this.employee.id);\r\n      // });\r\n      // this.getEquipmentByempId(this.currentUser.email);\r\n      // this.equipmentService.getEquipmentsByemp(this.currentUser.email).subscribe(data => this.equipmentList = data);\r\n\r\n    }\r\n    else if (this.currentUser.roleName == 'Admin' || this.currentUser.roleName == 'District') {\r\n      console.log(\"admin\")\r\n      // this.getEquipmentById(this.requestObj.EquipmentId)\r\n      this.equipmentService.getAllEquipments().subscribe(data => {\r\n        this.equipmentList = data,\r\n          this.equipmentList.forEach(element => {\r\n            if (element.healthDistrictId == this.currentUser.healthDistrictId) {\r\n\r\n              this.districtsEquipments.push(element)\r\n            }\r\n            if (this.currentUser.roleName == 'Admin') {\r\n              this.equipmentList = this.equipmentList\r\n\r\n            }\r\n            if (this.currentUser.roleName == 'District') {\r\n              this.equipmentList = this.districtsEquipments\r\n            }\r\n          })\r\n\r\n      })\r\n    }\r\n    console.log(\"currentUserEmail\", this.currentUser.email);\r\n\r\n\r\n    // this.employeeService.getUserByEmail(this.currentUser.email).subscribe(data => {\r\n    //   this.employee = data;\r\n    //   console.log(\"IID\", this.employee.id);\r\n    //   this.requestObj.employeeId = this.employee.id;\r\n    // });\r\n    this.requestDialog = true;\r\n\r\n  }\r\n\r\n  hideDialog() {\r\n    this.requestDialog = false;\r\n  \r\n\r\n  }\r\n  saveProduct() {\r\n    this.submitted = true;\r\n    console.log(\"save\")\r\n    this.makeRequest();\r\n   \r\n  }\r\n\r\n  makeRequest() {\r\n    console.log(\"requestObj\", this.requestObj);\r\n\r\n\r\n\r\n    this.requestService.makeRequest(this.requestObj).subscribe(data => {this.hideDialog(), console.log(\"Saved\", data) });\r\n\r\n  }\r\n  // getEquipmentByempId(empId) {\r\n  //   this.equipmentService.getEquipmentsByemp(empId).subscribe(data => { this.equipmentList = data; console.log(\"equips\", this.equipmentList); })\r\n  // }\r\n\r\n\r\n  onselectEquipment(equipmentId) {\r\n    if (this.currentUser.roleName == 'Technician') {\r\n      this.equipmentService.getEquipmentById(equipmentId).subscribe(data => {\r\n        this.selectedEquip = data,\r\n          this.requestObj.EquipmentId = this.selectedEquip.id,\r\n          this.requestObj.healthDirectoryId = this.selectedEquip.healthDirectoryId;\r\n        this.requestObj.healthDistrictId = this.selectedEquip.healthDistrictId;\r\n        console.log(data, this.requestObj.healthDistrictId, this.requestObj.EquipmentId, ';;;;')\r\n      });\r\n    }\r\n    else if (this.currentUser.roleName == 'Admin') {\r\n      this.equipmentService.getEquipmentById(equipmentId).subscribe(data => {\r\n        this.selectedEquip = data,\r\n          this.requestObj.healthDirectoryId = this.selectedEquip.healthDirectoryId;\r\n        this.requestObj.healthDistrictId = this.selectedEquip.healthDistrictId;\r\n        this.requestObj.employeeId = this.selectedEquip.employeeIDs[0];\r\n\r\n        console.log(data, this.requestObj.employeeId, \"uuuuuuuuuuuuu\")\r\n      });\r\n    }\r\n  }\r\n\r\n  getEquipmentById(equipId) {\r\n    this.equipmentService.getEquipmentById(equipId).subscribe(data => { this.equipmentObj = data, console.log(this.equipmentObj) })\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","<div class=\"card\">\r\n    <p-messages [value]=\"msgs\"></p-messages>\r\n    <p-toolbar styleClass=\"p-mb-4\">\r\n        <ng-template pTemplate=\"left\">\r\n\r\n            <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary  p-button-rounded p-mr-2 new\"\r\n                routerLink=\"/home/makeRequest\" pTooltip=\"Add a New Request\" tooltipPosition=\"right\"></button>\r\n\r\n        </ng-template>\r\n    </p-toolbar>\r\n    <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n    <div>\r\n        <p-table #dt [value]=\"AllRequests\" [rows]=\"10\" [paginator]=\"true\" styleClass=\"p-datatable-responsive-demo\"\r\n            [globalFilterFields]=\"['serviceRequestTitle','serviceRequestCode','serviceRequestDate']\"\r\n            [(selection)]=\"selectedProducts\" [rowHover]=\"true\" dataKey=\"id\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            [showCurrentPageReport]=\"true\">\r\n            <ng-template pTemplate=\"caption\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    <h5 class=\"p-m-0\">{{'SeviceRequest.ManageSeviceRequest' |translate}}</h5>\r\n\r\n                    <span class=\"p-input-icon-right\">\r\n                        <i class=\"pi pi-search\"></i>\r\n                        <input pInputText type=\"text\" class=\"form-control\"\r\n                            (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                            placeholder=\"{{'search.Search'|translate}}...\" />\r\n                    </span>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th pSortableColumn=\"serviceRequestTitle\">{{'SeviceRequest.title'|translate}} <p-sortIcon\r\n                            field=\"serviceRequestTitle\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"serviceRequestTime\">{{'SeviceRequest.serviceRequestTime'|translate}}\r\n                        <p-sortIcon field=\"serviceRequestTime\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"serviceRequestDate\">{{'SeviceRequest.serviceRequestDate'|translate}}\r\n                        <p-sortIcon field=\"serviceRequestDate\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th>{{'Actions.Action' |translate}}</th>\r\n                </tr>\r\n                <tr>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dt.filter($event.target.value, 'serviceRequestTitle', 'contains')\"\r\n                            [value]=\"dt.filters['serviceRequestTitle']?.value\"\r\n                            placeholder=\"{{'SeviceRequest.SearchbyRequestTitle'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dt.filter($event.target.value, 'serviceRequestTime', 'contains')\"\r\n                            [value]=\"dt.filters['serviceRequestTime']?.value\"\r\n                            placeholder=\"{{'SeviceRequest.SearchbyserviceRequestTime'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dt.filter($event.target.value, 'serviceRequestDate', 'contains')\"\r\n                            [value]=\"dt.filters['serviceRequestDate']?.value\"\r\n                            placeholder=\"{{'SeviceRequest.searchbyRequestDate'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-req>\r\n                <tr>\r\n                    <td>{{req.serviceRequestTitle}}</td>\r\n                    <!-- <td>{{req.serviceRequestTime}}</td> -->\r\n                    <td>{{req.serviceRequestTime.hours}}:{{req.serviceRequestTime.minutes}}</td>\r\n                    <td>{{req.serviceRequestDate | date:'dd-MM-yyyy'}}</td>\r\n\r\n                    <td>\r\n                        <button pButton pRipple label=\"assign\" class=\"p-button-rounded p-button-info edit\"\r\n                            (click)=\"editOrg(req.id)\"></button>\r\n                        <button pTooltip=\"edit A Request\" tooltipPosition=\"top\" pButton pRipple icon=\"pi pi-pencil\"\r\n                            class=\"p-button-rounded p-button-info edit\" (click)=\"openNew(req)\"></button>\r\n                        <button *ngIf=\"currentUser.roleName == 'Admin'\" pButton pRipple icon=\"pi pi-trash\"\r\n                            class=\"p-button-rounded p-button-danger\"\r\n                            (click)=\"confirmDelete(req.id,req.serviceRequestTitle)\"></button>\r\n                        <!-- <button pButton pRipple label=\"close\" class=\"p-button-rounded p-button-info edit\"\r\n                            (click)=\"openNew(req)\"></button> -->\r\n                    </td>\r\n                </tr>\r\n\r\n            </ng-template>\r\n            <ng-template pTemplate=\"summary\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    In total there are {{requests ? requests.length : 0 }} requests.\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n<p-dialog [(visible)]=\"serviceDialog\" [style]=\"{width: '700px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <h3 class=\"title\">{{'SeviceRequest.EditRequest'|translate}}</h3>\r\n            </div>\r\n            <div>\r\n                <img src=\"./../assets/images/service-request-icon.png\" class=\"img\" [alt]=\"product\">\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <form (ngSubmit)=\"EditRequestForm.valid && updateRequest()\" #EditRequestForm=\"ngForm\">\r\n            <fieldset>\r\n                <legend>{{'SeviceRequest.RequestDetails' |translate}}</legend>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6 form-group\">\r\n                        <label for=\"equipmentName\">{{'SeviceRequest.EquipmentName' |translate}}</label>\r\n\r\n                        <select class=\"form-control\" id=\"equipmentName\" name=\"equipmentName\" #equipmentName=\"ngModel\"\r\n                            [(ngModel)]=\"requestObj.equipmentId\" (change)=\"onselectEquipment(requestObj.equipmentId)\"\r\n                            [class.is-invalid]=\"equipmentName.touched && equipmentName.errors\"\r\n                            [class.is-valid]=\"equipmentName.valid\" required pTooltip=\"select an Equipment\"\r\n                            tooltipPosition=\"bottom\">\r\n                            <option selected>--select--</option>\r\n\r\n                            <option *ngFor=\"let e of equipments\" [value]=\"e.id\">\r\n                                {{e.equipmentName}}\r\n                            </option>\r\n                        </select>\r\n                        <div\r\n                            *ngIf=\"(equipmentName.touched || EditRequestForm.submitted) && equipmentName.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                Equipment name is required\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <label for=\"serviceRequestCode\">{{'SeviceRequest.serviceRequestCode' |translate}}</label>\r\n                        <input type=\"text\" pInputText id=\"serviceRequestCode\" class=\"form-control\" name=\"code\"\r\n                            #code=\"ngModel\" [(ngModel)]=\"requestObj.serviceRequestCode\" required\r\n                            [class.is-invalid]=\"code.touched && code.errors || EditRequestForm.submitted\"\r\n                            [class.is-valid]=\"code.valid && EditRequestForm.submitted\" pTooltip=\"enter a RequestCode\"\r\n                            tooltipPosition=\"bottom\" />\r\n                        <div *ngIf=\"(code.touched || EditRequestForm.submitted) && code.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                code is required\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <label for=\"serviceRequestTitle\">{{'SeviceRequest.serviceRequestTitle'|translate}}</label>\r\n                        <input type=\"text\" pInputText id=\"serviceRequestTitle\" class=\"form-control\"\r\n                            name=\"serviceEnRequestTitle\" #titleEn=\"ngModel\" [(ngModel)]=\"requestObj.serviceRequestTitle\"\r\n                            required [class.is-invalid]=\"titleEn.touched && titleEn.errors || EditRequestForm.submitted\"\r\n                            [class.is-valid]=\"titleEn.valid && EditRequestForm.submitted\" pTooltip=\"Enter A title\"\r\n                            tooltipPosition=\"bottom\" />\r\n                        <div *ngIf=\"(titleEn.touched || EditRequestForm.submitted) && titleEn.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                English title is required\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6\">\r\n\r\n                        <label for=\"requestType\">{{'SeviceRequest.requestType'|translate}}</label>\r\n\r\n                        <input type=\"text\" pInputText id=\"requestType\" class=\"form-control\" name=\"requestType\"\r\n                            [(ngModel)]=\"requestObj.requestType\" required\r\n                            [class.is-invalid]=\"type.touched && type.errors || EditRequestForm.submitted\"\r\n                            #type=\"ngModel\" [class.is-valid]=\"type.valid && EditRequestForm.submitted\"\r\n                            pTooltip=\"enter A request type\" tooltipPosition=\"bottom\" />\r\n                        <div *ngIf=\"(type.touched || EditRequestForm.submitted) && type.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                Type is required\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"problemDescription\">{{'SeviceRequest.problemDescription'|translate}}</label>\r\n                        <input type=\"text\" pInputText id=\"problemDescription\" class=\"form-control\"\r\n                            [ngModelOptions]=\"{standalone: true}\" pTooltip=\"Enter A Description\"\r\n                            tooltipPosition=\"bottom\" [(ngModel)]=\"requestObj.problemDescription\" />\r\n\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"problemDescription\">{{'SeviceRequest.problemDescriptionAr'|translate}}</label>\r\n\r\n                        <input type=\"text\" pInputText id=\"problemDescription\" class=\"form-control\"\r\n                            [ngModelOptions]=\"{standalone: true}\" pTooltip=\"enter a Description in Arabic\"\r\n                            tooltipPosition=\"bottom\" [(ngModel)]=\"requestObj.problemDescriptionAr\" />\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <label for=\"serviceRequestDate\">{{'SeviceRequest.serviceRequestDate'|translate}}</label>\r\n\r\n                        <input type=\"date\" pInputText id=\"serviceRequestDate\" class=\"form-control\"\r\n                            name=\"serviceRequestDate\" [(ngModel)]=\"s\" />\r\n                        <!-- <p-calendar class=\"date\" inputId=\"basic\" [(ngModel)]=\"s\" disabled=\"true\"></p-calendar> -->\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6\">\r\n                        <label for=\"serviceRequestTime\">{{'SeviceRequest.serviceRequestTime'|translate}}</label>\r\n                        <input type=\"time\" pInputText id=\"serviceRequestTime\" class=\"form-control\"\r\n                            name=\"serviceRequestTime\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"time\"\r\n                            required />\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n\r\n                        <label for=\"priority\">{{'SeviceRequest.RequestMode'|translate}}</label>\r\n\r\n                        <div>\r\n                            <ul class=\"list-group\" pTooltip=\"select a mode\" tooltipPosition=\"bottom\">\r\n                                <li class=\"list-group-item\" *ngFor=\"let item of modesList\">\r\n                                    <input type=\"radio\" [(ngModel)]=\"requestObj.modeId\" name=\"mode\" id=\"mode\"\r\n                                        #mode=\"ngModel\" [value]=\"item.id\" />\r\n\r\n                                    {{translate.currentLang == \"En\" ? item.requestMode:item.requestModeAr}}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <label for=\"priority\">{{'SeviceRequest.RequestPriority'|translate}}</label>\r\n\r\n                        <div>\r\n                            <ul class=\"list-group\" pTooltip=\"select an priority\" tooltipPosition=\"bottom\">\r\n                                <li class=\"list-group-item\" *ngFor=\"let item of priorityList\">\r\n                                    <input type=\"radio\" pTooltip=\"select an priority\" tooltipPosition=\"bottom\"\r\n                                        [(ngModel)]=\"requestObj.priorityId\" name=\"priority\" id=\"priority\"\r\n                                        #priority=\"ngModel\" [value]=\"item.id\" />\r\n                                    {{translate.currentLang == \"En\" ? item.priorityLevel:item.priorityLevelAr}}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </fieldset>\r\n            <br />\r\n\r\n            <fieldset>\r\n                <legend>{{'Actions.Attachments' |translate}}</legend>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <p-fileUpload (onUpload)=\"upload($event)\" name=\"demo[]\"\r\n                            url=\"http://localhost:51368/api/ImgUpload/\" multiple=\"multiple\"\r\n                            accept=\".xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf\" maxFileSize=\"1000000\">\r\n                        </p-fileUpload>\r\n\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <br />\r\n\r\n            <div class=\"col-12\">\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\" required>\r\n                    <label class=\"form-check-label\" for=\"invalidCheck\">\r\n                        {{'SeviceRequest.Agreetotermsandconditions'|translate}}\r\n                    </label>\r\n                    <div class=\"invalid-feedback\">\r\n                        {{'SeviceRequest.Youmustagreebeforesubmitting'|translate}}.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br><br>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-3\">\r\n                    <button pButton pRipple label=\"{{'Actions.Cancel' |translate}}\" icon=\"pi pi-times\"\r\n                        class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                    <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\" class=\"btn btn-info\"\r\n                        value=\"save\" type=\"submit\"></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    </ng-template>\r\n\r\n\r\n</p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Equipment } from 'src/app/Shared/Models/Equipment';\r\nimport { RequestService } from 'src/app/Shared/Models/RequstService';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\nimport { RequestServiceService } from 'src/app/Shared/services/request-service.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { Priority } from 'src/app/Shared/Models/Priority';\r\nimport { Mode } from 'src/app/Shared/Models/Mode';\r\n\r\nimport { ConfirmationService, Message } from 'primeng/api';\r\n\r\n//import { SharedService } from 'src/app/Shared/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-service-request-list',\r\n  templateUrl: './service-request-list.component.html',\r\n  styleUrls: ['./service-request-list.component.scss'],\r\n  providers: [DatePipe]\r\n})\r\nexport class ServiceRequestListComponent implements OnInit {\r\n  serviceDialog: boolean;\r\n\r\n  requests: RequestService[];\r\n  equipments: Equipment[];\r\n  requestObj: RequestService;\r\n  selectedProducts: RequestService[];\r\n  currentUser: User;\r\n  AllRequests: RequestService[];\r\n  FilteredRequestsBycurrentUser: RequestService[];\r\n  requestsByDirectoryId: RequestService[];\r\n  requestsByDistrictId: RequestService[];\r\n\r\n  s: string = '';\r\n\r\n  msgs: Message[] = [];\r\n\r\n  time: string = '';\r\n\r\n  submitted: boolean;\r\n  selectedEquip: Equipment;\r\n  priorityList: Priority[];\r\n  modesList: Mode[]\r\n  constructor(private router: Router,\r\n    private requestService: RequestServiceService,\r\n    private equipmentService: EquipmentService,\r\n\r\n    private translate: TranslateService,\r\n    private userService: UserService, private datePipe: DatePipe,\r\n    private sharedService: SharedService,\r\n    private confirmationService: ConfirmationService) { this.currentUser = this.userService.currentUserValue; }\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\nconsole.log(this.currentUser)\r\n    this.getAll();\r\n    this.equipmentService.getAllEquipments().subscribe(data => this.equipments = data, console.log)\r\n    this.requestObj = {\r\n      id: 0,\r\n      serviceRequestCode: '',\r\n      serviceRequestTitle: '',\r\n      problemDescription: '',\r\n      serviceRequestTitleAr: '',\r\n      problemDescriptionAr: '',\r\n      serviceRequestDate: new Date(),\r\n      serviceRequestTime: '',\r\n      employeeId: '',\r\n      employeeEmail: '',\r\n      requestType: '',\r\n      EquipmentId: 0,\r\n      healthDirectoryId: 0,\r\n      healthDistrictId: 0,\r\n      modeId: 0,\r\n      priorityId: 0\r\n    }\r\nthis.FilteredRequestsBycurrentUser=[]\r\n    this.requestsByDistrictId = []\r\n    this.AllRequests=[]\r\n    this.requestsByDirectoryId=[]\r\n    //console.log(\"requestObject to Edit\",this.requestObj);\r\n  }\r\n\r\n  // getAll() {\r\n  //   this.requestService.getAllserviceRequests().subscribe(data => {\r\n  //     this.requests = data,console.log(\"requestsList\",data)});\r\n  // }\r\n\r\n\r\n\r\n  getAll() {\r\n    console.log(\"currentUser\", this.currentUser.roleName,this.currentUser.email)\r\n    if (this.currentUser.roleName == 'Admin' || this.currentUser.roleName == 'Technician') {\r\n      console.log(\"first\",this.currentUser.email)\r\n      this.requestService.getAllserviceRequests().subscribe(data => {\r\n        this.AllRequests = data,\r\n        console.log(this.AllRequests)\r\n          this.AllRequests.forEach(element => {\r\n          \r\n            if (element.employeeEmail == this.currentUser.email ) {\r\n              this.FilteredRequestsBycurrentUser.push(element)\r\n              console.log(\"here\", element.employeeEmail,this.FilteredRequestsBycurrentUser)\r\n            }\r\n            if (this.currentUser.roleName == 'Admin') {\r\n              this.AllRequests = this.AllRequests\r\n              console.log(\"donot display\")\r\n            }\r\n            else if (this.currentUser.roleName == 'Technician') {\r\n              console.log(\"tech\", this.FilteredRequestsBycurrentUser)\r\n\r\n              this.AllRequests = this.FilteredRequestsBycurrentUser\r\n            }\r\n          \r\n          });\r\n        console.log(data)\r\n      });\r\n\r\n\r\n    }\r\n    if (this.currentUser.roleName == 'Directorate') {\r\n      console.log(\"In Directorate\", this.currentUser)\r\n      this.requestService.getAllserviceRequests().subscribe(data => {\r\n        this.AllRequests = data,\r\n          this.AllRequests.forEach(element => {\r\n            if (element.healthDirectoryId == this.currentUser.healthdirId) {\r\n              this.requestsByDirectoryId.push(element)\r\n              console.log(\"AllRequestsOfdirectorateBefore\", this.requestsByDirectoryId)\r\n            }\r\n            if (this.currentUser.roleName == 'Directorate') {\r\n              this.AllRequests = this.requestsByDirectoryId\r\n            }\r\n\r\n          });\r\n        console.log(\"ay7aga\", this.AllRequests, \"email\", this.currentUser)\r\n      });\r\n    }\r\n\r\n    if (this.currentUser.roleName == 'District') {\r\n      console.log(\"in district\", this.currentUser)\r\n      this.requestService.getAllserviceRequests().subscribe(data => {\r\n        this.AllRequests = data,\r\n          this.AllRequests.forEach(element => {\r\n            if (element.healthDistrictId == this.currentUser.healthDistrictId) {\r\n              console.log(this.requestsByDistrictId)\r\n              this.requestsByDistrictId.push(element)\r\n              console.log(\"AllRequestsOf district Before\", element.healthDistrictId, this.currentUser.healthDistrictId)\r\n            }\r\n            if (this.currentUser.roleName == 'District') {\r\n              this.AllRequests = this.requestsByDistrictId\r\n            }\r\n\r\n          });\r\n        console.log(data, this.currentUser)\r\n      });\r\n\r\n    }\r\n  }\r\n  getTime() {\r\n\r\n    // this.requestObj.serviceRequestDate=new Date(this.s);\r\n    var hours = this.requestObj.serviceRequestDate.getHours();\r\n    var minutes = this.requestObj.serviceRequestDate.getMinutes();\r\n    // var secondes = this.requestObj.serviceRequestDate.getSeconds();\r\n    this.requestObj.serviceRequestTime = hours + ':' + minutes;\r\n    // console.log(\"Daate\",this.s);\r\n    // console.log(\"tiiiime\",this.requestObj.serviceRequestTime);\r\n  }\r\n  openNew(req) {\r\n\r\n    console.log(\"openNew\");\r\n    this.s = this.datePipe.transform(req.serviceRequestDate, 'yyyy-MM-dd');\r\n    this.sharedService.getAllpriorities().subscribe(data => {\r\n      this.priorityList = data,\r\n        console.log(\"priority list\", this.priorityList)\r\n    });\r\n    this.sharedService.getAllModes().subscribe(data => { this.modesList = data });\r\n    this.equipmentService.getAllEquipments().subscribe(data => this.equipments = data, console.log)\r\n    this.serviceDialog = true;\r\n    this.submitted = false;\r\n    this.requestObj = req;\r\n    // console.log(\"openNew\");\r\n    this.s = this.datePipe.transform(req.serviceRequestDate, 'yyyy-MM-dd');\r\n    //this.time=this.datePipe.transform(req.serviceRequestDate,\"h:mm a\");\r\n    //this.getTime();\r\n    this.serviceDialog = true;\r\n    this.submitted = false;\r\n    if (req.serviceRequestTime.hours < 10 && req.serviceRequestTime.minutes < 10) {\r\n      this.time = req.serviceRequestTime.days + '' + req.serviceRequestTime.hours + ':' + req.serviceRequestTime.days + '' + req.serviceRequestTime.minutes;\r\n    }\r\n    else if (req.serviceRequestTime.hours < 10) {\r\n      this.time = req.serviceRequestTime.days + '' + req.serviceRequestTime.hours + ':' + req.serviceRequestTime.minutes;\r\n    }\r\n    else if (req.serviceRequestTime.minutes < 10) {\r\n      this.time = req.serviceRequestTime.hours + ':' + req.serviceRequestTime.days + '' + req.serviceRequestTime.minutes;\r\n    }\r\n    else {\r\n      this.time = req.serviceRequestTime.hours + ':' + req.serviceRequestTime.minutes;\r\n    }\r\n    this.requestObj = req;\r\n    // console.log(\"NewDate\",req.serviceRequestDate);\r\n    console.log(\"NewTimwe\", this.time);\r\n    console.log(\"time\", req.serviceRequestTime);\r\n  }\r\n\r\n  hideDialog() {\r\n    this.serviceDialog = false;\r\n    this.submitted = false;\r\n    \r\n  }\r\n\r\n  updateRequest() {\r\n    console.log(\"insideUpdate\")\r\n    this.submitted = true;\r\n\r\n    console.log(\"rrequest\", this.requestObj);\r\n\r\n    this.requestObj.serviceRequestDate = new Date(this.s);\r\n    this.requestObj.serviceRequestTime = this.time;\r\n    this.requestService.updateRequest(this.requestObj.id, this.requestObj).subscribe(data => {\r\n       console.log(\"requests\", data) ,this.hideDialog()});\r\n    // this.requestService.updateRequest(this.requestObj.id, this.requestObj).subscribe(data => { console.log(\"requests\", data) });\r\n\r\n    this.serviceDialog = false;\r\n    // window.location.reload();\r\n  }\r\n\r\n\r\n  deleteRequest(requestId) {\r\n    // var result = confirm(\"Want to delete this request\" + \"?\");\r\n    // if (result) {\r\n    // console.log(\"request\");\r\n    this.requestService.deleteRequest(requestId).subscribe(\r\n\r\n      data => { console.log(data), this.getAll() }\r\n      // this.router.navigate(['/home/getRequests/'])\r\n    );\r\n  }\r\n\r\n\r\n  // }\r\n  // this.router.navigate(['/home/getRequests/']) \r\n\r\n\r\n  confirmDelete(reqId, reqName) {\r\n    this.confirmationService.confirm({\r\n      message: 'Do you want to delete this' + reqName + ' request?',\r\n      header: 'Delete Confirmation',\r\n      icon: 'pi pi-info-circle',\r\n      accept: () => {\r\n        this.deleteRequest(reqId)\r\n        this.msgs = [{ severity: 'info', summary: 'Confirmed', detail: 'Record deleted' }];\r\n      \r\n      },\r\n      reject: () => {\r\n        this.msgs = [{ severity: 'info', summary: 'Rejected', detail: 'Delete rejected' }];\r\n      }\r\n    });\r\n  }\r\n  editOrg(id: number) {\r\n    this.router.navigate(['home/AddWorkOrder', id]);\r\n  }\r\n\r\n  onselectEquipment(equipmentId) {\r\n    if (this.currentUser.roleName == 'Technician') {\r\n      this.equipmentService.getEquipmentById(equipmentId).subscribe(data => {\r\n        this.selectedEquip = data,\r\n          this.requestObj.EquipmentId = this.selectedEquip.id,\r\n          this.requestObj.healthDirectoryId = this.selectedEquip.healthDirectoryId;\r\n        this.requestObj.healthDistrictId = this.selectedEquip.healthDistrictId;\r\n        console.log(data, this.requestObj.healthDistrictId, this.requestObj.EquipmentId, ';;;;')\r\n      });\r\n    }\r\n    else if (this.currentUser.roleName == 'Admin') {\r\n      this.equipmentService.getEquipmentById(equipmentId).subscribe(data => {\r\n        this.selectedEquip = data,\r\n          this.requestObj.healthDirectoryId = this.selectedEquip.healthDirectoryId;\r\n        this.requestObj.healthDistrictId = this.selectedEquip.healthDistrictId;\r\n        this.requestObj.employeeId = this.selectedEquip.employeeIDs[0];\r\n\r\n        console.log(data, this.requestObj.employeeId)\r\n      });\r\n    }\r\n  }\r\n\r\n  // getEquipmentById(equipId) {\r\n  //   this.equipmentService.getEquipmentById(equipId).subscribe(data => { this.equipmentObj = data, console.log(this.equipmentObj) })\r\n\r\n  // }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgxQrcodeElementTypes, NgxQrcodeErrorCorrectionLevels } from '@techiediaries/ngx-qrcode';\r\n\r\n@Component({\r\n  selector: 'app-qr-generator',\r\n  templateUrl: './qr-generator.component.html',\r\n  styleUrls: ['./qr-generator.component.css']\r\n})\r\nexport class QrGeneratorComponent implements OnInit {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  // public elementType =NgxQrcodeElementTypes.URL;\r\n public value = 'https://vaiz10.medium.com/a-simple-way-to-generate-and-download-a-qrcode-with-angular-dc64969b476a';\r\n  public elementType = NgxQrcodeElementTypes.IMG;\r\n  public correctionLevel = NgxQrcodeErrorCorrectionLevels.HIGH;\r\n  ngOnInit(): void {\r\n  }\r\n  upload(val: string) {\r\n    console.log(\"qr\")\r\n    console.log(this.value)\r\n    val = this.value\r\n    return this.http.post(`${'http://localhost:51368/api/QRCoder/Index/'}`, val).subscribe(data => {\r\n      console.log(this.value, data)\r\n    })\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h1>QRCODE GENERATOR</h1>\r\n    <input [(ngModel)]=\"value\">\r\n    <ngx-qrcode [elementType]=\"elementType\" [errorCorrectionLevel]=\"correctionLevel\" [value]=\"value\"\r\n        class=\"coolQRCode\"></ngx-qrcode>\r\n    <button (click)=\"upload(value)\">generate QRCode</button>\r\n  \r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor(private userService: UserService, private router: Router) { }\r\n  user: User;\r\n  error:string;\r\n  ngOnInit() {\r\n    this.user = {\r\n      id: '',\r\n      userName: '',\r\n      userNameAr: '',\r\n      email: '',\r\n      password: '',\r\n      roleName: '',\r\n      healthdirId: null,\r\n      token: '',\r\n      suborganizationId: null,\r\n      healthDistrictId: null,\r\n      healthCareUnitId: null,\r\n      organizationId: null,\r\n      organizationName:''\r\n    }\r\n  }\r\n  register() {\r\n    this.userService.register(this.user).subscribe(data => { console.log(data, this.user) }//,this.router.navigate(['/login'])}\r\n      , error => {\r\n        this.error = error.error.Message,\r\n        alert(this.error + \"27-7\")\r\n      })\r\n  }\r\n}\r\n","<div class=\"card\">\r\n    <p-card header=\"BEMS\" subheader=\"Welcome\" [style]=\"{width: '50rem'}\" styleClass=\"p-card-shadow\">\r\n        <form>\r\n            <div class=\"row\">\r\n                <div class=\" col-md-7 inputs\">\r\n\r\n                    <div class=\"p-field  col-md-9 item\">\r\n                        <label for=\"username\">UserName</label>\r\n                        <input type=\"text\" pInputText id=\"username\" [ngModelOptions]=\"{standalone: true}\"\r\n                            class=\"form-control\" [(ngModel)]=\"user.userName\" required autofocus />\r\n                    </div>\r\n                    <div class=\"p-field col-md-9 item\">\r\n                        <label for=\"email\">Email</label>\r\n                        <input type=\"email\" pInputText id=\"email\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\"\r\n                            [(ngModel)]=\"user.email\" required autofocus />\r\n                    </div>\r\n                    <div class=\"p-field col-md-9 item\">\r\n                        <label for=\"password\">Password</label>\r\n                        <input type=\"password\" pInputText id=\"password\" [ngModelOptions]=\"{standalone: true}\"\r\n                            class=\"form-control\" [(ngModel)]=\"user.password\" required autofocus />\r\n                    </div>\r\n                    <br />\r\n        \r\n                    <div class=\"p-field col-md-9 item\">\r\n                        <input type=\"submit\" value=\"Register\" class=\"form-control btn btn-primary\" (click)=\"register()\" required autofocus />\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-5 \">\r\n                    <img class=\"img\" src=\"./../assets/images/medical2.jpg\"  />\r\n                    <br/>\r\n                    <a class=\"col-md-5 link\" routerLink=\"/\">Sign In</a>\r\n\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </p-card>\r\n</div>","<div class=\"card\">\r\n    <span class=\"text-danger error\">{{error}}</span>\r\n    <p-card header=\"BEMS\" subheader=\"Welcome\" [style]=\"{width: '50rem'}\" styleClass=\"p-card-shadow\">\r\n        \r\n        <form (ngSubmit)=\"LoginForm.valid && login()\" #LoginForm=\"ngForm\">\r\n            <div class=\"row\">\r\n                <div class=\" col-md-7 inputs\">\r\n\r\n                    <div class=\"p-field  col-md-9 item\">\r\n                        <label for=\"email\" class=\"labelStyle\">Email</label>\r\n                        <input type=\"email\" pInputText id=\"email\" [ngModelOptions]=\"{standalone: true}\"\r\n                            class=\"form-control\" [(ngModel)]=\"user.email\" required autofocus #email=\"ngModel\"/>\r\n                        <span class=\"text-danger\"\r\n                             *ngIf=\"(email.touched || LoginForm.submitted) && email.errors?.required\">\r\n                             Email is required\r\n                        </span> \r\n                    </div>\r\n                   <br>\r\n                    <div class=\"p-field col-md-9 item\">\r\n                        <label for=\"password\"  class=\"labelStyle\" style=\"float: left;\">Password</label>\r\n                        <input type=\"password\" pInputText id=\"password\" [ngModelOptions]=\"{standalone: true}\"\r\n                            class=\"form-control\" [(ngModel)]=\"user.password\" required\r\n\r\n                             autofocus #password=\"ngModel\" pattern=\"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[*.!@$%^&(){}[]).{8,32}$\"/>\r\n                        <span class=\"text-danger\"\r\n                             *ngIf=\"(password.touched || LoginForm.submitted) && password.errors?.required\">\r\n                             password is required\r\n                        </span>\r\n                        <span class=\"text-danger\"\r\n                             *ngIf=\"(password.touched || LoginForm.submitted) && password.dirty && password.errors\">\r\n                             password is not correct\r\n                        </span>\r\n                    </div>\r\n                    <br />\r\n                    <div class=\"col-md-5\">\r\n                        <a class=\"col-md-5 link\" routerLink=\"/forgetPassword\">Forget Password</a>\r\n                    </div>       \r\n                    \r\n                    <br>\r\n                    <div class=\"p-field col-md-9 item\">\r\n                        <input type=\"submit\" value=\"SignIN\"  class=\"form-control btn btn-primary\" [disabled]=\"!LoginForm.valid\"/>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div class=\"col-md-5\">\r\n                    <img claSS=\"img\" src=\"./../assets/images/medical2.jpg\"  />\r\n                    <a class=\"col-md-5 link\" routerLink=\"/Register\">Don't Have Account?</a>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div class=\"card\">\r\n            <p-toast></p-toast>\r\n        \r\n            <p-captcha siteKey=\"6Lf2XQkTAAAAANcvOwYqPxWL4iZDksFqHpS39GDA\" (onResponse)=\"showResponse($event)\"></p-captcha>\r\n        </div>\r\n    </p-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\nimport { CaptchaModule } from 'primeng/captcha';\r\nimport { ToastModule } from 'primeng/toast';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  userObj: User\r\n  user: User;\r\n  constructor(private userService: UserService, private router: Router, private messageService: MessageService) { }\r\n  error: string;\r\n  ngOnInit() {\r\n    this.user = {\r\n      id: '',\r\n      userName: '',\r\n      userNameAr: '',\r\n      email: '',\r\n      password: '',\r\n      roleName: '',\r\n      healthdirId: 0,\r\n      suborganizationId: 0, token: '',\r\n      healthDistrictId: 0,\r\n      healthCareUnitId: 0,\r\n      organizationId: 0,\r\n      organizationName:'',\r\n       supplierId:0\r\n    }\r\n    this.userObj = {\r\n      id: '',\r\n      userName: '',\r\n      userNameAr: '',\r\n      email: '',\r\n      password: '',\r\n      roleName: '',\r\n      healthdirId: 0,\r\n      suborganizationId: 0,\r\n      token: '',\r\n      healthDistrictId: 0,\r\n      healthCareUnitId: 0,\r\n      organizationId: 0,\r\n      organizationName:''\r\n    }\r\n  }\r\n  showResponse(event) {\r\n    this.messageService.add({ severity: 'info', summary: 'Succees', detail: 'User Responded', sticky: true });\r\n  }\r\n  login() {\r\n    this.userService.login(this.user).subscribe(\r\n      data => {\r\n        this.userObj = data\r\n        console.log(data)\r\n        this.router.navigate(['/home/dashboard'])\r\n        // localStorage.setItem('UserLogged',this.userObj.roleName)\r\n      }\r\n      , error => {\r\n        this.error = error.error.message;\r\n      })\r\n\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Contract } from '../Models/Contract';\r\nimport { ContractRequest, ContractRequestVM, ContractVM, OrganizationRequests } from '../Models/ContractRequest';\r\nimport { dateVM } from '../Models/dateVM';\r\nimport { Equipment } from '../Models/Equipment';\r\nimport { HealthCareUnit } from '../Models/HealthCareUnit';\r\nimport { OrganizationContractRequest } from '../Models/OrganizationContractRequest';\r\nimport { Paging } from '../Models/Paging';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContractService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n  httpHeader = {\r\n    headers: new HttpHeaders({\r\n      'content-type': 'application/json',\r\n      'Accept': '*/*'\r\n    })\r\n  };\r\n  // from:Date;\r\n  // to:Date;\r\n  // dates={\r\n  //   from:new Date(),\r\n  //   to:new Date()\r\n  // }\r\n\r\n  getAllContracts(): Observable<Contract[]> {\r\n    return this.httpClient.get<Contract[]>(`${environment.GetAllContracts}`, this.httpHeader);\r\n  }\r\n\r\n  addNewContract(newContract: Contract): Observable<Contract> {\r\n    return this.httpClient.post<Contract>(`${environment.AddContract}`, newContract, this.httpHeader);\r\n  }\r\n  deleteContract(id: any): Observable<Contract> {\r\n    return this.httpClient.delete<Contract>(`${environment.DeleteContract}${id}`, this.httpHeader);\r\n  }\r\n  updateContract(id: Number, contract: Contract): Observable<any> {\r\n    return this.httpClient.put<any>(`${environment.UpdateContract}${id}`, contract, this.httpHeader);\r\n  }\r\n  AddContractRequest(contractRequest: ContractRequestVM): Observable<any> {\r\n    return this.httpClient.post<any>(`${environment.AddContractRequest}`, contractRequest, this.httpHeader);\r\n  }\r\n  AddOrganizationContractRequest(orgRequest: OrganizationContractRequest): Observable<any> {\r\n    return this.httpClient.post<any>(`${environment.AddOrganizationContractRequest}`, orgRequest, this.httpHeader);\r\n  }\r\ngetHosForOrg(orgId:number):Observable<ContractVM[]>\r\n{\r\n  return this.httpClient.get<ContractVM[]>(`${environment.getHosForOrganization}${orgId}`, this.httpHeader);\r\n}\r\n\r\ngetRequestbetweenDates(orgid:number,dates:dateVM):Observable<any>\r\n{ \r\n  return this.httpClient.put<any>(`${environment.getRequestbetweenDates}${orgid}`,dates);\r\n}\r\ngetRequestForUPA():Observable<OrganizationRequests[]>\r\n{\r\n  return this.httpClient.get<OrganizationRequests[]>(`${environment.getRequestForUPA}`, this.httpHeader);\r\n}\r\ngetEquipmentInContract(Ids:number[]):Observable<Equipment[]>\r\n{\r\n  return this.httpClient.put<Equipment[]>(`${environment.getEquipmentInContract}`,Ids, this.httpHeader);\r\n}\r\ngetOneContract(cId:number):Observable<Contract>\r\n{\r\n  return this.httpClient.get<Contract>(`${environment.getOneContract}${cId}`, this.httpHeader);\r\n}\r\nEquipmentInContract(cId:number):Observable<Equipment[]>\r\n{\r\n  return this.httpClient.get<Equipment[]>(`${environment.EquipmentInContract}${cId}`, this.httpHeader);\r\n}\r\nInformHospital(contractId:number):Observable<Equipment[]>{\r\n  return this.httpClient.get<Equipment[]>(`${environment.getEquipmentsInContract}${contractId}`, this.httpHeader);\r\n}\r\ngetRequestInHospitals(pagingParameter:Paging,hosId:number ):Observable<ContractRequestVM[]>\r\n{\r\n  return this.httpClient.put<ContractRequestVM[]>(`${environment.getRequestInHospitals}${hosId}`,pagingParameter, this.httpHeader);\r\n}\r\ngetcount():Observable<number>\r\n{\r\n  return this.httpClient.get<number>(`${environment.getCountOfRequestInHospital}`);\r\n}\r\nupdateStatus(id: number):Observable<any>\r\n{\r\n  return this.httpClient.get<any>(`${environment.updateRequestStatus}${id}`);\r\n}\r\ngetRequest(id: number):Observable<ContractRequestVM>\r\n{\r\n  return this.httpClient.get<ContractRequestVM>(`${environment.getRequest}${id}`);\r\n}\r\ngetRequestToEdit(id:number):Observable<ContractRequestVM>\r\n{\r\n  return this.httpClient.get<ContractRequestVM>(`${environment.getRequest}${id}`);\r\n}\r\nupdateContractRequest(contractRequest:ContractRequestVM):Observable<any>\r\n{\r\n  return this.httpClient.put<any>(`${environment.updateContractRequest}`,contractRequest);\r\n}\r\ndelete(id:number):Observable<any>\r\n{\r\n  return this.httpClient.delete<any>(`${environment.delete}${id}`);\r\n}\r\n// AddContract(contract:Contract):Observable<any>\r\n// {\r\n//   return this.httpClient.post<Contract>(`${environment.AddNewContract}`,this.httpHeader);\r\n// }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Storage } from '@ionic/storage-angular';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BehaviorSubjectService {\n  private myData: BehaviorSubject<string> = new BehaviorSubject<string>(\"En\");\n  private _storage: Storage | null = null;\n  constructor(private storage: Storage) { }\n\n  \n  async init(){\n    const storage = await this.storage.create();\n    this._storage = storage;\n  }\n\n  async load() {\n    await this.init();\n    const data = await this._storage.get('myData');\n    this.myData.next(data);\n  }\n\n  getData(): Observable<string> {\n    return this.myData;\n  }\n  \n  updateData(data): void {\n    this.myData.next(data);\n  }\n}\n","<nav id=\"navnav\">\r\n\r\n\r\n  <div class=\"navbar navbar-collapse\">\r\n\r\n\r\n    <span routerLink=\"/\" style=\"color: black;cursor: pointer;margin: 0px 10px;padding: 0px 10px;\" (click)=\"logout()\"><i\r\n        class=\"pi pi-power-off\"></i></span>\r\n\r\n\r\n    <span *ngIf=\"currentUser.roleName == 'Organization'\" class=\"headerlinks\" href=\"#\"\r\n      style=\"padding: 0px 10px; margin: 0px 10px;font-size: 16px; font-weight: bold;line-height: 1.2;text-align: center;\">{{currentUser.userName}} <br />\r\n      <span style=\"color: rgb(163, 158, 8);font-weight: normal;position: relative;top:3px\">(</span>\r\n      <span style=\"position: relative;top:-10px;\"><span style=\"font-size: 12px; color: rgb(163, 158, 8);font-weight: normal;position: relative;top:7px\"> {{currentUser.roleName}}</span><br />\r\n      <span style=\"font-size: 10px; color: rgb(163, 158, 8);font-weight: normal;text-align: center; position: relative;left:7px\">\r\n        {{currentUser.organizationName}}</span>\r\n      </span>\r\n      <span style=\"color: rgb(163, 158, 8);font-weight: normal;position: relative;left: 15px;\r\n      top:-13px\">)</span>\r\n    </span>\r\n\r\n    <span *ngIf=\"currentUser.roleName != 'Organization'\" class=\"headerlinks\" href=\"#\"\r\n      style=\"padding: 0px 10px; margin: 0px 10px;font-size: 16px; font-weight: bold;\">{{currentUser.userName}} <br />\r\n      <span style=\"font-size: 13px; color: rgb(163, 158, 8);font-weight: normal;\"> ({{currentUser.roleName}})</span>\r\n      <span class=\"sr-only\">(current)</span> </span>&nbsp;\r\n\r\n    <span routerLink=\"/home/ContractRequest\"\r\n      *ngIf=\"currentUser.roleName=='Admin'|| currentUser.roleName=='Organization'||currentUser.roleName=='Hospital'\">\r\n      <i class=\"pi pi-bell p-mr-4 p-text-danger\" pBadge style=\"font-size: 1.5rem;position: relative; top:7px\" value=\"{{length}}\"></i></span>\r\n\r\n    <span style=\"margin: 0px 20px;padding: 0px 10px;\">\r\n      <select class=\"form-control\" #selectedLang (change)=\"switchLang(selectedLang.value)\">\r\n        <option *ngFor=\"let language of translate.getLangs()\" [value]=\"language\"\r\n          [selected]=\"language === translate.currentLang\">\r\n          <img src=\"./../assets/svg/united-states.svg\" width=\"15\" height=\"15\">{{language}}\r\n        </option>\r\n      </select>\r\n    </span>\r\n\r\n  </div>\r\n</nav>","import { Component, ElementRef, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { Router } from '@angular/router';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\nimport { ContractService } from 'src/app/Shared/services/contract.service';\r\nimport { ContractVM, OrganizationRequests } from 'src/app/Shared/Models/ContractRequest';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\nimport { Equipment, EquipmentVM } from 'src/app/Shared/Models/Equipment';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { BehaviorSubjectService } from 'src/app/Shared/services/behavior-subject.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  @Output() lng =new EventEmitter<string>(); ;\r\n  currentUser: User;\r\n  Lang: any;\r\n  href: any;\r\n  direction: string = 'ltr';\r\n  visibleSidebar1;\r\n  ll: string;\r\n  hospitalList: ContractVM[];\r\n  organizationRequestList: OrganizationRequests[];\r\n  nullablMSG: string;\r\n  length: number;\r\n  orgId: number;\r\n  orgRequestList: OrganizationRequests[] = [];\r\n  EquipmentList: Equipment[];\r\n\r\n  constructor(private userService: UserService, public translate: TranslateService,\r\n    private router: Router, private element: ElementRef, private primengConfig: PrimeNGConfig,\r\n    private contractRequestService: ContractService,private behaviorSubject:BehaviorSubjectService,\r\n    private equipmentService: EquipmentService, private route: Router) {\r\n    this.currentUser = this.userService.currentUserValue;\r\n    translate.addLangs(['En', 'Ar']);\r\n    localStorage.setItem(\"lang\", \"En\");\r\n    const browserLang = translate.getBrowserLang();\r\n    translate.use(browserLang.match(/En|Ar/) ? browserLang : 'En');\r\n    translate.setDefaultLang('En');\r\n  }\r\n  ngOnInit() {\r\n    this.primengConfig.ripple = true;\r\n    if (this.currentUser.roleName == \"Organization\") {\r\n      this.getAllRequestsForOrg();\r\n    }\r\n    this.orgId = this.currentUser.organizationId;\r\n    if (this.currentUser.roleName == \"Admin\") {\r\n      this.getRequestForUPA();\r\n\r\n    }\r\n    if (this.currentUser.roleName == \"Hospital\") {\r\n      this.getAllEquipment(this.currentUser.healthCareUnitId);\r\n    }\r\n\r\n\r\n  }\r\n  logout() {\r\n    this.userService.logout()\r\n  }\r\n  switchLang(lang: string) {\r\n\r\n    localStorage.setItem('lang', lang)\r\n    this.Lang = lang;\r\n    this.href = this.router.url;\r\n    this.translate.use(lang);\r\n    this.lng.emit(lang);\r\n    this.behaviorSubject.updateData(lang);\r\n    // let currentUrl = this.route.url;\r\n    // this.route.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    // this.route.onSameUrlNavigation = 'reload';\r\n    // this.route.navigate([currentUrl]);\r\n  }\r\n  getAllRequestsForOrg() {\r\n    this.length = 0;\r\n    this.contractRequestService.getHosForOrg(this.currentUser.organizationId).subscribe(data => {\r\n      this.hospitalList = data\r\n      if (this.hospitalList.length > 0) {\r\n        this.length = this.hospitalList.length\r\n      }\r\n\r\n    });\r\n\r\n\r\n  }\r\n  getRequestForUPA() {\r\n    this.length = 0\r\n    this.contractRequestService.getRequestForUPA().subscribe(data => {\r\n      this.organizationRequestList = data;\r\n      this.organizationRequestList.forEach(elem => {\r\n        if (elem.orgRequests.length > 0) {\r\n          this.length += elem.orgRequests.length;\r\n        }\r\n        else {\r\n          this.nullablMSG = \"there is no new request.\";\r\n        }\r\n      })\r\n      //  if (this.organizationRequestList.length == 0) {\r\n      //    this.nullablMSG = \"there is no new request.\";\r\n      //  }\r\n    })\r\n  }\r\n  getAllEquipment(hosId) {\r\n    this.length = 0;\r\n    this.equipmentService.getEquipmentInHospital(this.currentUser.healthCareUnitId).subscribe(data => {\r\n      this.EquipmentList = data\r\n      if (this.EquipmentList.length > 0) {\r\n        this.length = this.EquipmentList.length\r\n\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\n<!-- <div class=\"  border-right\" id=\"sidebar-wrapper\"> \r\n  <div class=\"sidebar-heading\">\r\n    <a class=\"navbar-brand\"routerLink=\"/home/equipmentsList\" >\r\n      <img class=\"logo img-fluid\" src=\"./../assets/images/biologo.png\">\r\n    </a>\r\n  </div>\r\n   <div class=\"list-group list-group-flush\">\r\n\r\n\r\n    <a  routerLink=\"/home/dashboard\" class=\"list-group-item list-group-item-action active\">\r\n      {{'Sidebar.Dashboard' |translate}}</a>\r\n      <a routerLink=\"/home/MasterEquipmentList\"\r\n        class=\"list-group-item list-group-item-action  \">{{'Sidebar.MasterEquipment' | translate}}</a>\r\n\r\n      <a routerLink=\"/home/equipmentsList\" class=\"list-group-item list-group-item-action  \">\r\n        {{'Sidebar.equipments'| translate}}</a>\r\n        <a routerLink=\"/home/getRequests\"\r\n        class=\"list-group-item list-group-item-action  \">{{'Sidebar.ServiceRequests' | translate}}</a>\r\n        <a routerLink=\"/home/WorkOrderList\"\r\n        class=\"list-group-item list-group-item-action  \">{{'Sidebar.WorkOrders' | translate}}</a>\r\n   \r\n        <a data-toggle=\"collapse\" class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle\"  href=\"#collapse1\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">{{'Sidebar.Settings' |translate}}</a>\r\n\r\n      <div id=\"collapse1\" class=\"panel-collapse collapse\" style=\"width: 100%;\">\r\n\r\n        \r\n      <a class=\"list-group-item list-group-item-action  \" routerLink=\"/home/emps\">{{\"Sidebar.Employees\" |\r\n        translate}}</a>\r\n      <a routerLink=\"/home/users\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Users\" |\r\n        translate}}</a>\r\n      \r\n      <a routerLink=\"/home/equipmentCategories\"\r\n        class=\"list-group-item list-group-item-action  \">{{'Sidebar.EquipmentCategories' |translate}}</a>\r\n      <a routerLink=\"/home/equipmentSubCategories\"\r\n        class=\"list-group-item list-group-item-action  \">{{'Sidebar.EquipmentSubCategories'| translate}}</a>\r\n      <a routerLink=\"/home/origins\" class=\"list-group-item list-group-item-action  \">{{'Sidebar.Origins'|\r\n        translate}}</a>\r\n      <a routerLink=\"/home/Manfacturers\" class=\"list-group-item list-group-item-action  \">{{'Sidebar.Manufacturer'|\r\n        translate}}</a>\r\n      <a routerLink=\"/home/priorities\" class=\"list-group-item list-group-item-action  \">{{'Sidebar.Priorities'|\r\n        translate}}</a>\r\n      <a routerLink=\"/home/Statuses\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Status\" |\r\n        translate}}</a>\r\n      <a routerLink=\"/home/Suppliers\" class=\"list-group-item list-group-item-action  \">{{'Sidebar.Suppliers'|\r\n        translate}}</a>\r\n      <a routerLink=\"/home/Departments\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Departments\"|\r\n        translate}}</a>\r\n      <a routerLink=\"/home/Modes\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Modes\"|\r\n        translate}}</a>\r\n      <a routerLink=\"/home/sla\"class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Service Level Agreement\"| translate}}</a>\r\n      <a routerLink=\"/home/ecrisList\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.ecrisList\"|\r\n        translate}}</a>\r\n      <a routerLink=\"/home/settings\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Calender\"|\r\n        translate}}</a>\r\n  \r\n      <a routerLink=\"/home/contractsList\"\r\n        class=\"list-group-item list-group-item-action  \">{{\"Sidebar.contractsList\"| translate}}</a>\r\n      <a routerLink=\"/home/healthUnitsList\"\r\n        class=\"list-group-item list-group-item-action  \">{{\"Sidebar.healthUnitsList\"| translate}}</a>\r\n      </div>\r\n  </div>\r\n</div>  -->\r\n\r\n\r\n\r\n<!-- <p-sidebar [(visible)]=\"visibleSidebar1\" [baseZIndex]=\"10000\"  id=\"sidebar-wrapper\">\r\n\r\n  <a class=\"navbar-brand\"routerLink=\"/home/equipmentsList\" >\r\n    <img class=\"logo img-fluid\" src=\"./../assets/images/biologo.png\">\r\n  </a>\r\n  <a  routerLink=\"/home/dashboard\" class=\"list-group-item list-group-item-action active\">\r\n    {{'Sidebar.Dashboard' |translate}}</a>\r\n    <a routerLink=\"/home/MasterEquipmentList\"\r\n      class=\"list-group-item list-group-item-action  \">{{'Sidebar.MasterEquipment' | translate}}</a>\r\n\r\n    <a routerLink=\"/home/equipmentsList\" class=\"list-group-item list-group-item-action  \">\r\n      {{'Sidebar.equipments'| translate}}</a>\r\n      <a routerLink=\"/home/getRequests\"\r\n      class=\"list-group-item list-group-item-action  \">{{'Sidebar.ServiceRequests' | translate}}</a>\r\n  <a data-toggle=\"collapse\" class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle\"  href=\"#collapse1\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">{{'Sidebar.Settings' |translate}}</a>\r\n\r\n    <div id=\"collapse1\" class=\"panel-collapse collapse\" style=\"width: 100%;\">\r\n\r\n      \r\n    <a class=\"list-group-item list-group-item-action  \" routerLink=\"/home/emps\">{{\"Sidebar.Employees\" |\r\n      translate}}</a>\r\n    <a routerLink=\"/home/users\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Users\" |\r\n      translate}}</a>\r\n    \r\n    <a routerLink=\"/home/equipmentCategories\"\r\n      class=\"list-group-item list-group-item-action  \">{{'Sidebar.EquipmentCategories' |translate}}</a>\r\n    <a routerLink=\"/home/equipmentSubCategories\"\r\n      class=\"list-group-item list-group-item-action  \">{{'Sidebar.EquipmentSubCategories'| translate}}</a>\r\n    <a routerLink=\"/home/origins\" class=\"list-group-item list-group-item-action  \">{{'Sidebar.Origins'|\r\n      translate}}</a>\r\n    <a routerLink=\"/home/Manfacturers\" class=\"list-group-item list-group-item-action  \">{{'Sidebar.Manufacturer'|\r\n      translate}}</a>\r\n    <a routerLink=\"/home/priorities\" class=\"list-group-item list-group-item-action  \">{{'Sidebar.Priorities'|\r\n      translate}}</a>\r\n    <a routerLink=\"/home/Statuses\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Status\" |\r\n      translate}}</a>\r\n    <a routerLink=\"/home/Suppliers\" class=\"list-group-item list-group-item-action  \">{{'Sidebar.Suppliers'|\r\n      translate}}</a>\r\n    <a routerLink=\"/home/Departments\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Departments\"|\r\n      translate}}</a>\r\n    <a routerLink=\"/home/Modes\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Modes\"|\r\n      translate}}</a>\r\n    <a routerLink=\"/home/sla\"class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Service Level Agreement\"| translate}}</a>\r\n    <a routerLink=\"/home/ecrisList\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.ecrisList\"|\r\n      translate}}</a>\r\n    <a routerLink=\"/home/settings\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Calender\"|\r\n      translate}}</a>\r\n\r\n    <a routerLink=\"/home/contractsList\"\r\n      class=\"list-group-item list-group-item-action  \">{{\"Sidebar.contractsList\"| translate}}</a>\r\n    <a routerLink=\"/home/healthUnitsList\"\r\n      class=\"list-group-item list-group-item-action  \">{{\"Sidebar.healthUnitsList\"| translate}}</a>\r\n    </div>\r\n\r\n</p-sidebar>\r\n<p-button type=\"button\" (click)=\"visibleSidebar1 = true\">☰</p-button> -->\r\n\r\n\r\n\r\n<mat-toolbar>\r\n  <button mat-icon-button (click)=\"sidenav.toggle()\">\r\n    <mat-icon > menu </mat-icon>\r\n  </button>\r\n  <span style=\"margin: 0px 10px ; color: navy; font-size: 15pt; font-weight: bold;\" class=\"example-spacer\" >{{'General.Slogan'|translate}} </span> \r\n\r\n   <div [ngStyle]=\"{'float': selectedLang === 'En' ? 'right': 'left'}\">\r\n      <app-navbar></app-navbar>\r\n  </div> \r\n    \r\n \r\n</mat-toolbar>\r\n<mat-sidenav-container autosize>\r\n  <mat-sidenav #sidenav=\"matSidenav\" class=\"mat-elevation-z8\"\r\n    (mouseenter)=\"mouseenter()\" mode=\"side\"\r\n    (mouseleave)=\"mouseleave()\" [ngStyle]=\"{'text-align': selectedLang=== 'En' ? 'left': 'right'}\">\r\n\r\n    <a class=\"navbar-brand\" routerLink=\"/home/equipmentsList\" style=\"margin:0px 90px\">\r\n      <img class=\"logo img-fluid\" src=\"./../assets/images/biologo.png\">\r\n    </a>\r\n    <a  routerLink=\"/home/dashboard\" class=\"list-group-item list-group-item-action active\" id=\"pills-home-tab\" aria-selected=\"true\">\r\n      {{'Sidebar.Dashboard' |translate}}</a>\r\n      <a routerLink=\"/home/MasterEquipmentList\"\r\n        class=\"list-group-item list-group-item-action  \">{{'Sidebar.MasterEquipment' | translate}}</a>\r\n  \r\n      <a routerLink=\"/home/equipmentsList\" class=\"list-group-item list-group-item-action  \">\r\n        {{'Sidebar.equipments'| translate}}</a>\r\n        <!-- routerLink=\"/home/getRequests\"  -->\r\n         <a routerLink=\"/home/healthUnitsList\"\r\n        class=\"list-group-item list-group-item-action\">{{\"Sidebar.healthUnitsList\"| translate}}</a>\r\n  <a routerLink=\"/home/OrganizationList\"\r\n        class=\"list-group-item list-group-item-action\">{{\"Sidebar.Organization\"| translate}}</a>\r\n        <a routerLink=\"/home/SubOrganizationList\"\r\n        class=\"list-group-item list-group-item-action\">{{\"Sidebar.SubOrganization\"| translate}}</a>\r\n        \r\n        <!-- <a routerLink=\"/home/qrCoder\"\r\n        class=\"list-group-item list-group-item-action\">qrCoder</a> -->\r\n        <a *ngIf=\"currentUser.roleName==='Organization' || currentUser.roleName==='Admin'\"  routerLink=\"/home/AddContractRequest\"\r\n        class=\"list-group-item list-group-item-action\">{{'Sidebar.ContractRequest' |translate}}</a>\r\n\r\n        <a *ngIf=\"currentUser.roleName==='Hospital'\"  routerLink=\"/home/ContractRequest\"\r\n        class=\"list-group-item list-group-item-action\">{{'Sidebar.ContractRequest' |translate}}</a>\r\n        <!-- <a *ngIf=\"currentUser.roleName!='Organization' ||currentUser.roleName!='Admin' ||\r\n        currentUser.roleName!='Hospital'\" routerLink=\"/home/ContractRequest\"\r\n        class=\"list-group-item list-group-item-action\">{{'Sidebar.ContractRequest' |translate}}</a> -->\r\n        <a routerLink=\"/home/equipmentRecall\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.equipmentRecall\"|\r\n          translate}}</a>\r\n          <a routerLink=\"/home/map\" class=\"list-group-item list-group-item-action  \">Map</a>   \r\n        <a routerLink=\"#\" \r\n        \r\n        class=\"list-group-item list-group-item-action isDisabled\">{{'Sidebar.ServiceRequests' | translate}}</a>\r\n      \r\n        <!-- <a routerLink=\"/home/workOrders\" \r\n        class=\"list-group-item list-group-item-action isDisabled\">{{'Sidebar.ServiceRequests' | translate}}</a>\r\n       -->\r\n    <a data-toggle=\"collapse\" class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle\"  href=\"#collapse1\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">{{'Sidebar.Settings' |translate}}</a>\r\n  \r\n      <div id=\"collapse1\" class=\"panel-collapse collapse\" style=\"width: 100%;\">\r\n  \r\n        \r\n      <!-- <a class=\"list-group-item list-group-item-action  \" routerLink=\"/home/emps\">{{\"Sidebar.Employees\" |\r\n        translate}}</a> -->\r\n      <a routerLink=\"/home/users\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Users\" |\r\n        translate}}</a>\r\n      \r\n      <a routerLink=\"/home/equipmentCategories\"\r\n        class=\"list-group-item list-group-item-action  \">{{'Sidebar.EquipmentCategories' |translate}}</a>\r\n      <a routerLink=\"/home/equipmentSubCategories\"\r\n        class=\"list-group-item list-group-item-action  \">{{'Sidebar.EquipmentSubCategories'| translate}}</a>\r\n      <a routerLink=\"/home/origins\" class=\"list-group-item list-group-item-action  \">{{'Sidebar.Origins'|\r\n        translate}}</a>\r\n      <a routerLink=\"/home/Manfacturers\" class=\"list-group-item list-group-item-action  \">{{'Sidebar.Manufacturer'|\r\n        translate}}</a>\r\n      <a routerLink=\"/home/priorities\" class=\"list-group-item list-group-item-action  \">{{'Sidebar.Priorities'|\r\n        translate}}</a>\r\n      <a routerLink=\"/home/Statuses\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Status\" |\r\n        translate}}</a>\r\n      <a routerLink=\"/home/Suppliers\" class=\"list-group-item list-group-item-action  \">{{'Sidebar.Suppliers'|\r\n        translate}}</a>\r\n      <a routerLink=\"/home/Departments\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Departments\"|\r\n        translate}}</a>\r\n      <!-- <a routerLink=\"/home/Modes\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Modes\"|\r\n        translate}}</a> -->\r\n      <a routerLink=\"/home/sla\"class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Service Level Agreement\"| translate}}</a>\r\n      <a routerLink=\"/home/ecrisList\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.ecrisList\"|\r\n        translate}}</a>\r\n        <!-- <a routerLink=\"/home/pdfCreate\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.pdf\"|\r\n          translate}}</a> -->\r\n          \r\n     \r\n          <a routerLink=\"/home/Inventories\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Inventories\"|\r\n            translate}}</a>\r\n          \r\n      <!-- <a routerLink=\"/home/settings\" class=\"list-group-item list-group-item-action  \">{{\"Sidebar.Calender\"|\r\n        translate}}</a> -->\r\n  \r\n      <!-- <a routerLink=\"/home/contractsList\"\r\n        class=\"list-group-item list-group-item-action  \">{{\"Sidebar.contractsList\"| translate}}</a> -->\r\n      \r\n        <!-- <a routerLink=\"/home/AddOganization\"\r\n        class=\"list-group-item list-group-item-action  \">{{\"Sidebar.healthUnitsList\"| translate}}</a> -->\r\n\r\n      </div>\r\n  \r\n\r\n  </mat-sidenav>\r\n\r\n\r\n\r\n\r\n   <mat-sidenav-content>\r\n    <div class=\"mat-elevation-z8 container-fluid contentTopMargin\">\r\n    <router-outlet></router-outlet>\r\n    </div>\r\n  </mat-sidenav-content> \r\n</mat-sidenav-container>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {PanelMenuModule} from 'primeng/panelmenu';\r\nimport {MenuItem,PrimeNGConfig} from 'primeng/api';\r\nimport { TranslateService ,LangChangeEvent  } from '@ngx-translate/core'; \r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\n@Component({\r\n  selector: 'app-side-bar',\r\n  templateUrl: './side-bar.component.html',\r\n  styleUrls: ['./side-bar.component.css']\r\n})\r\nexport class SideBarComponent implements OnInit {\r\n  // @ViewChild(MatSidenav)\r\n  // sidenav: MatSidenav;\r\n\r\n  @ViewChild('sidenav',{static:true}) sidenav: MatSidenav;\r\n  isExpanded = true;\r\n  showSubmenu: boolean = false;\r\n  isShowing = false;\r\n  showSubSubMenu: boolean = false;\r\n  showFiller = false;\r\n  items:MenuItem[];\r\n  visibleSidebar1=true;\r\n  selectedLang:string;\r\n  label1:any;\r\n  category:any;\r\n  currentUser: User;\r\n  constructor(private primengConfig: PrimeNGConfig,private translate:TranslateService,\r\n    private observer: BreakpointObserver,private userService: UserService) { \r\n      this.currentUser = this.userService.currentUserValue;\r\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) =>\r\n    {\r\n      if(event.lang == 'Ar')\r\n      {\r\n        this.selectedLang='Ar';\r\n      } \r\n      else       \r\n      {\r\n        this.selectedLang='En';\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // console.log(\"lang\",this.translate.getBrowserLang()) ;\r\n    this.observer.observe([\r\n      Breakpoints.XSmall,\r\n      Breakpoints.Small,\r\n      Breakpoints.Medium,\r\n      Breakpoints.Large,\r\n      Breakpoints.XLarge\r\n    ]).subscribe( (state: BreakpointState) => {\r\n      if (state.breakpoints[Breakpoints.XSmall]) {\r\n           console.log( 'Matches XSmall viewport');\r\n           this.sidenav.mode =  'over';\r\n           this.sidenav.close();\r\n      }\r\n      if (state.breakpoints[Breakpoints.Small]) {\r\n           console.log( 'Matches Small viewport');\r\n           this.sidenav.mode = 'over';\r\n           this.sidenav.close();\r\n      }\r\n      if (state.breakpoints[Breakpoints.Medium]) {\r\n           console.log( 'Matches Medium  viewport');\r\n           this.sidenav.mode = 'side';\r\n           this.sidenav.close();\r\n      }\r\n      if (state.breakpoints[Breakpoints.Large]) {\r\n\r\n          console.log( 'Matches Large viewport');\r\n          this.sidenav.mode = 'side';\r\n          this.sidenav.open();\r\n      }\r\n      if (state.breakpoints[Breakpoints.XLarge]) {\r\n\r\n         console.log( 'Matches XLarge viewport');   \r\n         this.sidenav.mode = 'side';\r\n         this.sidenav.open();\r\n      }\r\n    });\r\n  }\r\n  // ngAfterViewInit() {\r\n\r\n  //   this.observer.observe([\r\n  //     Breakpoints.XSmall,\r\n  //     Breakpoints.Small,\r\n  //     Breakpoints.Medium,\r\n  //     Breakpoints.Large,\r\n  //     Breakpoints.XLarge\r\n  //   ]).subscribe( (state: BreakpointState) => {\r\n  //     if (state.breakpoints[Breakpoints.XSmall]) {\r\n  //          console.log( 'Matches XSmall viewport');\r\n  //          this.sidenav.mode = 'over';\r\n  //          this.sidenav.close();\r\n  //     }\r\n  //     if (state.breakpoints[Breakpoints.Small]) {\r\n  //          console.log( 'Matches Small viewport');\r\n  //          this.sidenav.mode = 'over';\r\n  //          this.sidenav.close();\r\n  //     }\r\n  //     if (state.breakpoints[Breakpoints.Medium]) {\r\n  //          console.log( 'Matches Medium  viewport');\r\n  //          this.sidenav.mode = 'side';\r\n  //          this.sidenav.close();\r\n  //     }\r\n  //     if (state.breakpoints[Breakpoints.Large]) {\r\n\r\n  //         console.log( 'Matches Large viewport');\r\n  //         this.sidenav.mode = 'side';\r\n  //         this.sidenav.open();\r\n  //     }\r\n  //     if (state.breakpoints[Breakpoints.XLarge]) {\r\n\r\n  //        console.log( 'Matches XLarge viewport');   \r\n  //        this.sidenav.mode = 'side';\r\n  //        this.sidenav.open();\r\n  //     }\r\n  //   });\r\n  // }\r\n  mouseenter() {\r\n    if (!this.isExpanded) {\r\n      this.isShowing = true;\r\n    }\r\n  }\r\n\r\n  mouseleave() {\r\n    if (!this.isExpanded) {\r\n      this.isShowing = false;\r\n    }\r\n  }\r\n  gettrans()\r\n  {\r\n    console.log(\"lang\",this.translate.getBrowserLang()) ;   \r\n    this.translate.get('Sidebar').subscribe((data: string) => {\r\n      console.log(\"trans\",data);\r\n      this.label1=data['Users']\r\n      this.category=data['EquipmentCategories']\r\n      // console.log(\"label1\",this.label1);\r\n      // console.log(\"cat\",this.category);\r\n     \r\n    });\r\n\r\n    this.items = [\r\n      {\r\n          label: 'Setting',\r\n          items: [{\r\n                  label:this.label1,\r\n                  routerLink:['/home/users'],\r\n              },\r\n              {\r\n                label:this.category,\r\n                routerLink:['/home/equipmentCategories'],\r\n              }\r\n          ]\r\n      }]\r\n    }\r\n    \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-side-bar></app-side-bar>\r\n\r\n<!-- <div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-3\">\r\n      <app-side-bar></app-side-bar>\r\n\r\n    </div>\r\n    <div class=\"col-lg-9\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-12\"><app-navbar></app-navbar></div>\r\n        <div class=\"col-lg-12\"> \r\n          <router-outlet></router-outlet>\r\n        </div>\r\n      </div>\r\n      \r\n     \r\n    </div>\r\n  </div>\r\n</div> -->\r\n<!-- </div>\r\n          <div class=\"col-lg-12\" id=\"content\"> -->\r\n<!-- <div class=\"row\">\r\n              <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\" >\r\n                <app-navbar></app-navbar>\r\n              </div>\r\n            </div> -->\r\n\r\n<!-- <router-outlet></router-outlet> -->\r\n<!-- <div class=\"footer mt-auto py-3\">\r\n    <app-footer></app-footer>\r\n  </div> -->","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { OrganizationRequests } from '../Models/ContractRequest';\r\nimport { Organization } from '../Models/Organization';\r\nimport { Paging } from '../Models/Paging';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrganizationService {\r\n  httpHeader={headers: new HttpHeaders({\r\n    'content-type':'application/json',\r\n    'Accept': '*/*'\r\n  })};\r\n  constructor(private httpClient: HttpClient) { }\r\n  getAllOrganization():Observable<Organization[]>\r\n  {\r\n    return this.httpClient.get<Organization[]>(`${environment.GetAllOrganization}`,this.httpHeader);\r\n  }\r\n  \r\n  getOrganizationscount():Observable<number>\r\n  {\r\n    return this.httpClient.get<number>(`${environment.getOrganizationscount}`);\r\n  }\r\n  getAllwithpaging(page:Paging):Observable<Organization[]>\r\n  {\r\n    return this.httpClient.put<Organization[]>(`${environment.GetAllOrganizationWithPaging}`,page,this.httpHeader);\r\n  }\r\n  addNewOrganization(newOrganization: Organization):Observable<Organization>\r\n  {\r\n    return this.httpClient.post<Organization>(`${environment.AddOrganization}`,newOrganization,this.httpHeader);\r\n  }\r\n  deleteOrganization(id: any): Observable <Organization>{\r\n    return this.httpClient.delete<Organization> (`${environment.DeleteOrganization}${id}`,this.httpHeader) ;\r\n}\r\n updateOrganization(id:Number,organization:Organization):Observable<any>{\r\n  return this.httpClient.put<any> (`${environment.UpdateOrganization}${id}`,organization,this.httpHeader) ;\r\n }\r\n getOrganization(orgId:number):Observable<Organization>\r\n {\r\n  return this.httpClient.get<Organization> (`${environment.GetOrganization}${orgId}`,this.httpHeader) ;\r\n }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Paging } from '../Models/Paging';\r\nimport { SubOrganization } from '../Models/subOrganization';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubSubOrganizationService {\r\n\r\n  httpHeader={headers: new HttpHeaders({\r\n    'content-type':'application/json',\r\n    'Accept': '*/*'\r\n  })};\r\n  constructor(private httpClient: HttpClient) { }\r\n  getAllSubOrganization():Observable<SubOrganization[]>\r\n  {\r\n    return this.httpClient.get<SubOrganization[]>(`${environment.GetALLSubOrganization}`,this.httpHeader);\r\n  }\r\n  addNewSubOrganization(newSubOrganization: SubOrganization):Observable<SubOrganization>\r\n  {\r\n    return this.httpClient.post<SubOrganization>(`${environment.AddNewSubOrganization}`,newSubOrganization,this.httpHeader);\r\n  }\r\n  deleteSubOrganization(id: any): Observable <SubOrganization>{\r\n    return this.httpClient.delete<SubOrganization> (`${environment.deleteSubOrganization}${id}`,this.httpHeader) ;\r\n}\r\n updateSubOrganization(id:Number,organization:SubOrganization):Observable<any>{\r\n  return this.httpClient.put<any> (`${environment.updateSubOrganization}${id}`,organization,this.httpHeader) ;\r\n }\r\n getSubOrganization(suborgId:number):Observable<SubOrganization>\r\n {\r\n  return this.httpClient.get<SubOrganization> (`${environment.GetSubOrganization}${suborgId}`,this.httpHeader) ;\r\n }\r\n getSubOrgscount()\r\n {\r\n  return this.httpClient.get<number>(`${environment.getSubOrgscount}`);\r\n }\r\n getAllSubOrgswithpaging(page:Paging):Observable<SubOrganization[]>\r\n {\r\n  return this.httpClient.put<SubOrganization[]>(`${environment.GetAllSubOrgsWithPaging}`,page,this.httpHeader);\r\n }\r\n}\r\n","\r\n        <p-toast posinset=\"top-right\"></p-toast>\r\n        \r\n<div class=\"container-fluid\">\r\n\r\n    <div class=\"card\">\r\n        <p-messages [value]=\"msgs\"></p-messages>\r\n        <div class=\"card-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-11\">\r\n                    <h5>{{'user.ManageUsers' |translate}}</h5>\r\n\r\n                </div>\r\n                <div class=\"col-md-1\" style=\"text-align: right;\">\r\n                    <button *ngIf=\"currentUser.roleName != 'Technician'\"  pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary  p-button-rounded p-mr-2 new\"\r\n                    routerLink=\"/home/addUser\" pTooltip=\"Add a New User\" tooltipPosition=\"right\"></button>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\"><br /></div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n        <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n        <p-table #dt [value]=\"users\"  [rows]=\"10\" [paginator]=\"true\" [(selection)]=\"selectedUsers\"\r\n            [rowHover]=\"true\" dataKey=\"id\"  styleClass=\"p-datatable-striped\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            [showCurrentPageReport]=\"true\" [globalFilterFields]=\"['userName','roleName']\">\r\n            <ng-template pTemplate=\"caption\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n             \r\n                    <span class=\"p-input-icon-right\">\r\n                        <i class=\"pi pi-search\"></i>\r\n                        <input pInputText type=\"text\" class=\"form-control\"\r\n                            (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                            placeholder=\"{{'search.Search'|translate}}...\" />\r\n                    </span>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n\r\n                    <th pSortableColumn=\"userName\">{{'user.UserNameEn' |translate}} <p-sortIcon field=\"userName\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"role\">{{'user.Role' |translate}} <p-sortIcon field=\"role\"></p-sortIcon>\r\n                    </th>\r\n                    <th style=\"width: 10%;\">{{'Actions.Action' |translate}}</th>\r\n                </tr>\r\n\r\n                \r\n                <tr>\r\n\r\n                    <th>\r\n                        <input pInputText type=\"text\" (input)=\"dt.filter($event.target.value, 'userName', 'contains')\"\r\n                            [value]=\"dt.filters['userName']?.value\" placeholder=\"{{'search.SearchbyName'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th>\r\n                        <input pInputText type=\"text\" (input)=\"dt.filter($event.target.value, 'role', 'contains')\"\r\n                            [value]=\"dt.filters['role']?.value\" placeholder=\"{{'search.SearchbyRole'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-user >\r\n                <tr>\r\n                    <td>{{translate.currentLang == \"En\" ? user.userName:user.userNameAr}}</td>\r\n                    <td>{{user.roleName}}</td>\r\n                    <td>\r\n                        <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-info edit\"\r\n                        *ngIf=\"currentUser.roleName != 'Technician'\" (click)=\"openNew(user)\" pTooltip=\"edit a user\" tooltipPosition=\"top\"></button>\r\n\r\n                            <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\"\r\n                            (click)=\"confirmDelete(user.id,user.userName)\" *ngIf=\"currentUser.roleName != 'Technician'\"></button>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"summary\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    {{'In total there are.In total there are'| translate}}{{users ? users.length : 0 }} {{\"Sidebar.Users\" |\r\n                    translate}}.\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div></div></div></div>\r\n    <p-dialog [(visible)]=\"userDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid dialog\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">{{'user.EditUser'|translate}}</h3>\r\n                </div>\r\n                <div>\r\n                    <img src=\"./../assets/images/user.jpg\" class=\"img\" [alt]=\"product\">\r\n                </div>\r\n            </div>\r\n            <form (ngSubmit)=\"EditUserForm.valid && updateUser()\" #EditUserForm=\"ngForm\">\r\n\r\n                <fieldset class=\"tab\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-3\">\r\n                            <label for=\"username\">{{'user.UserName'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\"\r\n                                placeholder=\"{{'user.UserName'|translate}}\" [(ngModel)]=\"user.userName\"\r\n                                required [class.is-invalid]=\"userName.touched && userName.errors || EditUserForm.submitted\"\r\n                                [class.is-valid]=\"userName.valid && EditUserForm.submitted\" #userName=\"ngModel\"\r\n                                pTooltip=\"Please,Enter An UserName in English\" tooltipPosition=\"bottom\">\r\n                            <div *ngIf=\"(userName.touched || EditUserForm.submitted) && userName.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    English name is required\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n    \r\n                        <div class=\"col-md-3\">\r\n                            <label for=\"USERname\">{{'user.arabicUserName'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"USERname\" name=\"USERname\"\r\n                                placeholder=\"{{'user.arabicUserName'|translate}}\" [(ngModel)]=\"user.userNameAr\"\r\n                                required [class.is-invalid]=\"arname.touched && arname.errors || EditUserForm.submitted\"\r\n                                [class.is-valid]=\"arname.valid && EditUserForm.submitted\" #arname=\"ngModel\"\r\n                                pTooltip=\"Please,Enter An user Name in Arabic\" tooltipPosition=\"bottom\">\r\n                            <div *ngIf=\"(arname.touched || EditUserForm.submitted) && arname.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    Arabic name is required\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-3 form-group\">\r\n                            <label for=\"email\">{{'user.Email' |translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"email\" #email=\"ngModel\" \r\n                                placeholder=\"{{'user.Email' |translate}}\" name=\"email\"\r\n                                [class.is-invalid]=\"(email.touched && email.errors) || EditUserForm.submitted\" \r\n                                [class.is-valid]=\"email.valid && EditUserForm.submitted\" \r\n                                [(ngModel)]=\"user.email\" required>\r\n                                <div *ngIf=\"(email.touched || EditUserForm.submitted) && email.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        Email is required                               \r\n                                    </span>\r\n                               </div>\r\n                        </div>\r\n    \r\n                        <div class=\"col-md-3 form-group\">\r\n                            <label for=\"password\">{{'user.Passsword' |translate}}</label>\r\n                            <input type=\"password\" class=\"form-control\" id=\"password\" \r\n                                placeholder=\"{{'user.Passsword' |translate}}\" name=\"password\"\r\n                                [class.is-invalid]=\"(password.touched && password.errors) || EditUserForm.submitted\" \r\n                                [class.is-valid]=\"password.valid && EditUserForm.submitted\" \r\n                                #password=\"ngModel\" [(ngModel)]=\"user.password\" required>\r\n                                <div *ngIf=\"(password.touched || EditUserForm.submitted) && password.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        Password is required                               \r\n                                    </span>\r\n                               </div>\r\n                        </div>\r\n                        <div class=\"col-md-3 form-group\">\r\n                            <label for=\"mobile\">{{'employee.Mobile'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"mobile\" [ngModelOptions]=\"{standalone: true}\"\r\n                                placeholder=\"{{'employee.Mobile'|translate}}\" [(ngModel)]=\"user.mobile\"\r\n                                pTooltip=\"Please,Enter A Mobile Number\" tooltipPosition=\"bottom\">\r\n                        </div>\r\n    \r\n                        <div class=\"col-md-3 form-group\">\r\n                            <label for=\"phone\">{{'employee.Phone'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"phone\" [ngModelOptions]=\"{standalone: true}\"\r\n                                placeholder=\"{{'employee.Mobile'|translate}}\" [(ngModel)]=\"user.phone\"\r\n                                pTooltip=\"Please,Enter A Phone Number\" tooltipPosition=\"bottom\">\r\n                        </div>\r\n    \r\n                        <div class=\"col-md-3 form-group\">\r\n                            <label for=\"code\">{{'employee.EmployeeCode'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"employeeCode\"\r\n                                placeholder=\"{{'employee.EmployeeCode'|translate}}\" #Code=\"ngModel\" name=\"employeeCode\"\r\n                                [(ngModel)]=\"user.employeeCode\" required\r\n                                [class.is-invalid]=\"Code.touched && Code.errors || EditUserForm.submitted\"\r\n                                [class.is-valid]=\"Code.valid && EditUserForm.submitted\"\r\n                                pTooltip=\"Please,Enter An EmployeeCode\" tooltipPosition=\"bottom\">\r\n                            <div *ngIf=\"(Code.touched || EditUserForm.submitted) && Code.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    Code is required\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n    \r\n                        <div class=\"col-md-3 form-group\">\r\n                            <label for=\"healthName\">{{'employee.healthCareUnit'|translate}}</label>\r\n                            <select class=\"form-control\" id=\"healthName\" name=\"healthName\"\r\n                                [(ngModel)]=\"user.healthCareUnitId\"\r\n                                [class.is-invalid]=\"healthCareUnit.touched && healthCareUnit.errors || EditUserForm.submitted\"\r\n                                [class.is-valid]=\"healthCareUnit.valid && EditUserForm.submitted\"\r\n                                #healthCareUnit=\"ngModel\" required \r\n                                pTooltip=\"Please,Enter A healthCareUnit\" tooltipPosition=\"bottom\">\r\n                                <option selected>--select--</option>\r\n                                <option *ngFor=\"let h of healthUnits\" [value]=\"h.id\">\r\n                                    {{translate.currentLang == \"En\" ? h.healthCareUnitName:h.healthCareUnitNameAr}}\r\n                                </option>\r\n                            </select>\r\n                            <div  *ngIf=\"currentUser.roleName == 'Hospital'\">\r\n                            <div\r\n                                *ngIf=\"(healthCareUnit.touched || EditUserForm.submitted) && healthCareUnit.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    health CareUnit is required\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div class=\"col-md-3 form-group\">\r\n                            <label for=\"directoryName\">{{'healthCareUnit.governorate'|translate}}</label>\r\n                            <select class=\"form-control\" id=\"directoryName\" pTooltip=\"select A directory Name\"\r\n                                tooltipPosition=\"bottom\" name=\"directoryName\" #directoryName=\"ngModel\"\r\n                                [(ngModel)]=\"user.healthdirId\" (change)=\"loadDistricts(user.healthdirId)\"\r\n                                [class.is-invalid]=\"directoryName.touched && directoryName.errors || EditUserForm.submitted\"\r\n                                [class.is-valid]=\" directoryName.valid && EditUserForm.submitted\" required>\r\n                                <option>{{'healthCareUnit.directory'|translate}}</option>\r\n                                <option *ngFor=\"let h of healthDirectories\" [value]=\"h.id\">\r\n                                    {{translate.currentLang == \"En\" ? h.healthDirectoryName:h.hhealthDirectoryNameAr}}\r\n                                </option>\r\n                            </select>\r\n                            <div\r\n                                *ngIf=\"(directoryName.touched || EditUserForm.submitted) && directoryName.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    nameAr is required\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n    \r\n                        <div class=\"col-md-3 form-group\">\r\n                            <label for=\"districtName\">{{'healthCareUnit.district'|translate}}</label>\r\n                            <select class=\"form-control\" id=\"districtName\" pTooltip=\"select A district Name\"\r\n                                tooltipPosition=\"bottom\" name=\"districtName\" #districtName=\"ngModel\"\r\n                                [(ngModel)]=\"user.healthDistrictId\"\r\n                                [class.is-invalid]=\"districtName.touched && districtName.errors || EditUserForm.submitted\"\r\n                                [class.is-valid]=\" districtName.valid && EditUserForm.submitted\" required>\r\n                                <option>{{'healthCareUnit.district'|translate}}</option>\r\n                                <option *ngFor=\"let h of healthDistricts\" [value]=\"h.id\">\r\n                                    {{translate.currentLang == \"En\" ? h.healthDistrictName:h.healthDistrictNameAr}}\r\n                                </option>\r\n                            </select>\r\n                            <div\r\n                                *ngIf=\"(districtName.touched || EditUserForm.submitted) && districtName.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    nameAr is required\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-3\">\r\n                            <label for=\"organization\">{{'healthCareUnit.organization'|translate}}</label>\r\n                            <select class=\"form-control\" id=\"organization\" pTooltip=\"select A organization Name\"\r\n                                tooltipPosition=\"bottom\" name=\"organization\" #organization=\"ngModel\"\r\n                                [(ngModel)]=\"user.organizationId\"\r\n                                [class.is-invalid]=\"organization.touched && organization.errors || EditUserForm.submitted\"\r\n                                [class.is-valid]=\" organization.valid && EditUserForm.submitted\" required>\r\n                                <option>{{'healthUnit.organization'|translate}}</option>\r\n                                <option *ngFor=\"let org of organizationList\" [value]=\"org.id\">\r\n                                    {{translate.currentLang == \"En\" ? org.name:org.nameAr}}\r\n                                </option>\r\n                            </select>\r\n                            <div\r\n                                *ngIf=\"(organization.touched || EditUserForm.submitted) && organization.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    nameAr is required\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-3\">\r\n                            <label for=\"suborganization\">{{\"Sidebar.SubOrganization\"| translate}}</label>\r\n                            <select class=\"form-control\" id=\"suborganization\" pTooltip=\"select A subOrganization Name\"\r\n                                tooltipPosition=\"bottom\" name=\"suborganization\" #subOrganization=\"ngModel\"\r\n                                [(ngModel)]=\"user.subOrganizationId\"\r\n                                [class.is-invalid]=\"subOrganization.touched && subOrganization.errors || EditUserForm.submitted\"\r\n                                [class.is-valid]=\" subOrganization.valid && EditUserForm.submitted\" required>\r\n                                <option>{{\"Sidebar.SubOrganization\"| translate}}</option>\r\n                                <option *ngFor=\"let subOrg of subOrganizationList\" [value]=\"subOrg.id\">\r\n                                    {{translate.currentLang == \"En\" ? subOrg.name:subOrg.nameAr}}\r\n                                </option>\r\n                            </select>\r\n                            <div\r\n                                *ngIf=\"(subOrganization.touched || EditUserForm.submitted) && subOrganization.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    suborganization is required\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-3\">\r\n                            <label for=\"role\">{{'user.Role' |translate}}</label>\r\n                            <div>\r\n                                <ul class=\"list-group\" tooltipPosition=\"bottom\"\r\n                                    pTooltip=\"select a role\" >\r\n    \r\n                                    <li class=\"list-group-item\" *ngFor=\"let item of rolesList\">\r\n                                        <input type=\"radio\" [(ngModel)]=\"user.roleName\" name=\"role\"\r\n                                            id=\"role\" [value]=\"item.name\" #role=\"ngModel\"/>\r\n                                        {{item.name}}                                   \r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            \r\n                        </div>\r\n    \r\n                    </div>\r\n                    <br><br>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-2\">\r\n                            <button pButton pRipple label=\"{{'Actions.Cancel' |translate}}\" icon=\"pi pi-times\" \r\n                            class=\"btn btn-info\" type=\"button\" (click)=\"hideDialog()\" value=\"cancel\"></button>                         \r\n                      </div>\r\n                      <div class=\"col-lg-2\">\r\n                        <button pButton pRipple label=\"{{'Actions.Save' |translate}}\" icon=\"pi pi-check\"\r\n                        class=\"btn btn-info\" type=\"submit\" value=\"save\"></button>\r\n                      </div>\r\n                  </div>\r\n                </fieldset>\r\n                <p-dialog [(visible)]=\"errorDialog\" [style]=\"{width: '350px'}\">\r\n                    <p-header style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n                    <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{error}}</span>\r\n                </p-dialog>\r\n            </form>\r\n        </ng-template>\r\n\r\n\r\n    </p-dialog>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Employee } from 'src/app/Shared/Models/Employee';\r\nimport { HealthCareUnit } from 'src/app/Shared/Models/HealthCareUnit';\r\nimport { RegisterModel } from 'src/app/Shared/Models/registerModel';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { EmployeeService } from 'src/app/Shared/services/employee.service';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\nimport { Equipment } from 'src/app/Shared/Models/Equipment';\r\nimport { ConfirmationService, Message, MessageService } from 'primeng/api';\r\nimport { Role } from 'src/app/Shared/Models/Role';\r\nimport { element } from 'protractor';\r\nimport { THIS_EXPR, ThrowStmt } from '@angular/compiler/src/output/output_ast';\r\nimport { healthDirectory } from 'src/app/Shared/Models/healthDirectory';\r\nimport { HealthDistrict } from 'src/app/Shared/Models/HealthDistrict';\r\nimport { Organization } from 'src/app/Shared/Models/Organization';\r\nimport { OrganizationService } from 'src/app/Shared/services/organization.service';\r\nimport { SubSubOrganizationService } from 'src/app/Shared/services/sub-organization.service';\r\nimport { SubOrganization } from 'src/app/Shared/Models/subOrganization';\r\nimport { Paging } from 'src/app/Shared/Models/Paging';\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n\r\n  users: User[];\r\n  selectedUsers: User[];\r\n  userDialog: boolean;\r\n  user: User;\r\n  currentUser: User;\r\n  registerModel: RegisterModel;\r\n  submitted: boolean;\r\n  healthCareUnitsList: HealthCareUnit[];\r\n  userId: Number;\r\n  role: Role;\r\n  rolesList: Role[];\r\n  dirctoryRoleList: Role[]\r\n  districts: User[]\r\n  directories: User[]\r\n  equipments: Equipment[];\r\n  error: string;\r\n  msgs: Message[] = [];\r\n  TecniciensList: User[]\r\n  hospitals: User[];\r\n  organizations: User[]\r\n  healthUnits: HealthCareUnit[];\r\n  healthDistricts: HealthDistrict[];\r\n  healthDirectories: healthDirectory[];\r\n  organizationList: Organization[];\r\n  errorDialog: boolean = false;\r\n  subOrganizationList: SubOrganization[];\r\n  TechnicianRoleList: Role[];\r\n  HospitalRoleList: Role[];\r\n  page: Paging;\r\n  count: number;\r\n  constructor(private userService: UserService, private sharedService: SharedService,\r\n    private router: Router, private translate: TranslateService,\r\n    private equipmentservice: EquipmentService,\r\n    private confirmationService: ConfirmationService,\r\n    private organizationService: OrganizationService,\r\n    private subOrganizationService: SubSubOrganizationService,\r\n    private messageservice: MessageService) { this.currentUser = this.userService.currentUserValue; }\r\n\r\n  ngOnInit() {\r\n    // console.log(\"iiiii\")\r\n\r\n    this.dirctoryRoleList = []\r\n    this.TecniciensList = []\r\n    this.HospitalRoleList = []\r\n\r\n    this.districts = []\r\n    this.directories = []\r\n    this.hospitals = []\r\n    this.organizations = []\r\n    this.getAll();\r\n    // this.page = {\r\n    //   pagenumber: 1,\r\n    //   pagesize: 10\r\n    // }\r\n    // this.userService.getUserscount().subscribe(data => {\r\n    //   this.count = data\r\n    // })\r\n    // this.userService.getAllUserswithpaging(this.page).subscribe(data => {\r\n    //   this.users = data;\r\n    // })\r\n    this.userService.createRoles().subscribe(data => {\r\n      data = data\r\n      //  console.log(\"data\", data) \r\n    });\r\n    this.sharedService.getAllunits().subscribe(data => { this.healthCareUnitsList = data });\r\n    this.user = {\r\n      id: '',\r\n      userName: '',\r\n      userNameAr: '',\r\n      email: '',\r\n      password: '',\r\n      roleName: '',\r\n      healthdirId: 0,\r\n      suborganizationId: 0,\r\n      token: '',\r\n      healthDistrictId: 0,\r\n      healthCareUnitId: 0,\r\n      organizationId: 0,\r\n      supplierId: 0,\r\n      organizationName: ''\r\n    }\r\n    this.role =\r\n    {\r\n      id: '',\r\n      name: ''\r\n    }\r\n  }\r\n  openNew(user) {\r\n    this.dirctoryRoleList = []\r\n    this.TecniciensList = []\r\n    this.HospitalRoleList = []\r\n    // console.log(user,\"user\");\r\n    this.sharedService.getAllunits().subscribe(data => { this.healthUnits = data });\r\n    this.subOrganizationService.getAllSubOrganization().subscribe(data => {\r\n      this.subOrganizationList = data\r\n      //  console.log(this.subOrganizationList)\r\n    });\r\n    this.organizationService.getAllOrganization().subscribe(data => {\r\n      this.organizationList = data\r\n      //  console.log(\"orgs\", this.organizationList)\r\n    });\r\n    this.sharedService.getAllHealthDistrict().subscribe(data => { this.healthDistricts = data });\r\n    this.sharedService.getAllHealthDirectories().subscribe(data => { this.healthDirectories = data });\r\n    this.submitted = false;\r\n    this.userDialog = true;\r\n    this.user = user;\r\n    // console.log(\"after function\");\r\n    this.userService.getRoles().subscribe(data => {\r\n      this.rolesList = data\r\n      //  console.log(\"roles\", data)\r\n      if (this.currentUser.roleName == 'Admin' || this.currentUser.roleName == 'HeadQuarter') {\r\n        this.rolesList = this.rolesList\r\n\r\n      }\r\n    })\r\n    if (this.currentUser.roleName == 'Governorate') {\r\n      // console.log(\"gov\")\r\n\r\n      this.userService.getRoles().subscribe(data => {\r\n        this.rolesList = data\r\n        // console.log(this.rolesList)\r\n        this.rolesList.forEach(element => {\r\n          if (element.name == 'City') {\r\n\r\n            this.dirctoryRoleList.push(element)\r\n            // console.log(element.name,this.dirctoryRoleList,\"ttttttttttttttt\")\r\n          }\r\n        })\r\n        this.rolesList = this.dirctoryRoleList\r\n      })\r\n\r\n    }\r\n    if (this.currentUser.roleName == 'Hospital') {\r\n      this.userService.getRoles().subscribe(data => {\r\n        this.rolesList = data\r\n        // console.log(this.rolesList)\r\n\r\n        this.rolesList.forEach(element => {\r\n          if (element.name == 'Technician') {\r\n            this.TechnicianRoleList.push(element)\r\n          }\r\n        })\r\n        this.rolesList = this.TechnicianRoleList\r\n      })\r\n    }\r\n\r\n    if (this.currentUser.roleName == 'City') {\r\n      this.userService.getRoles().subscribe(data => {\r\n        this.rolesList = data\r\n\r\n        this.rolesList.forEach(element => {\r\n          if (element.name == 'Hospital') {\r\n            this.HospitalRoleList.push(element)\r\n          }\r\n        })\r\n        this.rolesList = this.HospitalRoleList\r\n      })\r\n    }\r\n\r\n    this.equipmentservice.getAllEquipments().subscribe(data => { this.equipments = data });\r\n  }\r\n  getAll() {\r\n    if (this.currentUser.roleName == 'Admin' || this.currentUser.roleName == 'HeadQuarter') {\r\n      this.userService.getUsers().subscribe(data => {\r\n        this.users = data\r\n        // console.log(data)\r\n      });\r\n    }\r\n    if (this.currentUser.roleName == 'Governorate') {\r\n      this.userService.getUsers().\r\n        subscribe(data => {\r\n          // console.log(\"one\")\r\n          this.users = data,\r\n\r\n            this.users.forEach(element => {\r\n              if (element.healthdirId == this.currentUser.healthdirId) {\r\n                // console.log(element, element.healthdirId, element.healthDistrictId\r\n                // )\r\n                this.directories.push(element)\r\n              }\r\n              if (this.currentUser.roleName == 'Governorate') {\r\n                this.users = this.directories\r\n                // console.log(this.directories)\r\n              }\r\n            })\r\n        });\r\n    }\r\n    if (this.currentUser.roleName == 'Hospital') {\r\n      // console.log(this.currentUser)\r\n      // console.log(\"hospital\")\r\n      this.userService.getUsers().\r\n        subscribe(data => {\r\n          this.users = data,\r\n            this.users.forEach(element => {\r\n              if (element.healthCareUnitId == this.currentUser.healthCareUnitId && (element.roleName == 'Technician' || this.currentUser.roleName == 'Hospital')) {\r\n                this.hospitals.push(element)\r\n              }\r\n              if (this.currentUser.roleName == 'Hospital') {\r\n                this.users = this.hospitals\r\n                // console.log(this.hospitals)\r\n              }\r\n            })\r\n        });\r\n    }\r\n    if (this.currentUser.roleName == 'City') {\r\n      this.userService.getUsers().\r\n        subscribe(data => {\r\n          this.users = data,\r\n            this.users.forEach(element => {\r\n              //  console.log(element.healthDistrictId, this.currentUser.healthDistrictId)\r\n              if (element.healthDistrictId == this.currentUser.healthDistrictId) {\r\n                this.districts.push(element)\r\n              }\r\n              if (this.currentUser.roleName == 'City') {\r\n                this.users = this.districts\r\n              }\r\n            })\r\n        });\r\n    }\r\n    if (this.currentUser.roleName == 'Technician') {\r\n      this.userService.getUsers().\r\n        subscribe(data => {\r\n          this.users = data,\r\n            this.users.forEach(element => {\r\n              // console.log(element.userId, this.currentUser.userId)\r\n              if (element.id == this.currentUser.id) {\r\n                this.TecniciensList.push(element)\r\n                this.users = this.TecniciensList\r\n                // console.log(this.TecniciensList)\r\n              }\r\n\r\n            })\r\n        });\r\n    }\r\n    if (this.currentUser.roleName == 'Organization') {\r\n      this.userService.getUsers().\r\n        subscribe(data => {\r\n          this.users = data,\r\n            this.users.forEach(element => {\r\n              //  console.log(element.healthDistrictId, this.currentUser.healthDistrictId)\r\n              if (element.organizationId == this.currentUser.organizationId) {\r\n                this.organizations.push(element)\r\n              }\r\n              if (this.currentUser.roleName == 'Organization') {\r\n                this.users = this.organizations\r\n              }\r\n            })\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  deleteUser(id: string) {\r\n    this.userService.deleteUser(id).subscribe(data => {\r\n      // console.log(data),\r\n      this.getAll()\r\n    })\r\n  }\r\n  confirmDelete(userId, userName) {\r\n    console.log(\"delete\")\r\n    if (this.translate.currentLang == 'En') {\r\n      this.confirmationService.confirm({\r\n        message: 'Do you want to delete ' + userName + '?',\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        accept: () => {\r\n          this.deleteUser(userId)\r\n          this.messageservice.add({ severity: 'info', detail: 'Record deleted' });\r\n        },\r\n        reject: () => {\r\n          this.messageservice.add({ severity: 'info', detail: 'Delete rejected' });\r\n        }\r\n      });\r\n    }\r\n    else if (this.translate.currentLang == 'Ar') {\r\n      this.confirmationService.confirm({\r\n        message: 'هل انت متأكد من مسح' + userName + 'من القائمه ',\r\n        header: 'تاكيد عملية المسح',\r\n        icon: 'pi pi-info-circle',\r\n\r\n        accept: () => {\r\n          this.deleteUser(userId)\r\n          this.messageservice.add({ severity: 'info', detail: 'تم المسح' });\r\n\r\n        },\r\n        reject: () => {\r\n          this.messageservice.add({ severity: 'info', detail: 'رفض عمليه المسح' });\r\n        },\r\n        acceptLabel: \"نعم\",\r\n        rejectLabel: \"لا\",\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  updateUser() {\r\n    this.submitted = true;\r\n    this.editUser(this.user);\r\n\r\n  }\r\n\r\n  editUser(user: User) {\r\n    // console.log(\"user\",this.user)\r\n    this.userService.updateRole(user).subscribe(data => {\r\n      // console.log(data)\r\n      this.hideDialog()\r\n    },\r\n      error => {\r\n        this.errorDialog = true,\r\n          this.error = error.error.message;\r\n\r\n      });\r\n  }\r\n  hideDialog() {\r\n    this.userDialog = false;\r\n  }\r\n  loadDistricts(DirectoryId: number) {\r\n    this.sharedService.getAllHealthDistricts(DirectoryId).subscribe(data => {\r\n      this.healthDistricts = data\r\n      // console.log(DirectoryId)\r\n    });\r\n  }\r\n}","<p-dialog [(visible)]=\"userDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\"\r\n    (onHide)=\"hideDialog()\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <h3 class=\"title\">{{'user.AddNewUser' |translate}}</h3>\r\n            </div>\r\n            <div>\r\n                <img src=\"./../assets/images/user.jpg\" class=\"img\" [alt]=\"product\">\r\n            </div>\r\n        </div>\r\n        <form (ngSubmit)=\"AddUserForm.valid && saveUser()\" #AddUserForm=\"ngForm\">\r\n\r\n            <fieldset class=\"tab\">\r\n                <div class=\"row\">\r\n\r\n                    <div class=\"col-md-3\">\r\n                        <label for=\"username22\">{{'user.UserNameEn'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"username22\" name=\"username33\"\r\n                            [(ngModel)]=\"user.userName\" required\r\n                            [class.is-invalid]=\"Name22.touched && Name22.errors || AddUserForm.submitted\"\r\n                            [class.is-valid]=\"Name22.valid && AddUserForm.submitted\" #Name22=\"ngModel\"\r\n                            pTooltip=\"Please,Enter An UserName in English\" tooltipPosition=\"bottom\">\r\n                        <div *ngIf=\"(Name22.touched || AddUserForm.submitted) && Name22.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                English name is required\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-3\">\r\n                        <label for=\"USERname\">{{'user.arabicUserName'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"USERname\" name=\"USERname\"\r\n                            placeholder=\"{{'user.arabicUserName'|translate}}\" [(ngModel)]=\"user.userNameAr\" required\r\n                            [class.is-invalid]=\"arname.touched && arname.errors || AddUserForm.submitted\"\r\n                            [class.is-valid]=\"arname.valid && AddUserForm.submitted\" #arname=\"ngModel\"\r\n                            pTooltip=\"Please,Enter An user Name in Arabic\" tooltipPosition=\"bottom\">\r\n                        <div *ngIf=\"(arname.touched || AddUserForm.submitted) && arname.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                Arabic name is required\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-3 form-group\">\r\n                        <label for=\"email\">{{'user.Email' |translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"email\" #email=\"ngModel\"\r\n                            placeholder=\"{{'user.Email' |translate}}\" name=\"email\"\r\n                            [class.is-invalid]=\"(email.touched && email.errors) || AddUserForm.submitted\"\r\n                            [class.is-valid]=\"email.valid && AddUserForm.submitted\" [(ngModel)]=\"user.email\" required>\r\n                        <div *ngIf=\"(email.touched || AddUserForm.submitted) && email.errors?.required\">\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"col-md-3 form-group\">\r\n                        <label for=\"password\">{{'user.Passsword' |translate}}</label>\r\n                        <input type=\"password\" class=\"form-control\" id=\"password\"\r\n                            placeholder=\"{{'user.Passsword' |translate}}\" name=\"password\" unmask=\"true\"\r\n                            [class.is-invalid]=\"(password.touched && password.errors) || AddUserForm.submitted\"\r\n                            [class.is-valid]=\"password.valid && AddUserForm.submitted\" #password=\"ngModel\"\r\n                            [(ngModel)]=\"user.password\" required>\r\n                        <div *ngIf=\"(password.touched || AddUserForm.submitted) && password.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                Password is required\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-3 form-group\">\r\n                        <label for=\"mobile\">{{'employee.Mobile'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"mobile\" [ngModelOptions]=\"{standalone: true}\"\r\n                            placeholder=\"{{'employee.Mobile'|translate}}\" [(ngModel)]=\"user.mobile\"\r\n                            pTooltip=\"Please,Enter A Mobile Number\" tooltipPosition=\"bottom\">\r\n                    </div>\r\n\r\n                    <div class=\"col-md-3 form-group\">\r\n                        <label for=\"phone\">{{'employee.Phone'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"phone\" [ngModelOptions]=\"{standalone: true}\"\r\n                            placeholder=\"{{'employee.Mobile'|translate}}\" [(ngModel)]=\"user.phone\"\r\n                            pTooltip=\"Please,Enter A Phone Number\" tooltipPosition=\"bottom\">\r\n                    </div>\r\n\r\n                    <div class=\"col-md-3 form-group\">\r\n                        <label for=\"code\">{{'employee.EmployeeCode'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"employeeCode\"\r\n                            placeholder=\"{{'employee.EmployeeCode'|translate}}\" #Code=\"ngModel\" name=\"employeeCode\"\r\n                            [(ngModel)]=\"user.employeeCode\" required\r\n                            [class.is-invalid]=\"Code.touched && Code.errors || AddUserForm.submitted\"\r\n                            [class.is-valid]=\"Code.valid && AddUserForm.submitted\"\r\n                            pTooltip=\"Please,Enter An EmployeeCode\" tooltipPosition=\"bottom\">\r\n                        <div *ngIf=\"(Code.touched || AddUserForm.submitted) && Code.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                Code is required\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-3 form-group\">\r\n                        <label for=\"healthName\">{{'employee.healthCareUnit'|translate}}</label>\r\n                        <select class=\"form-control\" id=\"healthName\" name=\"healthName\"\r\n                            [(ngModel)]=\"user.healthCareUnitId\" #healthCareUnit=\"ngModel\"                                   \r\n                            pTooltip=\"Please,Enter A healthCareUnit\" tooltipPosition=\"bottom\">\r\n                            <option selected>--select--</option>\r\n                            <option *ngFor=\"let h of healthUnits\" [value]=\"h.id\">\r\n                                {{translate.currentLang == \"En\" ? h.healthCareUnitName:h.healthCareUnitNameAr}}\r\n                            </option>\r\n                        </select>\r\n                        <div *ngIf=\"user.roleName == 'Hospital'\">\r\n                            <div>\r\n                                <span class=\"text-danger\">\r\n                                    health CareUnit is required\r\n                                </span>\r\n                                <!-- (change)=\"onSelectUnit(user.healthCareUnitId)\" -->\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-3 form-group\">\r\n                        <label for=\"directoryName\">{{'healthCareUnit.governorate'|translate}}</label>\r\n                        <select class=\"form-control\" id=\"directoryName\" pTooltip=\"select A directory Name\"\r\n                            tooltipPosition=\"bottom\" name=\"directoryName\" #directoryName=\"ngModel\"\r\n                            [(ngModel)]=\"user.healthdirId\" (change)=\"loadDistricts(user.healthdirId)\">\r\n                            <option>{{'healthCareUnit.directory'|translate}}</option>\r\n                            <option *ngFor=\"let h of healthDirectories\" [value]=\"h.id\">\r\n                                {{translate.currentLang == \"En\" ? h.healthDirectoryName:h.hhealthDirectoryNameAr}}\r\n                            </option>\r\n                        </select>\r\n                        <!-- <div\r\n                            *ngIf=\"(directoryName.touched || AddUserForm.submitted) && directoryName.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                nameAr is required\r\n                            </span>\r\n                        </div> -->\r\n                    </div>\r\n\r\n                    <div class=\"col-md-3 form-group\">\r\n                        <label for=\"districtName\">{{'healthCareUnit.district'|translate}}</label>\r\n                        <select class=\"form-control\" id=\"districtName\" pTooltip=\"select A district Name\"\r\n                            tooltipPosition=\"bottom\" name=\"districtName\" #districtName=\"ngModel\"\r\n                            [(ngModel)]=\"user.healthDistrictId\">\r\n                            <option>{{'healthCareUnit.district'|translate}}</option>\r\n                            <option *ngFor=\"let h of healthDistricts\" [value]=\"h.id\">\r\n                                {{translate.currentLang == \"En\" ? h.healthDistrictName:h.healthDistrictNameAr}}\r\n                            </option>\r\n                        </select>\r\n\r\n                    </div>\r\n                    <div class=\"col-md-3\">\r\n                        <label for=\"organization\">{{'healthCareUnit.organization'|translate}}</label>\r\n                        <select class=\"form-control\" id=\"organization\" pTooltip=\"select A organization Name\"\r\n                            tooltipPosition=\"bottom\" name=\"organization\" #organization=\"ngModel\"\r\n                            [(ngModel)]=\"user.organizationId\">\r\n                            <option>{{'healthUnit.organization'|translate}}</option>\r\n                            <option *ngFor=\"let org of organizationList\" [value]=\"org.id\">\r\n                                {{translate.currentLang == \"En\" ? org.name:org.nameAr}}\r\n                            </option>\r\n                        </select>\r\n\r\n                    </div>\r\n                    <div class=\"col-md-3\">\r\n                        <label for=\"suborganization\">{{\"Sidebar.SubOrganization\"| translate}}</label>\r\n                        <select class=\"form-control\" id=\"suborganization\" pTooltip=\"select A subOrganization Name\"\r\n                            tooltipPosition=\"bottom\" name=\"suborganization\" #subOrganization=\"ngModel\"\r\n                            [(ngModel)]=\"user.suborganizationId\">\r\n\r\n                            <option *ngFor=\"let subOrg of subOrganizationList\" [value]=\"subOrg.id\">\r\n                                {{translate.currentLang == \"En\" ? subOrg.name:subOrg.nameAr}}\r\n                            </option>\r\n                        </select>\r\n\r\n                    </div>\r\n                    <div class=\"col-md-3\">\r\n                        <label for=\"role\">{{'user.Role' |translate}}</label>\r\n                        <div>\r\n                            <ul class=\"list-group\" tooltipPosition=\"bottom\" pTooltip=\"select a role\">\r\n\r\n                                <li class=\"list-group-item\" *ngFor=\"let item of rolesList\">\r\n                                    <input type=\"radio\" [(ngModel)]=\"user.roleName\" name=\"role\" id=\"role\"\r\n                                        [value]=\"item.name\" #role=\"ngModel\" />\r\n                                    {{item.name}}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"col-md-3\" *ngIf=\"user.roleName =='Supplier' \">\r\n                        <label for=\"supplier\">{{'user.supplier' |translate}}</label>\r\n                        <div>\r\n                            <ul class=\"list-group\" tooltipPosition=\"bottom\" pTooltip=\"select a supplier\">\r\n\r\n                                <li class=\"list-group-item\" *ngFor=\"let item of suppliersList\">\r\n                                    <input type=\"radio\" [(ngModel)]=\"user.supplierId\" name=\"supplier\" id=\"supplier\"\r\n                                        [value]=\"item.id\" #role=\"ngModel\" />\r\n                                    {{item.supplierName}}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br><br>\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-2\">\r\n                        <button pButton pRipple label=\"{{'Actions.Cancel' |translate}}\" icon=\"pi pi-times\"\r\n                            class=\"btn btn-info\" type=\"button\" (click)=\"hideDialog()\" value=\"cancel\"></button>\r\n                    </div>\r\n                    <div class=\"col-lg-2\">\r\n                        <button pButton pRipple label=\"{{'Actions.Save' |translate}}\" icon=\"pi pi-check\"\r\n                            class=\"btn btn-info\" type=\"submit\" value=\"save\"></button>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <p-dialog [(visible)]=\"errorDialog\" [style]=\"{width: '350px'}\">\r\n                <p-header style=\"color: rgb(181, 4, 4);\"> {{'General.Error'|translate}} </p-header>\r\n                <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{error}}</span>\r\n            </p-dialog>\r\n        </form>\r\n\r\n    </ng-template>\r\n\r\n</p-dialog>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Employee } from 'src/app/Shared/Models/Employee';\r\nimport { RegisterModel } from 'src/app/Shared/Models/registerModel';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Equipment } from 'src/app/Shared/Models/Equipment';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { HealthCareUnit } from 'src/app/Shared/Models/HealthCareUnit';\r\nimport { HealthDistrict } from 'src/app/Shared/Models/HealthDistrict';\r\nimport { healthDirectory } from 'src/app/Shared/Models/healthDirectory';\r\nimport { Organization } from 'src/app/Shared/Models/Organization';\r\nimport { OrganizationService } from 'src/app/Shared/services/organization.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { SubSubOrganizationService } from 'src/app/Shared/services/sub-organization.service';\r\nimport { SubOrganization } from 'src/app/Shared/Models/subOrganization';\r\nimport { Role } from 'src/app/Shared/Models/Role';\r\nimport { Supplier } from 'src/app/Shared/Models/Supplier';\r\n\r\n@Component({\r\n  selector: 'app-new-user',\r\n  templateUrl: './new-user.component.html',\r\n  styleUrls: ['./new-user.component.css']\r\n})\r\nexport class NewUserComponent implements OnInit {\r\n\r\n\r\n  httpHeader = {\r\n    headers: new HttpHeaders({\r\n      'content-type': 'application/json',\r\n      'Accept': '*/*'\r\n    })\r\n  };\r\n  empsList: Employee[];\r\n  unAssignedUsers = [];\r\n  rolesList: Role[];\r\n  registerModel: RegisterModel;\r\n  user: User;\r\n  userDialog: boolean;\r\n  employee: Employee;\r\n  submitted: boolean;\r\n  uploadedFiles: any[] = [];\r\n  Equipments: Equipment[];\r\n  currentUser: User;\r\n  dirctoryRoleList: Role[]\r\n  healthUnits: HealthCareUnit[];\r\n  healthDistricts: HealthDistrict[];\r\n  healthDirectories: healthDirectory[];\r\n  organizationList: Organization[];\r\n  show = false;\r\n  error: string;\r\n  errorDialog: boolean=false\r\n  subOrganizationList: SubOrganization[]\r\n  TechnicianRoleList: Role[];\r\n  HospitalRoleList: Role[];\r\n  suppliersList:Supplier[];\r\n  constructor(private httpClient: HttpClient,\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private translate: TranslateService,\r\n    private equipmentservice: EquipmentService,\r\n    private sharedService: SharedService,\r\n    private organizationService: OrganizationService,\r\n    private subOrganizationService: SubSubOrganizationService,\r\n    private messageService: MessageService) { this.currentUser = this.userService.currentUserValue; }\r\n\r\n  ngOnInit() {\r\n\r\n    this.dirctoryRoleList = []\r\n    this.TechnicianRoleList = []\r\n    this.HospitalRoleList = []\r\n    this.user = {\r\n      id: '',\r\n      userName: '',\r\n      userNameAr: '',\r\n      email: '',\r\n      password: '',\r\n      roleName: '',\r\n      healthdirId: null,\r\n      token: '',\r\n      suborganizationId: null,\r\n      healthDistrictId: null,\r\n      healthCareUnitId: null,\r\n      organizationId: null,\r\n      supplierId:null,\r\n      organizationName:''\r\n    }\r\n\r\n    this.openNew();\r\n  }\r\n  openNew() {\r\n\r\n\r\n    this.sharedService.getAllunits().subscribe(data => { this.healthUnits = data });\r\n    this.subOrganizationService.getAllSubOrganization().subscribe(data => { this.subOrganizationList = data });\r\n    this.organizationService.getAllOrganization().subscribe(data => { this.organizationList = data });\r\n    this.sharedService.getAllHealthDistrict().subscribe(data => { this.healthDistricts = data });\r\n    this.sharedService.getAllHealthDirectories().subscribe(data => { this.healthDirectories = data });\r\n    this.sharedService.getAllSuppliers().subscribe(data=>{this.suppliersList=data,console.log(this.suppliersList)})\r\n    this.userDialog = true\r\n    this.submitted = false;\r\n    // this.userService.getUnRegisteredUsers().subscribe(data => {\r\n    //   console.log(data);\r\n    //   this.unAssignedUsers = data, console.log(data);\r\n    // });\r\n\r\n    this.userService.getRoles().subscribe(data => {\r\n      console.log(\"roleset\", data);\r\n      this.rolesList = data, console.log(\"roles\", data)\r\n\r\n      if (this.currentUser.roleName == 'Admin') {\r\n        this.rolesList = this.rolesList\r\n\r\n      }\r\n      else if (this.currentUser.roleName == 'Governorate') {\r\n        // this.dirctoryRoleList = this.rolesList.splice(1, 1, 5)\r\n        // this.rolesList = this.dirctoryRoleList\r\n        // console.log(this.dirctoryRoleList, \"dir\")\r\n        this.rolesList.forEach(element => {\r\n          if (element.name == 'City') {\r\n\r\n            this.dirctoryRoleList.push(element)\r\n            this.rolesList = this.dirctoryRoleList\r\n          }\r\n        })\r\n      }\r\n      else if (this.currentUser.roleName == 'Hospital') {\r\n        // this.dirctoryRoleList = this.rolesList.splice(3, 1, 5)\r\n        // this.rolesList = this.dirctoryRoleList\r\n        // console.log(this.dirctoryRoleList, \"hospital\")\r\n        this.rolesList.forEach(element => {\r\n          if (element.name == 'Technician') {\r\n            this.TechnicianRoleList.push(element)\r\n            this.rolesList = this.TechnicianRoleList\r\n          }\r\n        })\r\n      }\r\n      else if (this.currentUser.roleName == 'City') {\r\n        // this.dirctoryRoleList = this.rolesList.splice(0, 1, 5)\r\n        // this.rolesList = this.dirctoryRoleList\r\n        // console.log(this.dirctoryRoleList, \"district\")\r\n        this.rolesList.forEach(element => {\r\n          if (element.name == 'Hospital') {\r\n            this.HospitalRoleList.push(element)\r\n            this.rolesList = this.HospitalRoleList\r\n          }\r\n        })\r\n      }\r\n    });\r\n    this.equipmentservice.getAllEquipments().subscribe(data => { this.Equipments = data });\r\n\r\n  }\r\n\r\n  hideDialog() {\r\n    this.userDialog = false;\r\n    this.submitted = false;\r\n    this.router.navigate(['/home/users'])\r\n  }\r\n  saveUser() {\r\n    console.log(\"inside save\");\r\n    this.submitted = true;\r\n    this.addUser();\r\n\r\n  }\r\n  addUser() {\r\n    console.log(\"user\", this.user)\r\n    this.userService.register(this.user).subscribe(data => { console.log(data), this.hideDialog() },\r\n    error => {\r\n      this.errorDialog = true,\r\n        this.error = error.error.message;\r\n    }\r\n    );\r\n  }\r\n  loadDistricts(DirectoryId: number) {\r\n    this.sharedService.getAllHealthDistricts(DirectoryId).subscribe(data => {\r\n      this.healthDistricts = data,\r\n      console.log(DirectoryId)\r\n    });\r\n  }\r\n\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Miantenance } from '../Models/Miantenance';\r\nimport { RequestStatus } from '../Models/RequestStatus';\r\nimport { SparePart } from '../Models/SparePart';\r\nimport { WorkOrder } from '../Models/WorkOrder';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WorkOrderService {\r\n  httpHeader = {\r\n    headers: new HttpHeaders({\r\n      'content-type': 'application/json',\r\n      'Accept': '*/*'\r\n    })\r\n  };\r\n  constructor(private httpClient: HttpClient, private router: Router) { }\r\n  AddWorkOrder(workorder:WorkOrder):Observable<WorkOrder>\r\n  {\r\n    return this.httpClient.post<WorkOrder>(`${environment.AddNewWorkOrder}`,workorder,this.httpHeader);\r\n  }\r\n  GetAllRequestStatus():Observable<RequestStatus[]>\r\n  {\r\n    return this.httpClient.get<RequestStatus[]>(`${environment.GetAllRequestStatus}`,this.httpHeader);\r\n  }\r\n  Delete(id:Number):Observable<any>\r\n  {\r\n    return this.httpClient.delete<any>(`${environment.deleteWorkOrder}${id}`,this.httpHeader);\r\n  }\r\n  createNewStatus():Observable<any>{\r\n    return this.httpClient.get<any>(`${environment.createNewStatus}`,this.httpHeader)\r\n  }\r\n  getAllWorkOrders():Observable<WorkOrder[]>\r\n  {\r\n    return this.httpClient.get<WorkOrder[]>(`${environment.getAllOworkOrders}`,this.httpHeader) \r\n  }\r\n  getMaintenance(id:Number):Observable<Miantenance>\r\n  {\r\n    return this.httpClient.get<Miantenance>(`${environment.GetMaintenance}${id}`,this.httpHeader) \r\n  }\r\n  getsparepart(id:Number):Observable<SparePart>\r\n  {\r\n    return this.httpClient.get<SparePart>(`${environment.GetSparePart}${id}`,this.httpHeader)\r\n  }\r\n  getWorkOrder(id:Number):Observable<WorkOrder>\r\n  {\r\n    return this.httpClient.get<WorkOrder>(`${environment.getOneWorkOrder}${id}`,this.httpHeader) \r\n  }\r\n  UpdateWorkOrder(id:Number,workorder:WorkOrder):Observable<any>\r\n  {\r\n    return this.httpClient.put<any> (`${environment.UpdateWorkOrder}${id}`,workorder,this.httpHeader) ;\r\n  }\r\n  updateMaintenance(id:Number,miantenance:Miantenance):Observable<any>\r\n  {\r\n    return this.httpClient.put<any> (`${environment.UpdateMaintenance}${id}`,miantenance,this.httpHeader) ;\r\n  }\r\n  updateSparePart(id:Number,sparePart:SparePart):Observable<any>\r\n  {\r\n    return this.httpClient.put<any> (`${environment.UpdateSparePart}${id}`,sparePart,this.httpHeader) ;\r\n  }\r\n  deleteWorkOrder(id:Number):Observable<any>\r\n  {\r\n    return this.httpClient.delete<any> (`${environment.DeleteWorkOrder}${id}`,this.httpHeader) ;\r\n  }\r\n  AddOrderWithoutRequest(workorder:WorkOrder):Observable<WorkOrder>\r\n  {\r\n    return this.httpClient.post<WorkOrder>(`${environment.AddWorkOrderWithoutRequest}`,workorder,this.httpHeader);\r\n  }\r\n  getAllOrdersWithoutRequest():Observable<WorkOrder[]>\r\n  {\r\n    return this.httpClient.get<WorkOrder[]>(`${environment.getOrdersWithoutRequest}`,this.httpHeader) \r\n  }\r\n  closeorder(id:Number):Observable<any>\r\n  {\r\n    return this.httpClient.put<any> (`${environment.Closeorder}${id}`,this.httpHeader) ;\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Vendor } from '../Models/Vendor';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VendorService {\r\n  httpHeader = {\r\n    headers: new HttpHeaders({\r\n      'content-type': 'application/json',\r\n      'Accept': '*/*'\r\n    })\r\n  };\r\n  constructor(private httpClient: HttpClient, private router: Router) { }\r\n  getAllVendors():Observable<Vendor[]>\r\n  {\r\n    return this.httpClient.get<Vendor[]>(`${environment.GetVendors}`, this.httpHeader);\r\n  }\r\n}\r\n","<div class=\"card\">\r\n    <p-messages [value]=\"msgs\"></p-messages>\r\n    <!-- <div *ngIf=\"currentUser.roleName == 'Admin'\">\r\n        <p-table #dt [value]=\"requests\" [rows]=\"10\" [paginator]=\"true\"\r\n            [globalFilterFields]=\"['serviceRequestTitle','serviceRequestCode','serviceRequestDate']\"\r\n            [(selection)]=\"selectedProducts\" [rowHover]=\"true\" dataKey=\"id\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            [showCurrentPageReport]=\"true\">\r\n\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th pSortableColumn=\"serviceRequestTitle\">{{'SeviceRequest.title'|translate}} <p-sortIcon\r\n                            field=\"serviceRequestTitle\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"serviceRequestTime\">{{'SeviceRequest.serviceRequestTime'|translate}}\r\n                        <p-sortIcon field=\"serviceRequestTime\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"serviceRequestDate\">{{'SeviceRequest.serviceRequestDate'|translate}}\r\n                        <p-sortIcon field=\"serviceRequestDate\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th>{{'Actions.Action' |translate}}</th>\r\n                </tr>\r\n                <tr>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dt.filter($event.target.value, 'serviceRequestTitle', 'contains')\"\r\n                            [value]=\"dt.filters['serviceRequestTitle']?.value\"\r\n                            placeholder=\"{{'SeviceRequest.SearchbyRequestTitle'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dt.filter($event.target.value, 'serviceRequestTime', 'contains')\"\r\n                            [value]=\"dt.filters['serviceRequestCode']?.value\"\r\n                            placeholder=\"{{'SeviceRequest.SearchbyserviceRequestTime'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dt.filter($event.target.value, 'serviceRequestDate', 'contains')\"\r\n                            [value]=\"dt.filters['serviceRequestDate']?.value\"\r\n                            placeholder=\"{{'SeviceRequest.searchbyRequestDate'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-req>\r\n                <tr>\r\n                    <td>{{req.serviceRequestTitle}}</td>\r\n                    <td>{{req.serviceRequestTime.hours}}:{{req.serviceRequestTime.minutes}}</td>\r\n                    <td>{{req.serviceRequestDate | date:'dd-MM-yyyy'}}</td>\r\n\r\n                    <td>\r\n                        <button pButton pRipple label=\"assign\" class=\"p-button-rounded p-button-info edit\"\r\n                            (click)=\"openNew(req)\"></button>\r\n                        <button *ngIf=\"currentUser.roleName == 'Admin'\" pButton pRipple icon=\"pi pi-trash\"\r\n                            class=\"p-button-rounded p-button-danger\" (click)=\"deleteRequst(req.id)\"></button>\r\n                        <button pButton pRipple label=\"close\" class=\"p-button-rounded p-button-info edit\"\r\n                            (click)=\"openNew(req)\"></button>\r\n                    </td>\r\n                </tr>\r\n\r\n            </ng-template>\r\n            <ng-template pTemplate=\"summary\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    In total there are {{requests ? requests.length : 0 }} requests.\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div> -->\r\n    <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n    <div>\r\n        <p-table #dt [value]=\"WorkOrderList\" [rows]=\"10\" styleClass=\"p-datatable-responsive-demo\" [paginator]=\"true\"\r\n            [globalFilterFields]=\"['serviceRequestTitle','serviceRequestCode','serviceRequestDate']\"\r\n            [(selection)]=\"selectedProducts\" [rowHover]=\"true\" dataKey=\"id\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            [showCurrentPageReport]=\"true\">\r\n\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th pSortableColumn=\"EquipmentId\">{{'workOrder.Equipment'|translate}} <p-sortIcon\r\n                            field=\"EquipmentId\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"RequestStatusId\">{{'workOrder.status'|translate}}\r\n                        <p-sortIcon field=\"RequestStatusId\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"workOrderDate\">{{'workOrder.Date'|translate}}\r\n                        <p-sortIcon field=\"workOrderDate\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th>{{'Actions.Action' |translate}}</th>\r\n                </tr>\r\n                <tr>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dt.filter($event.target.value, 'EquipmentId', 'contains')\"\r\n                            [value]=\"dt.filters['EquipmentId']?.value\"\r\n                            placeholder=\"{{'SeviceRequest.SearchbyRequestTitle'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dt.filter($event.target.value, 'RequestStatusId', 'contains')\"\r\n                            [value]=\"dt.filters['RequestStatusId']?.value\"\r\n                            placeholder=\"{{'SeviceRequest.SearchbyserviceRequestTime'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dt.filter($event.target.value, 'workOrderDate', 'contains')\"\r\n                            [value]=\"dt.filters['workOrderDate']?.value\"\r\n                            placeholder=\"{{'SeviceRequest.searchbyRequestDate'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-wo>\r\n                <tr>\r\n                    <td>\r\n                        {{translate.currentLang == \"En\" ? wo.equipmentName:wo.equipmentNameAr}}\r\n                    </td>\r\n                    <td>\r\n                        <span class=\"material-icons\" [ngStyle]=\"{'color': wo.color}\">fiber_manual_record</span>\r\n                        {{translate.currentLang == \"En\" ? wo.statusName:wo.statusNameAr}}\r\n                    </td>\r\n                    <td>{{wo.workOrderDate | date:'dd-MM-yyyy'}}</td>\r\n                    <td>\r\n                        <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-info edit\"\r\n                            (click)=\"openNew(wo)\"></button>\r\n                        <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\"\r\n                            (click)=\"confirmDelete(wo.id)\"></button>\r\n                        <button pButton pRipple label=\"{{'workOrder.close'|translate}}\"\r\n                            class=\"p-button-rounded p-button-info edit\" (click)=\"closeOrder(wo.id)\"></button>\r\n                    </td>\r\n                </tr>\r\n\r\n            </ng-template>\r\n            <ng-template pTemplate=\"summary\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    In total there are {{requests ? requests.length : 0 }} requests.\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n\r\n    <!--***************************************************************************-->\r\n    <div style=\"height: 50px;\"></div>\r\n\r\n    <p-toolbar styleClass=\"p-mb-4\">\r\n        <h6 style=\"color: green;\">{{'workOrder.WorkOrderforpreventiveMaintenence'|translate}}</h6>\r\n    </p-toolbar>\r\n    <p-toolbar styleClass=\"p-mb-4\">\r\n        <ng-template pTemplate=\"left\">\r\n\r\n            <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary  p-button-rounded p-mr-2 new\"\r\n                routerLink=\"/home/AddWorkOrderWithoutRequest\" pTooltip=\"Add a New workOrder\"\r\n                tooltipPosition=\"right\"></button>\r\n\r\n        </ng-template>\r\n    </p-toolbar>\r\n    <div>\r\n        <p-table #dt [value]=\"WorkOrdersWithoutRequest\" styleClass=\"p-datatable-responsive-demo\" [rows]=\"10\"\r\n            [paginator]=\"true\" [globalFilterFields]=\"['serviceRequestTitle','serviceRequestCode','serviceRequestDate']\"\r\n            [(selection)]=\"selectedProducts\" [rowHover]=\"true\" dataKey=\"id\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            [showCurrentPageReport]=\"true\">\r\n\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th pSortableColumn=\"EquipmentId\">{{'workOrder.Equipment'|translate}}<p-sortIcon\r\n                            field=\"EquipmentId\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"RequestStatusId\">{{'workOrder.status'|translate}}\r\n                        <p-sortIcon field=\"RequestStatusId\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"workOrderDate\">{{'workOrder.Date'|translate}}\r\n                        <p-sortIcon field=\"workOrderDate\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th>{{'Actions.Action' |translate}}</th>\r\n                </tr>\r\n                <tr>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dt.filter($event.target.value, 'EquipmentId', 'contains')\"\r\n                            [value]=\"dt.filters['EquipmentId']?.value\"\r\n                            placeholder=\"{{'SeviceRequest.SearchbyRequestTitle'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dt.filter($event.target.value, 'RequestStatusId', 'contains')\"\r\n                            [value]=\"dt.filters['RequestStatusId']?.value\"\r\n                            placeholder=\"{{'SeviceRequest.SearchbyserviceRequestTime'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dt.filter($event.target.value, 'workOrderDate', 'contains')\"\r\n                            [value]=\"dt.filters['workOrderDate']?.value\"\r\n                            placeholder=\"{{'SeviceRequest.searchbyRequestDate'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-wo1>\r\n                <tr>\r\n                    <td>\r\n                        {{translate.currentLang == \"En\" ? wo1.equipmentName:wo1.equipmentNameAr}}\r\n                    </td>\r\n                    <td> <span class=\"material-icons\" [ngStyle]=\"{'color': wo1.color}\">fiber_manual_record</span>\r\n                        {{translate.currentLang == \"En\" ? wo1.statusName:wo1.statusNameAr}}\r\n                    </td>\r\n\r\n                    <!-- <td>{{req.serviceRequestTime.hours}}:{{req.serviceRequestTime.minutes}}</td> -->\r\n                    <td>{{wo1.workOrderDate | date:'dd-MM-yyyy'}}</td>\r\n\r\n                    <td>\r\n                        <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-info edit\"\r\n                            (click)=\"openNewDialog(wo1)\" pTooltip=\"edit a WorkOrder\" tooltipPosition=\"top\"></button>\r\n                        <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\"\r\n                            (click)=\"confirmDelete(wo1.id)\"></button>\r\n                        <button pButton pRipple label=\"{{'workOrder.close'|translate}}\"\r\n                            class=\"p-button-rounded p-button-info edit\" (click)=\"closeOrder(wo1.id)\"></button>\r\n                    </td>\r\n                </tr>\r\n\r\n            </ng-template>\r\n            <ng-template pTemplate=\"summary\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    In total there are {{requests ? requests.length : 0 }} requests.\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n<p-dialog [(visible)]=\"workOrderDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <h3 class=\"title\">{{'workOrder.EditWOrkOrder'|translate}}</h3>\r\n            </div>\r\n            <div>\r\n                <img src=\"./../assets/images/service_request.png\" class=\"img\" [alt]=\"product\">\r\n            </div>\r\n        </div>\r\n\r\n        <!-- <img [src]=\"'assets/showcase/images/demo/product/' + product.image\" [alt]=\"product.image\" class=\"product-image\" *ngIf=\"product.image\"> -->\r\n        <form>\r\n            <p-tabView>\r\n                <p-tabPanel header=\"{{'workOrder.Details'|translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"Date\">{{'workOrder.Date'|translate}}</label>\r\n                                <input type=\"date\" pInputText id=\"Date\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"WorkOrder.workOrderDate\" required\r\n                                    autofocus />\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"priority\">{{'workOrder.Status'|translate}}</label>\r\n                                <div>\r\n                                    <div>\r\n                                        <ul class=\"list-group\">\r\n                                            <li class=\"list-group-item\" *ngFor=\"let item of statusList\">\r\n                                                <input type=\"radio\" [(ngModel)]=\"WorkOrder.requestStatusId\"\r\n                                                    name=\"status\" id=\"status\" #status=\"ngModel\" [value]=\"item.id\" />\r\n                                                {{translate.currentLang == \"En\" ? item.status:item.statusAr}}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"priority\">{{'workOrder.Priority'|translate}}</label>\r\n                                <div>\r\n                                    <ul class=\"list-group\">\r\n                                        <li class=\"list-group-item\" *ngFor=\"let item of priorities\">\r\n                                            <input type=\"radio\" [(ngModel)]=\"WorkOrder.priorityId\" name=\"Priority\"\r\n                                                id=\"Priority\" #status=\"ngModel\" [value]=\"item.id\" />\r\n                                            {{translate.currentLang == \"En\" ? item.priorityLevel:item.priorityLevelAr}}\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"Equipment\">{{'workOrder.Equipment'|translate}}</label>\r\n                                <select class=\"form-control\" id=\"EquipmentId\" name=\"EquipmentId\" #EquipmentId=\"ngModel\"\r\n                                    [(ngModel)]=\"WorkOrder.equipmentId\">\r\n                                    <option selected>--select--</option>\r\n                                    <option *ngFor=\"let e of equipmentList\" [value]=\"e.id\">\r\n                                        {{translate.currentLang == \"En\" ? e.equipmentName:e.equipmentNameAr}}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n                <p-tabPanel header=\"{{'workOrder.Maintenance'|translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"problem\">{{'workOrder.Problem'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"problem\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"maintenance.problem\" required\r\n                                    autofocus />\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"partCost\">{{'workOrder.PartCost'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"partCost\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"maintenance.partCost\" required\r\n                                    autofocus />\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"laborCost\">{{'workOrder.LaborCost'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"laborCost\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"maintenance.laborCost\" required\r\n                                    autofocus />\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n                <p-tabPanel header=\"{{'workOrder.SparePart'|translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"Code\">{{'workOrder.Code'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"Code\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"sparepart.sparePartCode\" required\r\n                                    autofocus />\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"Name\">{{'workOrder.Name'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"Name\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"sparepart.sparePartName\" required\r\n                                    autofocus />\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"NameAr\">{{'workOrder.NameAr'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"NameAr\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"sparepart.sparePartNameAr\"\r\n                                    required autofocus />\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n\r\n                <p-tabPanel header=\"{{'workOrder.Labor'|translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div>\r\n                                    <input type=\"radio\" name=\"Id\" id=\"employeeId\" (click)=\"getAllEmployees()\" />\r\n                                    {{'workOrder.Employee'|translate}}\r\n                                </div>\r\n                                <br>\r\n                                <div>\r\n                                    <select class=\"form-control\" id=\"employeeId\" name=\"employeeId\" #employeeId=\"ngModel\"\r\n                                        [(ngModel)]=\"WorkOrder.employeeId\">\r\n                                        <option selected>--select--</option>\r\n                                        <option *ngFor=\"let e of employees\" [value]=\"e.id\">\r\n                                            {{translate.currentLang == \"En\" ? e.employeeName:e.employeeNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div>\r\n                                    <input type=\"radio\" name=\"Id\" id=\"vendorId\" (click)=\"getAllVendors()\" />\r\n                                    {{'workOrder.Vendor'|translate}}\r\n                                </div>\r\n                                <br>\r\n                                <div>\r\n                                    <select class=\"form-control\" id=\"vendorId\" name=\"vendorId\" #vendorId=\"ngModel\"\r\n                                        [(ngModel)]=\"WorkOrder.vendorId\">\r\n                                        <option selected>--select--</option>\r\n                                        <option *ngFor=\"let v of vendor\" [value]=\"v.id\">\r\n                                            {{translate.currentLang == \"En\" ? v.vendorName:v.vendorNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n                <p-tabPanel header=\"{{'Actions.Attachments' |translate}}\">\r\n\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <p-fileUpload (onUpload)=\"upload($event)\" name=\"demo[]\"\r\n                                    url=\"http://localhost:51368/api/ImgUpload/\" multiple=\"multiple\"\r\n                                    accept=\".xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf\" maxFileSize=\"1000000\">\r\n                                </p-fileUpload>\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n            </p-tabView>\r\n\r\n\r\n            <div class=\"col-12\">\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\" required>\r\n                    <label class=\"form-check-label\" for=\"invalidCheck\">\r\n                        {{'workOrder.Agreetotermsandconditions'|translate}}\r\n                    </label>\r\n                    <div class=\"invalid-feedback\">\r\n                        {{'workOrder.Youmustagreebeforesubmitting'|translate}}.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"footer\">\r\n        <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\" class=\"p-button-text\"\r\n            (click)=\"hideDialog()\" value=\"cancel\"></button>\r\n        <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\" class=\"p-button-text\"\r\n            (click)=\"updateWorkOrder()\" value=\"save\"></button>\r\n\r\n\r\n    </ng-template>\r\n</p-dialog>\r\n\r\n<!--*******************************************************************************-->\r\n<p-dialog [(visible)]=\"workOrderDialogWithoutRequest\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <h3 class=\"title\">{{'workOrder.EditWOrkOrderforNoRequest'|translate}}</h3>\r\n            </div>\r\n            <div>\r\n                <img src=\"./../assets/images/service_request.png\" class=\"img\" [alt]=\"product\">\r\n            </div>\r\n        </div>\r\n\r\n        <!-- <img [src]=\"'assets/showcase/images/demo/product/' + product.image\" [alt]=\"product.image\" class=\"product-image\" *ngIf=\"product.image\"> -->\r\n        <form>\r\n            <p-tabView>\r\n                <p-tabPanel header=\"{{'workOrder.Details'|translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"Date\">{{'workOrder.Date'|translate}}</label>\r\n                                <input type=\"date\" pInputText id=\"Date\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\"\r\n                                    [(ngModel)]=\"OrdersWithoutRequest.workOrderDate\" required autofocus />\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"priority\">{{'workOrder.Status'|translate}}</label>\r\n                                <div>\r\n                                    <div>\r\n                                        <ul class=\"list-group\">\r\n                                            <li class=\"list-group-item\" *ngFor=\"let item of statusList\">\r\n                                                <input type=\"radio\" [(ngModel)]=\"OrdersWithoutRequest.requestStatusId\"\r\n                                                    name=\"status\" id=\"status\" #status=\"ngModel\" [value]=\"item.id\" />\r\n                                                {{translate.currentLang == \"En\" ? item.status:item.statusAr}}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"priority\">{{'workOrder.Priority'|translate}}</label>\r\n                                <div>\r\n                                    <ul class=\"list-group\">\r\n                                        <li class=\"list-group-item\" *ngFor=\"let item of priorities\">\r\n                                            <input type=\"radio\" [(ngModel)]=\"OrdersWithoutRequest.priorityId\"\r\n                                                name=\"Priority\" id=\"Priority\" #status=\"ngModel\" [value]=\"item.id\" />\r\n                                            {{translate.currentLang == \"En\" ? item.priorityLevel:item.priorityLevelAr}}\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"Equipment\">{{'workOrder.Equipment'|translate}}</label>\r\n                                <select class=\"form-control\" id=\"EquipmentId\" name=\"EquipmentId\" #EquipmentId=\"ngModel\"\r\n                                    [(ngModel)]=\"OrdersWithoutRequest.equipmentId\">\r\n                                    <option selected>--select--</option>\r\n                                    <option *ngFor=\"let e of equipmentList\" [value]=\"e.id\">\r\n                                        {{translate.currentLang == \"En\" ? e.equipmentName:e.equipmentNameAr}}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n                <p-tabPanel header=\"{{'workOrder.Maintenance'|translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"problem\">{{'workOrder.Problem'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"problem\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"maintenance.problem\" required\r\n                                    autofocus />\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"partCost\">{{'workOrder.PartCost'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"partCost\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"maintenance.partCost\" required\r\n                                    autofocus />\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"laborCost\">{{'workOrder.LaborCost'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"laborCost\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"maintenance.laborCost\" required\r\n                                    autofocus />\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n                <p-tabPanel header=\"{{'workOrder.SparePart'|translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"Code\">{{'workOrder.Code'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"Code\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"sparepart.sparePartCode\" required\r\n                                    autofocus />\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"Name\">{{'workOrder.Name'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"Name\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"sparepart.sparePartName\" required\r\n                                    autofocus />\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"NameAr\">{{'workOrder.NameAr'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"NameAr\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"sparepart.sparePartNameAr\"\r\n                                    required autofocus />\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n\r\n                <p-tabPanel header=\"{{'workOrder.Labor'|translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div>\r\n                                    <input type=\"radio\" name=\"Id\" id=\"employeeId\" (click)=\"getAllEmployees()\" />\r\n                                    {{'workOrder.Employee'|translate}}\r\n                                </div>\r\n                                <br>\r\n                                <div>\r\n                                    <select class=\"form-control\" id=\"employeeId\" name=\"employeeId\" #employeeId=\"ngModel\"\r\n                                        [(ngModel)]=\"OrdersWithoutRequest.employeeId\">\r\n                                        <option selected>--select--</option>\r\n                                        <option *ngFor=\"let e of employees\" [value]=\"e.id\">\r\n                                            {{translate.currentLang == \"En\" ? e.employeeName:e.employeeNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div>\r\n                                    <input type=\"radio\" name=\"Id\" id=\"vendorId\" (click)=\"getAllVendors()\" />\r\n                                    {{'workOrder.Vendor'|translate}}\r\n                                </div>\r\n                                <br>\r\n                                <div>\r\n                                    <select class=\"form-control\" id=\"vendorId\" name=\"vendorId\" #vendorId=\"ngModel\"\r\n                                        [(ngModel)]=\"OrdersWithoutRequest.vendorId\">\r\n                                        <option selected>--select--</option>\r\n                                        <option *ngFor=\"let v of vendor\" [value]=\"v.id\">\r\n                                            {{translate.currentLang == \"En\" ? v.vendorName:v.vendorNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n                <p-tabPanel header=\"{{'Actions.Attachments' |translate}}\">\r\n\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <p-fileUpload (onUpload)=\"upload($event)\" name=\"demo[]\"\r\n                                    url=\"http://localhost:51368/api/ImgUpload/\" multiple=\"multiple\"\r\n                                    accept=\".xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf\" maxFileSize=\"1000000\">\r\n                                </p-fileUpload>\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n            </p-tabView>\r\n\r\n\r\n            <div class=\"col-12\">\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\" required>\r\n                    <label class=\"form-check-label\" for=\"invalidCheck\">\r\n                        {{'workOrder.Agreetotermsandconditions'|translate}}\r\n                    </label>\r\n                    <div class=\"invalid-feedback\">\r\n                        {{'workOrder.Youmustagreebeforesubmitting'|translate}}.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"footer\">\r\n        <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\" class=\"p-button-text\"\r\n            (click)=\"hideDialogWithoutRequest()\" value=\"cancel\"></button>\r\n        <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\" class=\"p-button-text\"\r\n            (click)=\"updateWorkOrderWithoutRequest()\" value=\"save\"></button>\r\n\r\n\r\n    </ng-template>\r\n</p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { Equipment } from 'src/app/Shared/Models/Equipment';\r\nimport { healthDirectory } from 'src/app/Shared/Models/healthDirectory';\r\nimport { RequestService } from 'src/app/Shared/Models/RequstService';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\nimport { RequestServiceService } from 'src/app/Shared/services/request-service.service';\r\nimport { EmployeeService } from 'src/app/Shared/services/employee.service';\r\nimport { VendorService } from 'src/app/Shared/services/vendor.service';\r\nimport {WorkOrderService} from 'src/app/Shared/services/work-order.service';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { AddWorkOrderComponent } from 'src/app/Components/work-order-list/add-WorkOrder/add-work-order/add-work-order.component';\r\nimport { WorkOrder } from 'src/app/Shared/Models/WorkOrder';\r\nimport { Vendor } from 'src/app/Shared/Models/Vendor';\r\n\r\nimport { Miantenance } from 'src/app/Shared/Models/Miantenance';\r\nimport { SparePart } from 'src/app/Shared/Models/SparePart';\r\nimport { Priority } from 'src/app/Shared/Models/Priority';\r\nimport { RequestStatus } from 'src/app/Shared/Models/RequestStatus';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport {ConfirmationService,Message} from 'primeng/api';\r\n@Component({\r\n  selector: 'app-work-order-list',\r\n  templateUrl: './work-order-list.component.html',\r\n  styleUrls: ['./work-order-list.component.scss']\r\n})\r\nexport class WorkOrderListComponent implements OnInit {\r\n  workOrderDialog: boolean;\r\n  workOrderDialogWithoutRequest:boolean;\r\n  // roleName:string=''\r\n  //AllRequests: RequestService[];\r\n  equipments: Equipment[];\r\n  requestObj: RequestService;\r\n  selectedProducts: RequestService[];\r\n  submitted: boolean;\r\n  currentUser: User;\r\n  userFromApi: User;\r\n  WorkOrderList:WorkOrder[];\r\n  WorkOrder:WorkOrder;\r\n  Equipment:Equipment;\r\n  vendor:Vendor[];\r\n  users:User[];\r\n  maintenance: Miantenance;\r\n  sparepart: SparePart;\r\n  dirId: Number;\r\n  maintenanceId:Number;\r\n  sparepartId:Number;\r\n  directories: healthDirectory[];\r\n  requests: RequestService[];\r\n  statusList:RequestStatus[];\r\n  priorities:Priority[];\r\n  WorkOrdersWithoutRequest:WorkOrder[];\r\n  OrdersWithoutRequest:WorkOrder;\r\n  equipmentList:Equipment[];\r\n  msgs: Message[] = [];\r\n\r\n  constructor(private router: Router,\r\n    private requestService: RequestServiceService,\r\n    private equipmentService: EquipmentService,\r\n    private translate:TranslateService,\r\n    public dialogService: DialogService,\r\n    private workOrderService:WorkOrderService,\r\n    private employeeService: EmployeeService,\r\n    private vendorService: VendorService,\r\n    private sharedService:SharedService,\r\n    private userService:UserService,\r\n    private confirmationService: ConfirmationService) { this.currentUser = this.userService.currentUserValue; }\r\n\r\n  ngOnInit() {\r\n    this.getAll();   \r\n    this.getAllOrdersWithoutRequest();\r\n   // this.equipmentService.getAllEquipments().subscribe(data => this.equipments = data, console.log)\r\n    this.WorkOrder = {\r\n      id: 0,\r\n      workOrderDate: new Date,\r\n      priorityId: 0,\r\n      userId: '',\r\n      vendorId: 0,\r\n      requestStatusId: 0,\r\n      ServiceRequestId: 0,\r\n      maintenanceId: 0,\r\n      sparePartId: 0,\r\n      EquipmentId:0,\r\n      StatusName:'',\r\n      StatusNameAr:'',\r\n      EquipmentName:'',\r\n      EquipmentNameAr:''\r\n    } \r\n    this.maintenance = {\r\n      id: 0,\r\n      problem: '',\r\n      partCost: 0.00,\r\n      laborCost: 0.00\r\n    };\r\n    this.sparepart = {\r\n      id: 0,\r\n      sparePartName: '',\r\n      sparePartNameAr: '',\r\n      sparePartCode: ''\r\n    };\r\n  }\r\n    getAll() {\r\n      this.workOrderService.getAllWorkOrders().subscribe(data=>{this.WorkOrderList=data});\r\n  }\r\n//   getAll() {\r\n//     console.log(\"currentUser\", this.currentUser.roleName)\r\n//     if (this.currentUser.roleName == 'Admin' ||this.currentUser.roleName ==  'Minister' ||this.currentUser.roleName ==  'Technician') {\r\n// console.log(\"first\")\r\n//       this.requestService.getAllserviceRequests().subscribe(data => {\r\n//         this.AllRequests = data,\r\n//           this.AllRequests.forEach(element => {\r\n//             if (element.employeeEmail == this.currentUser.email) {\r\n//               this.FilteredRequestsBycurrentUser.push(element)\r\n//               console.log(\"AllRequestsOfTechBefore\", this.FilteredRequestsBycurrentUser)\r\n//             }\r\n//             if (this.currentUser.roleName == 'Admin' || 'Minister') {\r\n//               this.AllRequests = this.AllRequests\r\n//             }\r\n//             else if (this.currentUser.roleName == 'Technician') {\r\n//               console.log(\"AllRequestsOfTechAfterRole\", this.FilteredRequestsBycurrentUser)\r\n\r\n//               this.AllRequests = this.FilteredRequestsBycurrentUser\r\n//             }\r\n\r\n//           });\r\n//         console.log(data)\r\n//       });\r\n\r\n\r\n//     }\r\n//     if (this.currentUser.roleName == 'Directorate') {\r\n//       console.log(\"In Directorate\", this.currentUser)\r\n//       this.requestService.getAllserviceRequests().subscribe(data => {\r\n//         this.AllRequests = data,\r\n//           this.AllRequests.forEach(element => {\r\n//             if (element.employeeEmail == this.currentUser.email) {\r\n//               this.requestsByDirectoryId.push(element)\r\n//               console.log(\"AllRequestsOfdirectorateBefore\", this.requestsByDirectoryId)\r\n//             }\r\n//             if (this.currentUser.roleName == 'Directorate') {\r\n//               this.AllRequests = this.requestsByDirectoryId\r\n//             }\r\n\r\n//           });\r\n//         console.log(\"ay7aga\", data, \"email\", this.currentUser)\r\n//       });\r\n//     }\r\n\r\n//     if (this.currentUser.roleName == 'District') {\r\n//       console.log(\"in district\", this.currentUser)\r\n//       this.requestService.getAllserviceRequests().subscribe(data => {\r\n//         this.AllRequests = data,\r\n//           this.AllRequests.forEach(element => {\r\n//             if (element.employeeEmail == this.currentUser.email) {\r\n//               this.requestsByDistrictId.push(element)\r\n//               console.log(\"AllRequestsOf district Before\", this.requestsByDistrictId)\r\n//             }\r\n//             if (this.currentUser.roleName == 'District') {\r\n//               this.AllRequests = this.requestsByDistrictId\r\n//             }\r\n\r\n//           });\r\n//         console.log(data, this.currentUser)\r\n//       });\r\n\r\n//     }\r\n//   }\r\ngetMaintenance()\r\n{\r\n  //this.workOrderService.getMaintenance().subscribe(data=>{this.maintenance=data});\r\n}\r\ngetAllEquipments()\r\n{\r\n  this.equipmentService.getAllEquipments().subscribe(data=>{this.equipmentList=data})\r\n}\r\nopenNew(wo) {\r\n  this.workOrderDialog = true\r\n  this.submitted = false;\r\n  this.WorkOrder = wo;\r\n  console.log(\"from open New\",this.WorkOrder);\r\n  this.maintenanceId=this.WorkOrder.maintenanceId;\r\n  this.sparepartId=this.WorkOrder.sparePartId;\r\n  this.getmaintenance(this.maintenanceId);\r\n  this.getsparepart(this.sparepartId);\r\n  // this.getAllEmployees();\r\n  this.getAllVendors();\r\n  this.getstatus();\r\n  this.getPriopities();\r\n  this.getAllEquipments();\r\n  // console.log(\"mmmm\",this.maintenance);\r\n}\r\nopenNewDialog(wo1)\r\n{\r\n  this.workOrderDialogWithoutRequest = true\r\n  this.submitted = false;\r\n  this.OrdersWithoutRequest=wo1;\r\n  console.log(\"from openNewDialog\",this.OrdersWithoutRequest);\r\n  this.maintenanceId=this.OrdersWithoutRequest.maintenanceId;\r\n  this.sparepartId=this.OrdersWithoutRequest.sparePartId;\r\n  this.getmaintenance(this.maintenanceId);\r\n  this.getsparepart(this.sparepartId);\r\n  this.getAllUsers();\r\n  this.getAllVendors();\r\n  this.getstatus();\r\n  this.getPriopities();\r\n  this.getAllEquipments();\r\n}\r\ngetAllOrdersWithoutRequest()\r\n{\r\n  this.workOrderService.getAllOrdersWithoutRequest().subscribe(data=>{this.WorkOrdersWithoutRequest=data});\r\n}\r\ngetmaintenance(id)\r\n{\r\n  this.workOrderService.getMaintenance(id).subscribe(data=>{this.maintenance=data});\r\n}\r\ngetsparepart(id)\r\n{\r\n  this.workOrderService.getsparepart(id).subscribe(data=>{this.sparepart=data});\r\n}\r\ngetAllUsers() {\r\n  this.userService.getUsers().subscribe(data => { this.users = data});\r\n  this.vendor = [];\r\n}\r\ngetAllVendors() {\r\n  this.vendorService.getAllVendors().subscribe(data => { this.vendor = data; console.log(\"vendors\", this.vendor) });\r\n  this.users = [];\r\n}\r\ngetstatus()\r\n{\r\n  this.workOrderService.GetAllRequestStatus().subscribe(data=>{this.statusList=data})\r\n}\r\ngetPriopities()\r\n{\r\n  this.sharedService.getAllpriorities().subscribe(data=>{this.priorities=data});\r\n}\r\nhideDialog() {\r\n  this.workOrderDialog = false;\r\n  this.submitted = false;\r\n  this.router.navigate(['/home/WorkOrderList/']);\r\n}\r\nhideDialogWithoutRequest() {\r\n  this.workOrderDialogWithoutRequest = false;\r\n  this.submitted = false;\r\n}\r\neditOrg(id: number) {\r\n  this.router.navigate(['home/AddWorkOrder', id]);\r\n}\r\nupdateWorkOrder() {\r\n  // console.log(\"maintenance\",this.maintenance);\r\n  // console.log(\"sparepart\",this.sparepart);\r\n  // console.log(\"workorder\",this.WorkOrder);\r\n  this.submitted = true;\r\n  this.workOrderService.updateMaintenance(this.maintenance.id,this.maintenance).subscribe(data=>{console.log(\"maintenance\",data)\r\n    this.workOrderService.updateSparePart(this.sparepart.id,this.sparepart).subscribe(data=>{console.log(\"sparepart\",data)});\r\n    this.workOrderService.UpdateWorkOrder(this.WorkOrder.id, this.WorkOrder).subscribe(data =>{console.log(\"workOrder\",data);});\r\n  });\r\n  this.workOrderDialog = false;\r\n  window.location.reload();\r\n}\r\nupdateWorkOrderWithoutRequest() {\r\n  // console.log(\"maintenance\",this.maintenance);\r\n  // console.log(\"sparepart\",this.sparepart);\r\n  // console.log(\"workorder\",this.OrdersWithoutRequest);\r\n  this.submitted = true;\r\n  this.workOrderService.updateMaintenance(this.maintenance.id,this.maintenance).subscribe(data=>{console.log(\"maintenance\",data)\r\n    this.workOrderService.updateSparePart(this.sparepart.id,this.sparepart).subscribe(data=>{console.log(\"sparepart\",data)});\r\n    this.workOrderService.UpdateWorkOrder(this.OrdersWithoutRequest.id, this.OrdersWithoutRequest).subscribe(data =>{console.log(\"workOrder\",data)});\r\n  });\r\n // this.router.navigate(['/home/WorkOrderList/'])\r\n    this.workOrderDialogWithoutRequest = false;\r\n    window.location.reload();\r\n}\r\n\r\ndeleteWorkOrder(workorderId) {\r\n // var result = confirm(\"Want to delete this request\" + \"?\");\r\n // if (result) {\r\n    console.log(\"request\");\r\n    this.workOrderService.deleteWorkOrder(workorderId).subscribe(\r\n      data => { console.log(data), this.getAll() }\r\n    );\r\n // }\r\n // this.router.navigate(['/home/workOrders/'])\r\n}\r\nconfirmDelete(WoId) {\r\n  this.confirmationService.confirm({\r\n      message: 'Do you want to delete this workOrder ?' ,\r\n      header: 'Delete Confirmation',\r\n      icon: 'pi pi-info-circle',\r\n      accept: () => {\r\n          this.deleteWorkOrder(WoId)\r\n          this.msgs = [{severity:'info', summary:'Confirmed', detail:'Record deleted'}];\r\n          this.router.navigate(['/home/workOrders/']) \r\n      },\r\n      reject: () => {\r\n          this.msgs = [{severity:'info', summary:'Rejected', detail:'Delete rejected'}];\r\n      }\r\n  });\r\n}\r\ncloseOrder(id)\r\n{\r\n  this.workOrderService.closeorder(id).subscribe();\r\n}\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n// import { JwtHelperService } from '@auth0/angular-jwt';\r\n// import decode from 'jwt-decode';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { User } from '../Shared/Models/User';\r\nimport { UserService } from '../Shared/services/user.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n  currentUser: User;\r\n \r\n  httpHeader = {\r\n    headers: new HttpHeaders({\r\n      'content-type': 'application/json',\r\n      'Accept': '*/*'\r\n    })\r\n  };\r\n  constructor(private http: HttpClient,\r\n    private userService: UserService) {\r\n    this.currentUser = this.userService.currentUserValue;\r\n   }\r\n  // isAuthenticated() {\r\n    \r\n  //     return this.http.get(`${'http://localhost:51368/api/user/'}`);\r\n  // }\r\n   public isAuthenticated(): boolean {\r\n    // const token = localStorage.getItem('token');\r\n    // const refreshToken = localStorage.getItem('refreshToken');\r\n    // try {\r\n    //   decode(token);\r\n    //   const exp  = decode(refreshToken);\r\n    //   // Date.now().valueOf() / 1000\r\n    //   if (Date.now().valueOf() >= exp * 1000) {\r\n    //     return false;\r\n    //   }\r\n    // } catch (err) {\r\n    //   return false;\r\n    // }\r\n    // return !this.jwtHelper.isTokenExpired(this.currentUser.token);\r\n\r\n    if(!this.currentUser){\r\n      return false\r\n    }\r\n    return true;\r\n    // Check whether the token is expired and return\r\n    // true or false\r\n\r\n  }\r\n\r\n\r\n}\r\n   \r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { AuthService } from './auth.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n  canActivate(): boolean {\r\n    if (this.authService.isAuthenticated()) {\r\n      //console.log(\"authenticated\");\r\n      // this.router.navigate(['/']);\r\n      return true;\r\n    }\r\n  // canActivate(\r\n  //   route: ActivatedRouteSnapshot,\r\n  //   state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n  //   return this.authService.isAuthenticated().pipe(map((response: { authenticated: boolean }) => {\r\n  //     if (response.authenticated) {\r\n\r\n  //       console.log(\"true\", response.authenticated)\r\n  //       return true;\r\n  //     }\r\n  //     this.router.navigate(['login']);\r\n  //     console.log(\"false\", response.authenticated)\r\n  //     return false;\r\n  //   })\r\n  //     // , catchError((error) => {\r\n  //     //     this.router.navigate(['/']);\r\n  //     //     return of(false);\r\n  //     // }\r\n  //     // )\r\n  //   );\r\n  // }\r\n\r\n    // console.log(\"auth\")\r\n    // return false;\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Inventory } from '../Models/Inventory';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InventoryService {\r\n\r\n  constructor(private http: HttpClient,\r\n  ) { }\r\n  httpHeader = {\r\n    headers: new HttpHeaders({\r\n      'content-type': 'application/json',\r\n      'Accept': '*/*'\r\n    })\r\n  };\r\n\r\n  AddInInventory(newInventory: Inventory): Observable<Inventory> {\r\n    return this.http.post<Inventory>(`${environment.AddInInventory}`, newInventory, this.httpHeader)\r\n  }\r\n  getAllInventories(): Observable<Inventory[]> {\r\n    return this.http.get<Inventory[]>(`${environment.getAllInventories}`, this.httpHeader)\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, CanActivate, Router } from '@angular/router';\r\nimport { element } from 'protractor';\r\nimport { Equipment } from '../Shared/Models/Equipment';\r\nimport { Inventory } from '../Shared/Models/Inventory';\r\nimport { User } from '../Shared/Models/User';\r\nimport { EquipmentService } from '../Shared/services/equipment.service';\r\nimport { InventoryService } from '../Shared/services/inventory.service';\r\nimport { UserService } from '../Shared/services/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EquipmentUserService {\r\n\r\n  currentUser: User;\r\n  users: User[];\r\n  equipmentObj: Equipment;\r\n  error: string\r\n  Inventory: Inventory\r\n  // url:string\r\n  detailsUrl: boolean\r\n  httpHeader = {\r\n    headers: new HttpHeaders({\r\n      'content-type': 'application/json',\r\n      'Accept': '*/*'\r\n    })\r\n  };\r\n  constructor(private http: HttpClient,\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private activeRoute: ActivatedRoute,\r\n    private equipmentService: EquipmentService,\r\n    private inventoryService: InventoryService) {\r\n    this.currentUser = this.userService.currentUserValue;\r\n  }\r\n\r\n  public getUser(): boolean {\r\n    console.log(\"yomnaaaaaaaaaaaaaaaaaaaaa\")\r\n    var url = window.location.href\r\n\r\n\r\n    console.log(url)\r\n    var id = Number(url.substring(url.lastIndexOf('/') + 1));\r\n    console.log(id)\r\n\r\n    this.equipmentService.getEquipmentById(id)\r\n      .subscribe(data => {\r\n        this.equipmentObj = data, console.log(\"guarddetails\", this.equipmentObj)\r\n        if (!this.currentUser) {\r\n          console.log(\"noooooooooooooooooooooooooooooo\")\r\n          var frame5 = document.createElement(\"div\");                                        // Append the text to <p>\r\n          var h5=document.body.appendChild(frame5);\r\n          h5.insertAdjacentHTML(\"afterend\", '<p style=\"position:relative;left:500px;top:120px;color:red;\">user not found</p>')\r\n          \r\n          this.router.navigate(['/'])\r\n          return false\r\n        }\r\n        else if (!this.equipmentObj) {\r\n          console.log(\"no equipment\")\r\n          this.router.navigate(['/'])\r\n        \r\n          return false\r\n        }\r\n        this.userService.getUsersByEquipmentId(id).subscribe(e => {\r\n          this.users = e,\r\n            console.log(this.users.length)\r\n          if (this.users.length == 0) {\r\n            console.log(this.users.length)\r\n\r\n            console.log(\"nullllllllllllllllllllllll\", \"currentUser\", this.currentUser.id)\r\n\r\n            this.router.navigate(['/'])\r\n            var frame3 = document.createElement(\"div\");                                        // Append the text to <p>\r\n            var h3=document.body.appendChild(frame3);\r\n            h3.insertAdjacentHTML(\"afterend\", '<p style=\"position:relative;left:500px;top:120px;color:red;\">No users</p>')\r\n            \r\n            console.log(\"faaaaaaaaaalse\")\r\n\r\n            return false;\r\n          }\r\n          this.users.forEach(element => {\r\n            console.log(element)\r\n            if (element.id == this.currentUser.id) {\r\n\r\n              console.log(this.users, \"elemeeeeeeeeeent\", \"elemId\", element.id, \"currentUser\", this.currentUser.id)\r\n              // this.router.navigate(['home/EquipmentDetails'])\r\n              id = this.equipmentObj.id\r\n              console.log(id, url)\r\n              this.saveInInventory()\r\n              console.log(\"trueeeeeeeee\")\r\n              return true;\r\n            }\r\n            // this.router.navigate(['/'])\r\n\r\n            else {\r\n              console.log(this.users, \"elemeeeeeeeeeent\", \"elemId\", element.id, \"currentUser\", this.currentUser.id)\r\n\r\n              this.router.navigate(['/'])\r\n              var frame = document.createElement(\"div\");\r\n              // var para = document.createElement(\"P\");                        // Create a <p> node\r\n              // frame.appendChild(para);\r\n              // var content = document.createTextNode(\"This is a paragraph.\");    // Create a text node\r\n              // para.appendChild(content);                                           // Append the text to <p>\r\n              var h=document.body.appendChild(frame);\r\n              h.insertAdjacentHTML(\"afterend\", '<p style=\"position:relative;left:500px;top:120px;color:red;\">Not allowed to scan this equipment</p>')\r\n             \r\n              console.log(\"faaaaaaaaaalse\")\r\n              return false;\r\n            }\r\n          })\r\n        },\r\n          error => {\r\n            this.error = error.error.message, console.log(this.error),\r\n              this.router.navigate(['/'])\r\n              var frame2 = document.createElement(\"div\");                                        // Append the text to <p>\r\n              var h2=document.body.appendChild(frame2);\r\n              h2.insertAdjacentHTML(\"afterend\", '<p style=\"position:relative;left:500px;top:120px;color:red;\">Not allowed to scan this equipment</p>')\r\n              \r\n          })\r\n        // if (!this.users) {\r\n        //   console.log(\"faaaaaaaaaalse\")\r\n        //   // this.router.navigate(['/'])\r\n        //   return false\r\n        // }\r\n        // console.log(\"trueeeeeeeeee\")\r\n\r\n        // return true\r\n      });\r\n\r\n\r\n    return true;\r\n  }\r\n  saveInInventory() {\r\n    this.Inventory = {\r\n      id: 0,\r\n      equipmentId: 0,\r\n      userId: '',\r\n      equipmentCode: '',\r\n      userName: '',\r\n      createdAt: new Date\r\n    }\r\n    console.log(this.equipmentObj.id)\r\n    this.Inventory.equipmentId = this.equipmentObj.id\r\n    this.Inventory.userId = this.currentUser.id\r\n    this.Inventory.createdAt = new Date();\r\n    console.log(this.Inventory)\r\n    this.inventoryService.AddInInventory(this.Inventory).subscribe(data => console.log(data))\r\n  }\r\n  // public getUsers() {\r\n  //   const id = 50\r\n  //   this.equipmentService.getEquipmentById(id)\r\n  //     .subscribe(data => { this.equipmentObj = data, console.log(\"guarddetails\", this.equipmentObj) });\r\n  //   this.userService.getUsersByEquipmentId(id).subscribe(e => {\r\n  //     this.users = e,\r\n  //       this.users.forEach(element => {\r\n  //         if (element.id == this.currentUser.id) {\r\n  //           // this.router.navigate(['home/EquipmentDetails'])\r\n  //           this.router.navigate(['/home/dashboard']);\r\n  //           console.log(element, \"elemeeeeeeeeeent\")\r\n  //           return true;\r\n  //         }\r\n  //         this.router.navigate(['/'])\r\n  //         return false;\r\n  //       })\r\n  //   })\r\n  //   return false;\r\n  // }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n// import { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport {ActivatedRoute, CanActivate} from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { EquipmentUserService } from './equipment-user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EquipmentUserGuard implements CanActivate {\r\n  constructor(private equipmentUser: EquipmentUserService,\r\n    private route:ActivatedRoute){}\r\n  canActivate():boolean{\r\n    // route: ActivatedRouteSnapshot,\r\n    // state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree \r\n    if(!this.equipmentUser.getUser())\r\n    {\r\n\r\n      console.log(\"false\")\r\n      return false;\r\n    }\r\n    console.log(\"true\")\r\n    return true;\r\n  }\r\n  \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n\r\n    <div class=\"card\">\r\n        <p-toast posinset=\"top-right\"></p-toast>\r\n        <div class=\"card-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-11\">\r\n                    <h5>{{'equipmentcategory.ManageCategories' |translate}}</h5>\r\n                </div>\r\n                <div class=\"col-md-1\" style=\"text-align: right;\">\r\n                    <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary  p-button-rounded p-mr-2 new\"\r\n                        routerLink=\"/home/addCategory\" pTooltip=\"Add a New Category\" tooltipPosition=\"right\"></button>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\"><br /></div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n                    <p-table #dt [value]=\"CategoriesList\" [rows]=\"10\" styleClass=\"p-datatable-responsive-demo\"\r\n                        [paginator]=\"true\" [(selection)]=\"selectedCategories\" [rowHover]=\"true\" dataKey=\"id\"\r\n                        styleClass=\"p-datatable-striped\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        [showCurrentPageReport]=\"true\"\r\n                        [globalFilterFields]=\"['categoryName','categoryNameAr','categoryCode']\">\r\n                        <ng-template pTemplate=\"caption\">\r\n                            <div class=\"p-d-flex p-ai-center p-jc-between\" style=\"text-align: inherit;\">\r\n\r\n\r\n                                <span class=\"p-input-icon-right\">\r\n                                    <i class=\"pi pi-search\"></i>\r\n                                    <input pInputText type=\"text\" class=\"form-control\"\r\n                                        (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                                        placeholder=\"{{'search.Search'|translate}}...\" />\r\n                                </span>\r\n                            </div>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"header\">\r\n                            <tr>\r\n                                <th style=\"text-align: inherit;\" pSortableColumn=\"categoryCode\">\r\n                                    {{'equipmentcategory.CategoryCode'|translate}}<p-sortIcon field=\"categoryCode\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                                <th style=\"text-align: inherit;\" pSortableColumn=\"categoryName\">\r\n                                    {{'name.name'|translate}}<p-sortIcon field=\"categoryName\"></p-sortIcon>\r\n                                </th>\r\n\r\n                                <th style=\"width: 10%;\">{{'Actions.Action'|translate}}</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>\r\n                                    <input pInputText type=\"text\"\r\n                                        (input)=\"dt.filter($event.target.value, 'categoryCode', 'contains')\"\r\n                                        [value]=\"dt.filters['categoryCode']?.value\"\r\n                                        placeholder=\"{{'equipmentcategory.SearchbyCode'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n                                </th>\r\n\r\n\r\n                                <th>\r\n                                    <input pInputText type=\"text\" *ngIf=\"translate.currentLang==='En'\"\r\n                                        (input)=\"dt.filter($event.target.value, 'categoryName', 'contains')\"\r\n                                        [value]=\"dt.filters['categoryName']?.value\"\r\n                                        placeholder=\"{{'equipmentcategory.SearchbyName'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n\r\n                                    <input pInputText type=\"text\" *ngIf=\"translate.currentLang==='Ar'\"\r\n                                        (input)=\"dt.filter($event.target.value, 'categoryNameAr', 'contains')\"\r\n                                        [value]=\"dt.filters['categoryNameAr']?.value\"\r\n                                        placeholder=\"{{'search.SearchbycategoryName'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n                                </th>\r\n\r\n\r\n\r\n                                <th></th>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"body\" let-cat>\r\n                            <tr>\r\n                                <td style=\"text-align: inherit;\"> {{cat.categoryCode}}</td>\r\n                                <td style=\"text-align: inherit;\">\r\n                                    {{translate.currentLang == \"En\" ? cat.categoryName:cat.categoryNameAr}}\r\n                                </td>\r\n\r\n\r\n                                <td>\r\n                                    <button pButton pRipple icon=\"pi pi-pencil\"\r\n                                        class=\"p-button-rounded p-button-info edit\" (click)=\"openNew(cat)\"\r\n                                        pTooltip=\"edit a category\" tooltipPosition=\"top\"></button>\r\n                                    <button pButton pRipple pTooltip=\"delete a category\" tooltipPosition=\"top\"\r\n                                        (click)=\"confirmDelete(cat.id,cat.categoryName)\" icon=\"pi pi-trash\"\r\n                                        class=\"p-button-rounded p-button-danger edit\"></button>\r\n                                </td>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"summary\">\r\n                            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                                {{'In total there are.In total there are'| translate}} {{CategoriesList ?\r\n                                CategoriesList.length : 0 }} {{'Sidebar.EquipmentCategories' |translate}}.\r\n                            </div>\r\n                        </ng-template>\r\n                    </p-table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p-dialog [(visible)]=\"categoryDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <h3 class=\"title\">{{'equipmentcategory.Editcategory'|translate}}</h3>\r\n            </div>\r\n\r\n        </div>\r\n        <form (ngSubmit)=\"EditEquipmentCategoryForm.valid && updateCategory()\" #EditEquipmentCategoryForm=\"ngForm\">\r\n            <fieldset class=\"tab\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"categoryCode\">{{'equipmentcategory.CategoryCode'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"categoryCode\" name=\"categoryCode\"\r\n                            [(ngModel)]=\"category.categoryCode\" #categoryCode=\"ngModel\"\r\n                            [class.is-invalid]=\"categoryCode.touched && categoryCode.errors || EditEquipmentCategoryForm.submitted\"\r\n                            [class.is-valid]=\"categoryCode.valid && EditEquipmentCategoryForm.submitted\" required\r\n                            pTooltip=\"Enter Code\" tooltipPosition=\"bottom\">\r\n                        <div\r\n                            *ngIf=\"(categoryCode.touched || EditEquipmentCategoryForm.submitted) && categoryCode.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                {{'ecricodes.Required'|translate}}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"categoryName\">{{'equipmentcategory.CategoryName'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"categoryName\" name=\"categoryName\"\r\n                            [(ngModel)]=\"category.categoryName\" #categoryName=\"ngModel\"\r\n                            [class.is-invalid]=\"categoryName.touched && categoryName.errors || EditEquipmentCategoryForm.submitted\"\r\n                            [class.is-valid]=\"categoryName.valid && EditEquipmentCategoryForm.submitted\" required\r\n                            pTooltip=\"Enter A name in English\" tooltipPosition=\"bottom\">\r\n                        <div\r\n                            *ngIf=\"(categoryName.touched || EditEquipmentCategoryForm.submitted) && categoryName.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                {{'ecricodes.Required'|translate}}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"name\">{{'equipmentcategory.CategoryNameAr'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"name\" name=\"arname\"\r\n                            [(ngModel)]=\"category.categoryNameAr\" #ArName=\"ngModel\"\r\n                            [class.is-invalid]=\"ArName.touched && ArName.errors || EditEquipmentCategoryForm.submitted\"\r\n                            [class.is-valid]=\"ArName.valid && EditEquipmentCategoryForm.submitted\" required\r\n                            pTooltip=\"Enter A name in arabic\" tooltipPosition=\"bottom\">\r\n                        <div *ngIf=\"(ArName.touched || EditEquipmentCategoryForm.submitted) && ArName.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                {{'ecricodes.Required'|translate}}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12 form-group\">\r\n                        <label for=\"categoryDescription\">{{'equipmentcategory.CategoryDescription'|translate}}</label>\r\n                        <textarea type=\"text\" class=\"form-control\" id=\"categoryDescription\"\r\n                            [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"category.categoryDescription\"\r\n                            pTooltip=\"Enter Description in English\" tooltipPosition=\"bottom\"></textarea>\r\n                    </div>\r\n                    <div class=\"col-md-12 form-group\">\r\n                        <label for=\"categoryDescription\">{{'equipmentcategory.CategoryDescriptionAr'|translate}}</label>\r\n                        <textarea class=\"form-control\" id=\"categoryDescription\" [ngModelOptions]=\"{standalone: true}\"\r\n                            pTooltip=\"Enter Description in arabic\" tooltipPosition=\"bottom\"\r\n                            [(ngModel)]=\"category.categoryDescriptionAr\"></textarea>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                            class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\"\r\n                            class=\"btn btn-info\" value=\"save\" type=\"submit\"></button>\r\n                    </div>\r\n                </div>\r\n\r\n                <p-dialog [(visible)]=\"errorDialog\" [style]=\"{width: '350px'}\">\r\n                    <p-header style=\"color: rgb(181, 4, 4);\"> {{'General.Error'|translate}} </p-header>\r\n                    <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{error}}</span>\r\n                </p-dialog>\r\n\r\n\r\n            </fieldset>\r\n\r\n        </form>\r\n\r\n    </ng-template>\r\n\r\n\r\n</p-dialog>","<p>profile works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Category } from 'src/app/Shared/Models/Category';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { HealthCareUnit } from 'src/app/Shared/Models/HealthCareUnit';\r\n\r\nimport { ConfirmationService, Message, MessageService } from 'primeng/api';\r\n//import {Message} from 'primeng/api';\r\n//import { PrimeNGConfig } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-equipment-categories',\r\n  templateUrl: './equipment-categories.component.html',\r\n  styleUrls: ['./equipment-categories.component.scss'],\r\n  providers: [ConfirmationService]\r\n})\r\nexport class EquipmentCategoriesComponent implements OnInit {\r\n  selectedCategories: Category[]\r\n  categoryDialog: boolean;\r\n  category: Category\r\n  submitted: boolean;\r\n  CategoriesList: Category[];\r\n  healthCareUnitsList: HealthCareUnit[]\r\n  msgs: Message[] = [];\r\n  errorDialog: boolean= false;\r\n  error:string;\r\n  constructor(private sharedService: SharedService,\r\n    private router: Router,\r\n    private translate: TranslateService,\r\n    private confirmationService: ConfirmationService,\r\n    private messageservice:MessageService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n  }\r\n  getAll() {\r\n    this.sharedService.getAllCategories().subscribe(data => { this.CategoriesList = data });\r\n    this.sharedService.getAllunits().subscribe(data => { this.healthCareUnitsList = data, console.log(\"hc\",data) })\r\n\r\n\r\n  }\r\n  openNew(category) {\r\n//this.sharedService.getAllunits().subscribe(data => { this.healthCareUnitsList = data, console.log(\"hc\",data) })\r\n\r\n    this.categoryDialog = true\r\n    this.submitted = false;\r\n    this.category = category\r\n    console.log(category)\r\n  }\r\n  hideDialog() {\r\n    this.categoryDialog = false;\r\n    this.submitted = false;\r\n    this.router.navigate(['/home/equipmentCategories/'])\r\n  }\r\n  updateCategory() {\r\n    this.submitted = true;\r\n    console.log(this.category)\r\n    this.sharedService.updateCategory(this.category.id, this.category).subscribe(data => {\r\n      this.hideDialog()\r\n    },error=>{\r\n      this.errorDialog=true;\r\n      if (this.translate.currentLang == 'En') {\r\n        if (error.error.status == 'code') {\r\n          this.error = error.error.message;\r\n        }\r\n        if (error.error.status == 'name') {\r\n          this.error = error.error.message;\r\n        }\r\n        if (error.error.status == 'nameAr') {\r\n          this.error= error.error.message;\r\n        }\r\n      }  if (this.translate.currentLang == 'Ar')  {\r\n        if (error.error.status == 'code') {\r\n          this.error = error.error.messageAr;\r\n        }\r\n        if (error.error.status == 'name') {\r\n          this.error = error.error.messageAr;\r\n        }\r\n        if (error.error.status == 'nameAr') {\r\n          this.error = error.error.messageAr;\r\n        }\r\n      }\r\n    //  return false;\r\n      //this.getAll()\r\n    })\r\n\r\n  }\r\n  deleteCategory(deptId) {\r\n\r\n    console.log(\"Categories\");\r\n    this.sharedService.deleteCategory(deptId).subscribe(\r\n      data => {  this.getAll() }\r\n    );\r\n\r\n  }\r\n  confirmDelete(deptId, catName) {\r\n    console.log(\"from delete\")\r\n    if(this.translate.currentLang == 'En')\r\n    {\r\n    console.log(\"from iiiif\")\r\n    this.confirmationService.confirm(\r\n      {     \r\n       message: 'Do you want to delete ' + catName + 'from master equipments',\r\n       header: 'Delete Confirmation',\r\n       icon: 'pi pi-info-circle',\r\n       accept: () => {\r\n        this.deleteCategory(deptId)\r\n         this.messageservice.add({ severity: 'info', detail: 'Record deleted' });\r\n       },\r\n       reject: () => {\r\n         this.messageservice.add({ severity: 'info', detail: 'Delete rejected' });\r\n       },\r\n       acceptLabel:\"yes\",\r\n       rejectLabel:\"No\"\r\n     });\r\n  }\r\n  else if(this.translate.currentLang == 'Ar')\r\n  { \r\n    console.log(\"this.translate.currentLang\",this.translate.currentLang)\r\n\r\n    this.confirmationService.confirm({     \r\n     message: 'هل انت متأكد من مسح' + catName + 'من القائمه ',\r\n     header: 'تاكيد عملية المسح',\r\n     icon: 'pi pi-info-circle',\r\n     \r\n     accept: () => {\r\n      this.deleteCategory(deptId)\r\n       this.messageservice.add({ severity: 'info', detail: 'تم المسح' });\r\n\r\n     },\r\n     reject: () => {\r\n       this.messageservice.add({ severity: 'info', detail: 'رفض عمليه المسح' });\r\n     },\r\n     acceptLabel:\"نعم\",\r\n     rejectLabel:\"لا\",\r\n   });\r\n }\r\n  }\r\n\r\n}\r\n","<div>\r\n    <p-dialog [(visible)]=\"categoryDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\" (onHide)=\"hideDialog()\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">{{'equipmentcategory.AddNewCategory'|translate}}</h3>\r\n                </div>\r\n\r\n            </div>\r\n            <form (ngSubmit)=\"AddEquipmentCategoryForm.valid && saveEquepmentCat()\" #AddEquipmentCategoryForm=\"ngForm\">\r\n                <fieldset class=\"tab\">\r\n                    <div class=\"row\">\r\n\r\n                        \r\n                        <div class=\"col-md-12 form-group\">\r\n                            <label for=\"categoryCode\">{{'equipmentcategory.CategoryCode'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"categoryCode\"\r\n                                name=\"categoryCode\" placeholder=\"{{'equipmentcategory.CategoryCode'|translate}}\"\r\n                                [(ngModel)]=\"category.categoryCode\" #Code=\"ngModel\"\r\n                                [class.is-invalid]=\"Code.touched && Code.errors || AddEquipmentCategoryForm.submitted\" \r\n                                [class.is-valid]=\"Code.valid && AddEquipmentCategoryForm.submitted\" required\r\n                                pTooltip=\"Enter A categoryCode\" tooltipPosition=\"bottom\">\r\n                                <div *ngIf=\"(Code.touched || AddEquipmentCategoryForm.submitted) && Code.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        {{'ecricodes.Required'|translate}}                    \r\n                                    </span>\r\n                               </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"name\">{{'equipmentcategory.CategoryName'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"name\" name=\"enname\"\r\n                               [(ngModel)]=\"category.categoryName\"\r\n                                #EnName=\"ngModel\"\r\n                                [class.is-invalid]=\"EnName.touched && EnName.errors || AddEquipmentCategoryForm.submitted\" \r\n                                [class.is-valid]=\"EnName.valid && AddEquipmentCategoryForm.submitted\" required\r\n                                pTooltip=\"Enter A name in English\" tooltipPosition=\"bottom\">\r\n                                <div *ngIf=\"(EnName.touched || AddEquipmentCategoryForm.submitted) && EnName.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        {{'ecricodes.Required'|translate}}                             \r\n                                    </span>\r\n                               </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"name\">{{'equipmentcategory.CategoryNameAr'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"name\" name=\"arname\"\r\n                                 [(ngModel)]=\"category.categoryNameAr\"\r\n                                #ArName=\"ngModel\"\r\n                                [class.is-invalid]=\"ArName.touched && ArName.errors || AddEquipmentCategoryForm.submitted\" \r\n                                [class.is-valid]=\"ArName.valid && AddEquipmentCategoryForm.submitted\" required\r\n                                pTooltip=\"Enter A name in arabic\" tooltipPosition=\"bottom\">\r\n                                <div *ngIf=\"(ArName.touched || AddEquipmentCategoryForm.submitted) && ArName.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        {{'ecricodes.Required'|translate}}                          \r\n                                    </span>\r\n                               </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-12 form-group\">\r\n                            <label for=\"categoryDescription\">{{'equipmentcategory.CategoryDescription'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"categoryDescription\" [ngModelOptions]=\"{standalone: true}\"\r\n                                [(ngModel)]=\"category.categoryDescription\" autofocus \r\n                                 pTooltip=\"Enter Description in English\" tooltipPosition=\"bottom\">\r\n                        </div>\r\n                        <div class=\"col-md-12 form-group\">\r\n                            <label for=\"categoryDescription\">{{'equipmentcategory.CategoryDescriptionAr'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"categoryDescription\" [ngModelOptions]=\"{standalone: true}\"  \r\n                                pTooltip=\"Enter Description in arabic\" tooltipPosition=\"bottom\"\r\n                                 [(ngModel)]=\"category.categoryDescriptionAr\" autofocus>\r\n                        </div>\r\n                        <!-- <div class=\"col-md-3 form-group\">\r\n                            <label for=\"healthName\">{{'equipmentcategory.HealthCareUnit'|translate}}</label>\r\n                            <select class=\"form-control\" id=\"healthName\" name=\"healthName\"\r\n                                [(ngModel)]=\"category.HealthCareUnitId\"\r\n                                [class.is-invalid]=\"healthName.touched && healthName.errors || AddEquipmentCategoryForm.submitted\"\r\n                                [class.is-valid]=\"healthName.valid && AddEquipmentCategoryForm.submitted\"\r\n                                 #healthName=\"ngModel\" required [value]=\"0\"                                 \r\n                                 pTooltip=\"Please,Enter A healthCareUnit\" tooltipPosition=\"bottom\">\r\n                                <option value=\"0\">--select--</option>\r\n                                <option *ngFor=\"let h of healthCareUnitsList\" [value]=\"h.id\">         \r\n                                    {{translate.currentLang == \"En\" ? h.healthCareUnitName:h.healthCareUnitNameAr}}\r\n                                </option>\r\n                            </select>\r\n                            <div\r\n                            *ngIf=\"(healthName.touched || AddEquipmentCategoryForm.submitted) && healthName.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                health CareUnit is required\r\n                            </span>\r\n                        </div> \r\n                        </div>-->\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\" \r\n                                    class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>                         \r\n                      </div>\r\n                      <div class=\"col-md-6\">\r\n                            <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\" \r\n                                    class=\"btn btn-info\" value=\"save\" type=\"submit\"></button>\r\n                      </div>\r\n                    </div>\r\n                </fieldset>\r\n                <p-dialog [(visible)]=\"errorDialog\" [style]=\"{width: '350px'}\">\r\n                    <p-header style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n                    <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{error}}</span>\r\n                </p-dialog>\r\n            </form>\r\n\r\n        </ng-template>\r\n    </p-dialog>\r\n\r\n    <!-- <p-dialog [(visible)]=\"deleteDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\" (onHide)=\"hideDialog()\">\r\n        <ng-template pTemplate=\"content\">\r\n        </ng-template>\r\n    </p-dialog> -->\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Category } from 'src/app/Shared/Models/Category';\r\nimport { HealthCareUnit } from 'src/app/Shared/Models/HealthCareUnit';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-new-category',\r\n  templateUrl: './new-category.component.html',\r\n  styleUrls: ['./new-category.component.css']\r\n})\r\nexport class NewCategoryComponent implements OnInit {\r\n  categories: Category[];\r\n  selectedCategories: Category[];\r\n  categoryDialog: boolean;\r\n  category: Category;\r\n  submitted: boolean;\r\n  healthCareUnitsList:HealthCareUnit[]\r\n  error:string\r\n  errorDialog:boolean\r\n  constructor(private sharedService:SharedService,private router:Router ,\r\n     private translate: TranslateService ,\r\n     private messageService: MessageService) { }\r\n  \r\n\r\n  ngOnInit() {\r\n    this.sharedService.getAllunits().subscribe(data=>{this.healthCareUnitsList=data})\r\n    this.category = {\r\n      id: 0,\r\n      categoryName: '',\r\n      categoryNameAr: '',\r\n      categoryCode: '',\r\n      categoryDescription: '',\r\n      categoryDescriptionAr: ''\r\n      //healthCareUnitId:0\r\n  }\r\n\r\n  this.openNew()\r\n  \r\n}\r\n\r\nopenNew() {\r\n  this.categoryDialog = true\r\n  this.submitted = false;\r\n}\r\n\r\nhideDialog() {\r\n  this.categoryDialog = false;\r\n  this.submitted = false;\r\n  this.router.navigate(['/home/equipmentCategories']) \r\n}\r\n\r\nsaveEquepmentCat() {\r\n  this.submitted = true;\r\n  this.addCategory();\r\n}\r\n\r\naddCategory() {\r\n  this.sharedService.addNewCategory(this.category).subscribe(data => { console.log(data), \r\n    this.router.navigate(['/home/equipmentCategories']) },\r\n    error=>{\r\n      this.errorDialog=true;\r\n      if (this.translate.currentLang == 'En') {\r\n        if (error.error.status == 'code') {\r\n          this.error = error.error.message;\r\n        }\r\n        if (error.error.status == 'name') {\r\n          this.error = error.error.message;\r\n        }\r\n        if (error.error.status == 'nameAr') {\r\n          this.error= error.error.message;\r\n        }\r\n      }  if (this.translate.currentLang == 'Ar')  {\r\n        if (error.error.status == 'code') {\r\n          this.error = error.error.messageAr;\r\n        }\r\n        if (error.error.status == 'name') {\r\n          this.error = error.error.messageAr;\r\n        }\r\n        if (error.error.status == 'nameAr') {\r\n          this.error = error.error.messageAr;\r\n        }\r\n      }\r\n      return false;\r\n      \r\n    });\r\n}\r\n\r\n  \r\n\r\n}\r\n","<!-- <p-toolbar styleClass=\"p-mb-4\">\r\n            <ng-template pTemplate=\"left\">\r\n\r\n          \r\n            </ng-template>\r\n        </p-toolbar> -->\r\n\r\n\r\n\r\n\r\n\r\n<div class=\"container-fluid\">\r\n\r\n    <div class=\"card\">\r\n        <p-toast posinset=\"top-right\"></p-toast>\r\n        <div class=\"card-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-11\">\r\n                    <h5>{{'subcategory.ManageSubCategories'|translate}}</h5>\r\n                </div>\r\n                <div class=\"col-md-1\" style=\"text-align: right;\">\r\n                    <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary  p-button-rounded p-mr-2 new\"\r\n                        routerLink=\"/home/addSubCategory\" pTooltip=\"Add a New subcategory\"\r\n                        tooltipPosition=\"right\"></button>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\"><br /></div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n\r\n                    <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n                    <p-table #dt [value]=\"subCategoriesList\"  styleClass=\"p-datatable-striped\" [rows]=\"10\"\r\n                        [paginator]=\"true\" [(selection)]=\"selectedSubCategories\" [rowHover]=\"true\" dataKey=\"id\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        [showCurrentPageReport]=\"true\"\r\n                        [globalFilterFields]=\"['subCategoryName','subCategoryNameAr','code']\">\r\n                        <ng-template pTemplate=\"caption\">\r\n                            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n\r\n\r\n                                <span class=\"p-input-icon-right\">\r\n                                    <i class=\"pi pi-search\"></i>\r\n                                    <input pInputText type=\"text\" class=\"form-control\"\r\n                                        (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                                        placeholder=\"{{'search.Search'|translate}}...\" />\r\n                                </span>\r\n                            </div>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"header\">\r\n                            <tr>\r\n                                <th pSortableColumn=\"code\">{{'name.name'|translate}}<p-sortIcon field=\"code\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"subCategoryName\">{{'name.name'|translate}}<p-sortIcon\r\n                                        field=\"subCategoryName\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n\r\n                                <th style=\"width: 10%;\">{{'Actions.Action'|translate}}</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>\r\n                                    <input pInputText type=\"text\"\r\n                                        (input)=\"dt.filter($event.target.value, 'code', 'contains')\"\r\n                                        [value]=\"dt.filters['code']?.value\"\r\n                                        placeholder=\"{{'subcategory.SearchbyCode'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n                                </th>\r\n\r\n\r\n                                <th>\r\n                                    <input pInputText type=\"text\"\r\n                                        (input)=\"dt.filter($event.target.value, 'subCategoryName', 'contains')\"\r\n                                        [value]=\"dt.filters['categoryName']?.value\"\r\n                                        placeholder=\"{{'subcategory.SearchbyName'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n                                </th>\r\n\r\n\r\n\r\n                                <th></th>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"body\" let-subCat>\r\n                            <tr>\r\n\r\n                                <td  style=\"text-align: inherit;\"> {{subCat.code}}</td>\r\n                                <td  style=\"text-align: inherit;\">  {{translate.currentLang == \"En\" ? subCat.subCategoryName:subCat.subCategoryNameAr}}\r\n                                </td>\r\n\r\n                                <td  style=\"text-align: inherit;\">\r\n                                    <button pButton pRipple icon=\"pi pi-pencil\"\r\n                                        class=\"p-button-rounded p-button-info edit\" (click)=\"openNew(subCat)\"\r\n                                        pTooltip=\"edit a subcategory\" tooltipPosition=\"top\"></button>\r\n\r\n                                    <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\"\r\n                                        (click)=\"confirmDelete(subCat.id,subCat.subCategoryName)\"></button>\r\n                                </td>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"summary\">\r\n                            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                                {{'In total there are.In total there are'| translate}} {{SubCategories ?\r\n                                SubCategories.length : 0 }} {{'Sidebar.EquipmentSubCategories'| translate}}.\r\n                            </div>\r\n                        </ng-template>\r\n                    </p-table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p-dialog [(visible)]=\"subCategoryDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <h3 class=\"title\">{{'subcategory.EditsubCategory'|translate}}</h3>\r\n            </div>\r\n\r\n        </div>\r\n        <form (ngSubmit)=\"EditSubCategoryForm.valid && updatesubCategory()\" #EditSubCategoryForm=\"ngForm\">\r\n\r\n            <fieldset class=\"tab\">\r\n\r\n                <div class=\"row\">\r\n\r\n                    <div class=\"col-md-12 form-group\">\r\n                        <label for=\"category\">{{'subcategory.Category'|translate}}</label>\r\n                        <select class=\"form-control\" id=\"category\" name=\"category\" #category=\"ngModel\"\r\n                            [(ngModel)]=\"subCategory.equipmentCategoryId\" pTooltip=\"select a Category\"\r\n                            tooltipPosition=\"bottom\"\r\n                            [class.is-invalid]=\"category.touched && category.errors || EditSubCategoryForm.submitted\"\r\n                            [class.is-valid]=\"category.valid && EditSubCategoryForm.submitted\" required>\r\n                            <option selected>--select--</option>\r\n                            <option *ngFor=\"let cat of categoriesList\" [value]=\"cat.id\" [selected]=\"cat.id == subCategory.equipmentCategoryId\">\r\n                                {{translate.currentLang == \"En\" ? cat.categoryName:cat.categoryNameAr}}\r\n                            </option>\r\n                        </select>\r\n                        <div *ngIf=\"(category.touched || EditSubCategoryForm.submitted) && category.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                {{'ecricodes.Required'|translate}}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"code\">{{'subcategory.Code'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"code\" name=\"code\" #code=\"ngModel\"\r\n                            pTooltip=\"Enter a Name\" tooltipPosition=\"bottom\" [(ngModel)]=\"subCategory.code\"\r\n                            [class.is-invalid]=\"code.touched && subCategoryName.errors || EditSubCategoryForm.submitted\"\r\n                            [class.is-valid]=\"code.valid && EditSubCategoryForm.submitted\" required>\r\n                        <div *ngIf=\"(code.touched || EditSubCategoryForm.submitted) && code.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                {{'ecricodes.Required'|translate}}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"subCategoryName\">{{'subcategory.subCategoryName'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"subCategoryName\" name=\"subCategoryName\"\r\n                            #subCategoryName=\"ngModel\" pTooltip=\"Enter a Name\" tooltipPosition=\"bottom\"\r\n                            [(ngModel)]=\"subCategory.subCategoryName\"\r\n                            [class.is-invalid]=\"subCategoryName.touched && subCategoryName.errors || EditSubCategoryForm.submitted\"\r\n                            [class.is-valid]=\"subCategoryName.valid && EditSubCategoryForm.submitted\" required>\r\n                        <div\r\n                            *ngIf=\"(subCategoryName.touched || EditSubCategoryForm.submitted) && subCategoryName.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                {{'ecricodes.Required'|translate}}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"subCategoryNameAr\">{{'subcategory.subCategoryNameAr'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"subCategoryName\"\r\n                            [ngModelOptions]=\"{standalone: true}\" pTooltip=\"Enter a Name in Arabic\"\r\n                            tooltipPosition=\"bottom\" [(ngModel)]=\"subCategory.subCategoryNameAr\" name=\"subCategoryName\"\r\n                            #subCategoryArName=\"ngModel\"\r\n                            [class.is-invalid]=\"subCategoryArName.touched && subCategoryArName.errors || EditSubCategoryForm.submitted\"\r\n                            [class.is-valid]=\"subCategoryArName.valid && EditSubCategoryForm.submitted\" required>\r\n                        <div\r\n                            *ngIf=\"(subCategoryArName.touched || EditSubCategoryForm.submitted) && subCategoryArName.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                {{'ecricodes.Required'|translate}}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\"><br /></div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-3\">\r\n                        <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                            class=\"btn btn-info\" (click)=\"hideDialog()\" type=\"button\"\r\n                            value=\"{{'Actions.Cancel'|translate}}\"></button>\r\n                    </div>\r\n                    <div class=\"col-lg-3\">\r\n                        <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\"\r\n                            class=\"btn btn-info\" value=\"{{'Actions.Save'|translate}}\" type=\"submit\"></button>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n\r\n    </ng-template>\r\n</p-dialog>\r\n<p-dialog [(visible)]=\"errorDisplay\" [style]=\"{width: '350px'}\">\r\n    {{'General.Error'|translate}}    <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{error}}</span>\r\n</p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Category } from 'src/app/Shared/Models/Category';\r\nimport { SubCategory } from 'src/app/Shared/Models/SubCategory';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {ConfirmationService,Message, MessageService} from 'primeng/api';\r\n@Component({\r\n  selector: 'app-sub-categories',\r\n  templateUrl: './sub-categories.component.html',\r\n  styleUrls: ['./sub-categories.component.scss']\r\n})\r\nexport class SubCategoriesComponent implements OnInit {\r\n  selectedSubCategories: SubCategory[]\r\n  subCategoryDialog: boolean;\r\n  subCategory: SubCategory\r\n  submitted: boolean;\r\n  subCategoriesList: SubCategory[];\r\n  categoriesList: Category[];\r\n  msgs: Message[] = [];\r\n  error:string;\r\n  errorDisplay;boolean=false;\r\n  constructor(private sharedService: SharedService, private router: Router,\r\n    private translate:TranslateService,private confirmationService: ConfirmationService,\r\n    private messageservice:MessageService) { }\r\n  ngOnInit() {\r\n    this.getAll()\r\n  }\r\n  getAll() {\r\n    this.sharedService.getSubCategories().subscribe(data => { this.subCategoriesList = data });\r\n\r\n  }\r\n  openNew(subCat) {\r\n    this.subCategoryDialog = true\r\n    this.submitted = false;\r\n    this.subCategory = subCat\r\n    this.sharedService.getAllCategories().subscribe(data => { this.categoriesList = data });\r\n  }\r\n  hideDialog() {\r\n    this.subCategoryDialog = false;\r\n    this.submitted = false;\r\n   \r\n  }\r\n  updatesubCategory() {\r\n    this.submitted = true;\r\n    this.sharedService.updateSubCategory(this.subCategory.id, this.subCategory).subscribe(\r\n      data => {\r\n        this.submitted = true,\r\n        this.subCategoryDialog=false;\r\n        this.router.navigate(['/home/equipmentSubCategories/'])\r\n      },\r\n      error=>{\r\n        this.errorDisplay=true;\r\n        if (this.translate.currentLang == 'En') {\r\n          if (error.error.status == 'code') {\r\n            this.error = error.error.message;\r\n          }\r\n          if (error.error.status == 'name') {\r\n            this.error = error.error.message;\r\n          }\r\n          if (error.error.status == 'nameAr') {\r\n            this.error= error.error.message;\r\n          }\r\n        }  if (this.translate.currentLang == 'Ar')  {\r\n          if (error.error.status == 'code') {\r\n            this.error = error.error.messageAr;\r\n          }\r\n          if (error.error.status == 'name') {\r\n            this.error = error.error.messageAr;\r\n          }\r\n          if (error.error.status == 'nameAr') {\r\n            this.error = error.error.messageAr;\r\n          }\r\n        }\r\n        return false;\r\n      })\r\n\r\n      this.getAll();\r\n  }\r\n  deleteSubCategory(subCat) {\r\n      this.sharedService.deleteSubCategory(subCat).subscribe(\r\n        data => { this.getAll() }\r\n      );\r\n  }\r\n  confirmDelete(subId,subName) {\r\n    if(this.translate.currentLang == 'En')\r\n    {\r\n      this.confirmationService.confirm({\r\n        message: 'Do you want to delete this ' + subName + 'from subCategory?' ,\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        accept: () => {\r\n            this.deleteSubCategory(subId)\r\n            this.messageservice.add({ severity: 'info', detail: 'Record deleted' });\r\n          \r\n        },\r\n        reject: () => {\r\n          this.messageservice.add({ severity: 'info', detail: 'Delete rejected' });\r\n        }\r\n    });\r\n  }\r\n  else if(this.translate.currentLang == 'Ar')\r\n  {\r\n    this.confirmationService.confirm({     \r\n      message: 'هل انت متأكد من مسح' + subName + 'من القائمه الرئيسيه',\r\n      header: 'تاكيد عملية المسح',\r\n      icon: 'pi pi-info-circle',\r\n      \r\n      accept: () => {\r\n        this.deleteSubCategory(subId)\r\n        this.messageservice.add({ severity: 'info', detail: 'تم المسح' });\r\n  \r\n      },\r\n      reject: () => {\r\n        this.messageservice.add({ severity: 'info', detail: 'رفض عمليه المسح' });\r\n      },\r\n      acceptLabel:\"نعم\",\r\n      rejectLabel:\"لا\",\r\n    });\r\n  }\r\n}\r\n\r\n}\r\n","<div>\r\n    <p-dialog [(visible)]=\"subCategoryDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\"\r\n        (onHide)=\"hideDialog()\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">{{'subcategory.AddNewSubCategory'|translate}}</h3>\r\n                </div>\r\n\r\n            </div>\r\n            <form (ngSubmit)=\"AddSubCategoryForm.valid && saveSubCatgory()\" #AddSubCategoryForm=\"ngForm\">\r\n\r\n                <fieldset class=\"tab\">\r\n\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-md-12 form-group\">\r\n                            <label for=\"category\">{{'subcategory.Category'|translate}}</label>\r\n                            <select class=\"form-control\" id=\"category\" name=\"category\" #category=\"ngModel\"\r\n                                [(ngModel)]=\"subCategory.equipmentCategoryId\" pTooltip=\"select a Category\"\r\n                                tooltipPosition=\"bottom\"\r\n                                [class.is-invalid]=\"category.touched && category.errors || AddSubCategoryForm.submitted\"\r\n                                [class.is-valid]=\"category.valid && AddSubCategoryForm.submitted\" required [value]=\"0\">\r\n                                <option value=\"0\">--select--</option>\r\n                                <option *ngFor=\"let cat of categoriesList\" [value]=\"cat.id\">\r\n                                    {{translate.currentLang == \"En\" ? cat.categoryName:cat.categoryNameAr}}\r\n                                </option>\r\n                            </select>\r\n                            <div\r\n                                *ngIf=\"(category.touched || AddSubCategoryForm.submitted) && category.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'ecricodes.Required'|translate}}     \r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"code\">{{'subcategory.Code'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"code\" name=\"code\"\r\n                                #code=\"ngModel\" pTooltip=\"Enter a Name\" tooltipPosition=\"bottom\"\r\n                                [(ngModel)]=\"subCategory.code\"\r\n                                [class.is-invalid]=\"code.touched && subCategoryName.errors || AddSubCategoryForm.submitted\"\r\n                                [class.is-valid]=\"code.valid && AddSubCategoryForm.submitted\" required>\r\n                            <div\r\n                                *ngIf=\"(code.touched || AddSubCategoryForm.submitted) && code.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'ecricodes.Required'|translate}}                  \r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"subCategoryName\">{{'subcategory.subCategoryName'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"subCategoryName\" name=\"subCategoryName\"\r\n                                #subCategoryName=\"ngModel\" pTooltip=\"Enter a Name\" tooltipPosition=\"bottom\"\r\n                                [(ngModel)]=\"subCategory.subCategoryName\"\r\n                                [class.is-invalid]=\"subCategoryName.touched && subCategoryName.errors || AddSubCategoryForm.submitted\"\r\n                                [class.is-valid]=\"subCategoryName.valid && AddSubCategoryForm.submitted\" required>\r\n                            <div\r\n                                *ngIf=\"(subCategoryName.touched || AddSubCategoryForm.submitted) && subCategoryName.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'ecricodes.Required'|translate}}     \r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"subCategoryNameAr\">{{'subcategory.subCategoryNameAr'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"subCategoryName\"\r\n                                [ngModelOptions]=\"{standalone: true}\" pTooltip=\"Enter a Name in Arabic\"\r\n                                tooltipPosition=\"bottom\" [(ngModel)]=\"subCategory.subCategoryNameAr\"\r\n                                name=\"subCategoryName\" #subCategoryArName=\"ngModel\"\r\n                                [class.is-invalid]=\"subCategoryArName.touched && subCategoryArName.errors || AddSubCategoryForm.submitted\"\r\n                                [class.is-valid]=\"subCategoryArName.valid && AddSubCategoryForm.submitted\" required>\r\n                            <div\r\n                                *ngIf=\"(subCategoryArName.touched || AddSubCategoryForm.submitted) && subCategoryArName.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'ecricodes.Required'|translate}}     \r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\"><br /></div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-3\">\r\n                            <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                                class=\"btn btn-info\" (click)=\"hideDialog()\" type=\"button\"\r\n                                value=\"{{'Actions.Cancel'|translate}}\"></button>\r\n                        </div>\r\n                        <div class=\"col-lg-3\">\r\n                            <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\"\r\n                                class=\"btn btn-info\" value=\"{{'Actions.Save'|translate}}\" type=\"submit\"></button>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n                <!-- <p-dialog [(visible)]=\"errorDialog\" [style]=\"{width: '350px'}\">\r\n                    <p-header style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n                    <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{error}}</span>\r\n                </p-dialog> -->\r\n            </form>\r\n\r\n        </ng-template>\r\n    </p-dialog>\r\n    <p-dialog [(visible)]=\"errorDisplay\" [style]=\"{width: '350px'}\">\r\n        <p-header  style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n       <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{error}}</span>\r\n    </p-dialog>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Category } from 'src/app/Shared/Models/Category';\r\nimport { SubCategory } from 'src/app/Shared/Models/SubCategory';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MessageService } from 'primeng/api';\r\n@Component({\r\n  selector: 'app-new-sub-category',\r\n  templateUrl: './new-sub-category.component.html',\r\n  styleUrls: ['./new-sub-category.component.css']\r\n})\r\nexport class NewSubCategoryComponent implements OnInit {\r\n  subCategoryDialog:boolean;\r\n  subCategory: SubCategory;\r\n  submitted: boolean;\r\n  categoriesList: Category[];\r\n  error:string;\r\n  errorDisplay:boolean=false;\r\n  constructor(private sharedService:SharedService,private router:Router,\r\n              private translate:TranslateService,\r\n              private messageService:MessageService) { }\r\n\r\n  ngOnInit(){\r\n    this.subCategory = {\r\n      id: 0,\r\n      subCategoryName: '',\r\n      subCategoryNameAr: '',\r\n\r\n      equipmentCategoryId:0,\r\n      code:''\r\n  }\r\n\r\n  this.openNew()\r\n  \r\n}\r\n\r\nopenNew() {\r\n  this.subCategoryDialog = true\r\n  this.submitted = false;\r\n  this.sharedService.getAllCategories().subscribe(data => { this.categoriesList = data });\r\n\r\n}\r\n\r\nhideDialog() {\r\n  this.subCategoryDialog = false;\r\n  this.submitted = false;\r\n  this.router.navigate(['/home/equipmentSubCategories'])\r\n}\r\n\r\nsaveSubCatgory() {\r\n  this.submitted = true;\r\n  this.addSubCategory();\r\n \r\n}\r\n\r\naddSubCategory() {\r\n  if(this.subCategory.equipmentCategoryId ==0)\r\n  {\r\n    this.errorDisplay = true;\r\n    if (this.translate.currentLang == 'En') {\r\n  \r\n    this.error =\"Please select category\";\r\n    }\r\n    if (this.translate.currentLang == 'Ar') {\r\n      this.error =\"من فضلك اختر فئة\";\r\n      }\r\n      return false;\r\n  }\r\n  else{\r\n  this.sharedService.addNewSubCategory(this.subCategory).subscribe(\r\n    data => {\r\n      this.router.navigate(['/home/equipmentSubCategories/']);\r\n    },\r\n    error=>{\r\n      this.errorDisplay=true;\r\n      if (this.translate.currentLang == 'En') {\r\n        if (error.error.status == 'code') {\r\n          this.error = error.error.message;\r\n        }\r\n        if (error.error.status == 'name') {\r\n          this.error = error.error.message;\r\n        }\r\n        if (error.error.status == 'nameAr') {\r\n          this.error= error.error.message;\r\n        }\r\n      }  if (this.translate.currentLang == 'Ar')  {\r\n        if (error.error.status == 'code') {\r\n          this.error = error.error.messageAr;\r\n        }\r\n        if (error.error.status == 'name') {\r\n          this.error = error.error.messageAr;\r\n        }\r\n        if (error.error.status == 'nameAr') {\r\n          this.error = error.error.messageAr;\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n}\r\n\r\n  \r\n\r\n\r\n}\r\n","\r\n<div class=\"container-fluid\">\r\n    <div class=\"card\">\r\n        <p-toast posinset=\"top-right\"></p-toast>\r\n\r\n          \r\n        <div class=\"card-body\" >\r\n            <div class=\"row\">\r\n                <div class=\"col-md-11\"><h5 class=\"p-m-0\">{{'origin.ManageOrigins'|translate}}</h5></div>\r\n                <div class=\"col-md-1\" style=\"text-align: right;\">     \r\n                    <button pButton pRipple  icon=\"pi pi-plus\" class=\"p-button-primary p-button-rounded p-mr-2\"\r\n                    routerLink=\"/home/addOrigin\" pTooltip=\"Add a New Origin\" tooltipPosition=\"right\"></button>\r\n                </div>\r\n        </div>\r\n          \r\n    \r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\"><br/></div></div>\r\n    \r\n        <div class=\"row\">\r\n                \r\n     \r\n            <div class=\"col-md-12\"> \r\n        <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n        <p-table #dt [value]=\"originsList\" styleClass=\"p-datatable-responsive-demo\"[rows]=\"10\" [paginator]=\"true\" [(selection)]=\"selectedOrigins\"\r\n            [rowHover]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-striped\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            [showCurrentPageReport]=\"true\"\r\n            [globalFilterFields]=\"['originCode','englishName','arabicName']\">\r\n            <ng-template pTemplate=\"caption\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n            \r\n\r\n                    <span class=\"p-input-icon-right\">\r\n                        <i class=\"pi pi-search\"></i>\r\n                        <input pInputText type=\"text\" class=\"form-control\" (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                            placeholder=\"{{'search.Search'|translate}}...\" />\r\n                    </span>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\" >\r\n                <tr >\r\n\r\n                    <th pSortableColumn=\"originCode\">{{'origin.OriginCode'|translate}} <p-sortIcon field=\"originCode\"></p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"englishName\">{{'origin.englishName'|translate}} <p-sortIcon field=\"englishName\"></p-sortIcon>\r\n                    </th>\r\n                    <th style=\"width: 10%;\">{{'Actions.Action'|translate}}</th>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dt.filter($event.target.value, 'originCode', 'contains')\"\r\n                            [value]=\"dt.filters['originCode']?.value\" placeholder=\"{{'origin.SearchbyCode'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dt.filter($event.target.value, 'englishName', 'contains')\"\r\n                            [value]=\"dt.filters['englishName']?.value\" placeholder=\"{{'origin.SearchbyName'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n\r\n\r\n            \r\n            <ng-template pTemplate=\"body\" let-origin>\r\n                <tr>\r\n                    <td  style=\"text-align: inherit;\">{{origin.originCode}}</td>\r\n                    <td  style=\"text-align: inherit;\">{{translate.currentLang == \"En\" ?origin.englishName :origin.arabicName}}</td>\r\n                    <td  style=\"text-align: inherit;\">\r\n                        <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-info edit\"\r\n                            (click)=\"openNew(origin)\" pTooltip=\"edit an origin\" tooltipPosition=\"top\"></button>\r\n                        <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\"\r\n                            (click)=\"confirmDelete(origin.id)\"></button>\r\n                    </td>\r\n                </tr>\r\n   \r\n\r\n\r\n\r\n            </ng-template>\r\n            <ng-template pTemplate=\"summary\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    {{'In total there are.In total there are'| translate}} {{originsList ? originsList.length : 0 }} origins.\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div></div></div></div>\r\n    <p-dialog [(visible)]=\"originDialog\" [style]=\"{width: '800px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">{{'origin.EditOrigin'|translate}}</h3>\r\n                </div>\r\n               \r\n            </div>\r\n            <form>\r\n\r\n                <fieldset class=\"tab\">\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"originCode\">{{'origin.OriginCode'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"originCode\" [ngModelOptions]=\"{standalone: true}\"\r\n                                placeholder=\"{{'origin.OriginCode'|translate}}\" [(ngModel)]=\"origin.originCode\" autofocus>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"englishName\">{{'origin.englishName'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"englishName\" [ngModelOptions]=\"{standalone: true}\"\r\n                                placeholder=\"{{'origin.englishName'|translate}}\" [(ngModel)]=\"origin.englishName\" autofocus>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"arabicName\">{{'origin.arabicName'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"arabicName\" [ngModelOptions]=\"{standalone: true}\"\r\n                                placeholder=\"{{'origin.arabicName'|translate}}\" [(ngModel)]=\"origin.arabicName\" autofocus>\r\n                        </div>\r\n                    </div>\r\n\r\n                </fieldset>\r\n                <p-dialog [(visible)]=\"errorDialog\" [style]=\"{width: '350px'}\">\r\n                    <p-header style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n                    <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{error}}</span>\r\n                </p-dialog>\r\n            </form>\r\n\r\n        </ng-template>\r\n\r\n        <ng-template pTemplate=\"footer\">\r\n            <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\" class=\"p-button-text\" (click)=\"hideDialog()\"\r\n                value=\"cancel\"></button>\r\n            <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\" class=\"p-button-text\" (click)=\"updateOrigin()\"\r\n                value=\"save\"></button>\r\n\r\n\r\n        </ng-template>\r\n    </p-dialog>\r\n   ","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Origin } from 'src/app/Shared/Models/Origin';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport {ConfirmationService,Message, MessageService} from 'primeng/api';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-origins-list',\r\n  templateUrl: './origins-list.component.html',\r\n  styleUrls: ['./origins-list.component.scss'],\r\n  encapsulation:ViewEncapsulation.None\r\n})\r\nexport class OriginsListComponent implements OnInit {\r\n  originsList: Origin[];\r\n  selectedOrigins: Origin[]\r\n  originDialog: boolean;\r\n  origin: Origin;\r\n  submitted: boolean;\r\n  msgs: Message[] = [];\r\n  errorDialog: boolean;\r\n  error:string\r\n  companyProduct: any[];\r\n  constructor(private sharedService: SharedService, private router: Router,\r\n    private confirmationService: ConfirmationService, private translate:TranslateService,\r\n    private messageservice:MessageService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n\r\n    console.log(\"translate\", this.translate.currentLang);\r\n  }\r\n  getAll() {\r\n    this.sharedService.getAllOrigins().subscribe(data => { this.originsList = data });\r\n\r\n  }\r\n  openNew(o) {\r\n    this.originDialog = true\r\n    this.submitted = false;\r\n    this.origin = o\r\n    console.log(o)\r\n  }\r\n  hideDialog() {\r\n    this.originDialog = false;\r\n    this.submitted = false;\r\n    this.router.navigate(['/home/origins/']);\r\n  }\r\n \r\n  updateOrigin() {\r\n    this.submitted = true;\r\n    console.log(this.origin)\r\n    this.sharedService.updateOrigin(this.origin.id,this.origin).subscribe(data => {\r\n      this.hideDialog()\r\n      console.log(\"data\",data)}\r\n      ,error=>{\r\n        this.errorDialog=true,\r\n        this.error=error.error.message,this.getAll()\r\n      })\r\n    \r\n  }\r\n  deleteOrigin(originId) {\r\n  //  var result = confirm(\"Want to delete this origin\" + \"?\");\r\n  //  if (result) {\r\n    //  console.log(\"origin\");\r\n      this.sharedService.deleteOrigin(originId).subscribe(\r\n        data => {  this.getAll(), console.log(data)}\r\n      );\r\n   // }\r\n    //this.router.navigate(['/home/origins/'])\r\n  }\r\n  confirmDelete(originId) {\r\nif(this.translate.currentLang == 'En')\r\n {\r\n    this.confirmationService.confirm({\r\n        message: 'Do you want to delete this origin?' ,\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        accept: () => {\r\n            this.deleteOrigin(originId)\r\n            this.messageservice.add({ severity: 'info', detail: 'Record deleted' });\r\n         \r\n         \r\n        },\r\n        reject: () => {\r\n          this.messageservice.add({ severity: 'info', detail: 'Delete rejected' });\r\n        }\r\n    });\r\n  }\r\nelse if(this.translate.currentLang == 'Ar')\r\n {\r\n  this.confirmationService.confirm({     \r\n    message: 'هل انت متأكد من مسح هذا العنصر من القائمة الرئيسيه',\r\n    header: 'تاكيد عملية المسح',\r\n    icon: 'pi pi-info-circle',\r\n    \r\n    accept: () => {\r\n      this.deleteOrigin(originId)\r\n      this.messageservice.add({ severity: 'info', detail: 'تم المسح' });\r\n\r\n    },\r\n    reject: () => {\r\n      this.messageservice.add({ severity: 'info', detail: 'رفض عمليه المسح' });\r\n    },\r\n    acceptLabel:\"نعم\",\r\n    rejectLabel:\"لا\",\r\n  });\r\n }\r\n}\r\n\r\n\r\n}\r\n","<div>\r\n    <p-dialog [(visible)]=\"originDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">{{'origin.AddNewOrigin'|translate}}</h3>\r\n                </div>\r\n\r\n            </div>\r\n            <form>\r\n\r\n                <fieldset class=\"tab\">\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"originCode\">{{'origin.OriginCode'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"originCode\" [ngModelOptions]=\"{standalone: true}\"\r\n                                placeholder=\"{{'origin.OriginCode'|translate}}\" [(ngModel)]=\"originObj.originCode\" autofocus>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"englishName\">{{'origin.englishName'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"englishName\" [ngModelOptions]=\"{standalone: true}\"\r\n                                placeholder=\"{{'origin.englishName'|translate}}\" [(ngModel)]=\"originObj.englishName\" autofocus>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"arabicName\">{{'origin.arabicName'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"arabicName\" [ngModelOptions]=\"{standalone: true}\"\r\n                                placeholder=\"{{'origin.arabicName'|translate}}\" [(ngModel)]=\"originObj.arabicName\" autofocus>\r\n                        </div>\r\n                       \r\n                    </div>\r\n\r\n                </fieldset>\r\n                <p-dialog [(visible)]=\"errorDialog\" [style]=\"{width: '350px'}\">\r\n                    <p-header style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n                    <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{error}}</span>\r\n                </p-dialog>\r\n            </form>\r\n\r\n        </ng-template>\r\n\r\n        <ng-template pTemplate=\"footer\">\r\n            <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\" class=\"p-button-text\" (click)=\"hideDialog()\"\r\n                value=\"cancel\"></button>\r\n            <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\" class=\"p-button-text\" (click)=\"saveOrigin()\"\r\n                value=\"save\"></button>\r\n\r\n\r\n        </ng-template>\r\n    </p-dialog>\r\n\r\n\r\n  \r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Origin } from 'src/app/Shared/Models/Origin';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-new-origin',\r\n  templateUrl: './new-origin.component.html',\r\n  styleUrls: ['./new-origin.component.css']\r\n})\r\nexport class NewOriginComponent implements OnInit {\r\n  originDialog: boolean;\r\n  originObj: Origin;\r\n  submitted: boolean;\r\n  errorDialog: boolean;\r\n  error:string\r\n  constructor(private sharedService: SharedService, private router: Router, private translate:TranslateService,\r\n    private messageService:MessageService) { }\r\n\r\n  ngOnInit() {\r\n    this.errorDialog=false\r\n    this.originObj = {\r\n      id: 0,\r\n      originCode: '',\r\n      arabicName: '',\r\n      englishName: ''\r\n    }\r\n    this.openNew()\r\n\r\n  }\r\n\r\n  openNew() {\r\n    this.originDialog = true\r\n    this.submitted = false;\r\n\r\n  }\r\n\r\n  hideDialog() {\r\n    this.originDialog = false;\r\n    this.submitted = false;\r\n    this.router.navigate(['/home/origins/']);\r\n  }\r\n\r\n  saveOrigin() {\r\n    this.submitted = true;\r\n    this.addOrigin();\r\n   \r\n  }\r\n\r\n  addOrigin() {\r\n    this.sharedService.addNewOrigin(this.originObj).subscribe(data => { \r\n       this.router.navigate(['/home/origins/'])},\r\n       error=>{\r\n        this.errorDialog=true;\r\n      // this.error=error.error.message\r\n\r\n       if (this.translate.currentLang == 'En') {\r\n        if (error.error.status == 'code') {\r\n          this.error = error.error.message;\r\n        }\r\n        if (error.error.status == 'name') {\r\n          this.error = error.error.message;\r\n        }\r\n\r\n        if (error.error.status == 'nameAr') {\r\n          this.error = error.error.message;\r\n        }\r\n      }  if (this.translate.currentLang == 'Ar')  {\r\n        if (error.error.status == 'code') {\r\n          this.error = error.error.messageAr;\r\n        }\r\n        if (error.error.status == 'name') {\r\n          this.error = error.error.messageAr;\r\n        }\r\n\r\n        if (error.error.status == 'nameAr') {\r\n          this.error = error.error.messageAr;\r\n        }\r\n      }\r\n    return false;\r\n      });\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"card\">\r\n        <p-toast posinset=\"top-right\"></p-toast>\r\n\r\n        <div class=\"card-body\" >\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-11\"><h5 class=\"p-m-0\">{{'Manufacturer.ManageManufacturers'|translate}}</h5></div>\r\n                <div class=\"col-md-1\" style=\"text-align: right;\">     \r\n                    <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary p-button-rounded p-mr-2\"\r\n                    routerLink=\"/home/addManufacturer\" pTooltip=\"Add a New Manufacturer\"\r\n                    tooltipPosition=\"right\"></button>\r\n                </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\"><br/></div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\"> \r\n        <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n        <p-table #dt [value]=\"manufacturersList\" [rows]=\"10\" styleClass=\"p-datatable-responsive-demo\"[paginator]=\"true\" [(selection)]=\"selectedmanufacturers\"\r\n            [rowHover]=\"true\" dataKey=\"id\"  styleClass=\"p-datatable-striped\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            [showCurrentPageReport]=\"true\" [globalFilterFields]=\"['manufacturerName','manufacturerNameAr','code']\">\r\n            <ng-template pTemplate=\"caption\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n              \r\n\r\n                    <span class=\"p-input-icon-right\">\r\n                        <i class=\"pi pi-search\"></i>\r\n                        <input pInputText type=\"text\" class=\"form-control\"\r\n                            (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                            placeholder=\"{{'search.Search'|translate}}...\" />\r\n                    </span>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th pSortableColumn=\"code\">{{'Manufacturer.manufacturerCode'|translate}} <p-sortIcon\r\n                        field=\"code\"></p-sortIcon>\r\n                </th>\r\n                    <th pSortableColumn=\"manufacturerName\">{{'Manufacturer.manufacturerName'|translate}} <p-sortIcon\r\n                            field=\"manufacturerName\"></p-sortIcon>\r\n                    </th>\r\n\r\n                    <th style=\"width: 10%;\">{{'Actions.Action'|translate}}</th>\r\n                </tr>\r\n                <tr>\r\n                    <th><input pInputText type=\"text\" \r\n                        (input)=\"dt.filter($event.target.value, 'code', 'contains')\"\r\n                        [value]=\"dt.filters['code']?.value\"\r\n                        placeholder=\"{{'Manufacturer.SearchbyCode'|translate}}\"\r\n                        class=\"p-column-filter form-control\"></th>\r\n                    <th>\r\n                        <input pInputText type=\"text\"  *ngIf=\"translate.currentLang==='En'\"\r\n                            (input)=\"dt.filter($event.target.value, 'manufacturerName', 'contains')\"\r\n                            [value]=\"dt.filters['manufacturerName']?.value\"\r\n                            placeholder=\"{{'Manufacturer.SearchbyName'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n\r\n                            <input pInputText type=\"text\"  *ngIf=\"translate.currentLang==='Ar'\"\r\n                            (input)=\"dt.filter($event.target.value, 'manufacturerNameAr', 'contains')\"\r\n                            [value]=\"dt.filters['manufacturerNameAr']?.value\"\r\n                            placeholder=\"{{'Manufacturer.SearchbyName'|translate}}\"\r\n                            class=\"p-column-filter form-control\">                  \r\n                    </th>\r\n\r\n\r\n\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-manufacturer>\r\n                <tr>\r\n                    <td  style=\"text-align: inherit;\">{{manufacturer.code}}</td>\r\n                    <td  style=\"text-align: inherit;\">\r\n                        {{translate.currentLang == \"En\" ?\r\n                        manufacturer.manufacturerName:manufacturer.manufacturerNameAr}}\r\n                    </td>\r\n\r\n\r\n                    <td>\r\n                        <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-info edit\"\r\n                            (click)=\"openNew(manufacturer)\" pTooltip=\"edit a manufacturer\"\r\n                            tooltipPosition=\"top\"></button>\r\n\r\n                        <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\"\r\n                            (click)=\"confirmDelete(manufacturer.id,manufacturer.manufacturerName)\"></button>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"summary\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    {{'In total there are.In total there are'|translate}} {{manufacturersList ? manufacturersList.length : 0 }} priorities.\r\n                </div>\r\n            </ng-template>\r\n        </p-table></div></div>\r\n    </div></div>\r\n    <p-dialog [(visible)]=\"manufacturerDialog\" [style]=\"{width: '800px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">{{'Manufacturer.EditManufacturer'|translate}}</h3>\r\n                </div>\r\n\r\n            </div>\r\n            <form (ngSubmit)=\"EditManufacturerForm.valid && updateManfacturer()\" #EditManufacturerForm=\"ngForm\">\r\n\r\n                <fieldset class=\"tab\">\r\n\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"code\">{{'Manufacturer.manufacturerCode'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"code\" name=\"code\"\r\n                                #code=\"ngModel\" placeholder=\"{{'Manufacturer.manufacturerCode'|translate}}\"\r\n                                [(ngModel)]=\"manufacturer.code\"\r\n                                [class.is-invalid]=\"code.touched && code.errors || EditManufacturerForm.submitted\"\r\n                                [class.is-valid]=\"code.valid && EditManufacturerForm.submitted\" required\r\n                                pTooltip=\"Please, enter code\" tooltipPosition=\"bottom\">\r\n                            <div\r\n                                *ngIf=\"(code.touched || EditManufacturerForm.submitted) && code.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'Manufacturer.Required'|translate}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"manufacturerName\">{{'Manufacturer.manufacturerName'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"manufacturerName\" name=\"manufacturerEnName\"\r\n                                pTooltip=\"Enter a Name\" tooltipPosition=\"bottom\" #manufacturerEnName=\"ngModel\"\r\n                                [(ngModel)]=\"manufacturer.manufacturerName\"\r\n                                [class.is-invalid]=\"manufacturerEnName.touched && manufacturerEnName.errors || EditManufacturerForm.submitted\"\r\n                                [class.is-valid]=\"manufacturerEnName.valid && EditManufacturerForm.submitted\" required>\r\n                            <div\r\n                                *ngIf=\"(manufacturerEnName.touched || EditManufacturerForm.submitted) && manufacturerEnName.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'Manufacturer.Required'|translate}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"manufacturerNameAr\">{{'Manufacturer.manufacturerNameAr'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"manufacturerName\" name=\"manufacturerArName\"\r\n                                pTooltip=\"Enter a Name in Arabic\" tooltipPosition=\"bottom\"\r\n                                [(ngModel)]=\"manufacturer.manufacturerNameAr\" #manufacturerArName=\"ngModel\"\r\n                                [class.is-invalid]=\"manufacturerArName.touched && manufacturerArName.errors || EditManufacturerForm.submitted\"\r\n                                [class.is-valid]=\"manufacturerArName.valid && EditManufacturerForm.submitted\" required>\r\n                            <div\r\n                                *ngIf=\"(manufacturerArName.touched || EditManufacturerForm.submitted) && manufacturerArName.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'Manufacturer.Required'|translate}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br><Br>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-3\">\r\n                            <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                                class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>\r\n                        </div>\r\n                        <div class=\"col-lg-3\">\r\n                            <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\"\r\n                                class=\"btn btn-info\" value=\"save\" type=\"submit\"></button>\r\n                        </div>\r\n                    </div>\r\n                    <br><Br>\r\n                </fieldset>\r\n            </form>\r\n        </ng-template>\r\n    </p-dialog>\r\n    <p-dialog [(visible)]=\"errorDisplay\" [style]=\"{width: '350px'}\">\r\n        <p-header  style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n       <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{error}}</span>\r\n    </p-dialog>\r\n</div>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Manufacturer } from 'src/app/Shared/Models/Manufacturer';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {ConfirmationService,Message, MessageService} from 'primeng/api';\r\n@Component({\r\n  selector: 'app-manufacturer-list',\r\n  templateUrl: './manufacturer-list.component.html',\r\n  styleUrls: ['./manufacturer-list.component.scss'],\r\n  encapsulation:ViewEncapsulation.None\r\n})\r\nexport class ManufacturerListComponent implements OnInit {\r\n\r\n  manufacturersList: Manufacturer[];\r\n  selectedmanufacturers: Manufacturer[]\r\n  manufacturerDialog: boolean;\r\n  manufacturer: Manufacturer;\r\n  submitted: boolean;\r\n  msgs: Message[] = [];\r\n  error:string;\r\n  errorDisplay:boolean=false;\r\n  constructor(private sharedService: SharedService, \r\n              private router: Router,\r\n              private translate:TranslateService,\r\n              private confirmationService: ConfirmationService,\r\n              private messageservice:MessageService) { }\r\n\r\n  ngOnInit() {\r\n    this.manufacturer={\r\n      id:0,\r\n      manufacturerName:'',\r\n      manufacturerNameAr:'',\r\n      code:''\r\n    }\r\n    this.getAll();\r\n  }\r\n  getAll() {\r\n    this.sharedService.getAllmanufacturer().subscribe(data => { this.manufacturersList = data });\r\n  }\r\n  openNew(m) {\r\n    this.manufacturerDialog = true\r\n    this.submitted = false;\r\n    this.manufacturer = m\r\n  }\r\n  hideDialog() {\r\n    this.manufacturerDialog = false;\r\n    this.submitted = false;\r\n\r\n  }\r\n  saveManufacturer()\r\n  {\r\n    \r\n  }\r\n  updateManfacturer() {\r\n    \r\n    this.sharedService.updateManufacturer(this.manufacturer.id, this.manufacturer).subscribe(\r\n      data => {\r\n        this.submitted = true;\r\n        this.manufacturerDialog=false;\r\n        data=this.manufacturer\r\n      \r\n      },\r\n      error=>{\r\n        this.errorDisplay=true;\r\n        if (this.translate.currentLang == 'En') {\r\n          if (error.error.status == 'code') {\r\n            this.error = error.error.message;\r\n          }\r\n          if (error.error.status == 'name') {\r\n            this.error = error.error.message;\r\n          }\r\n\r\n          if (error.error.status == 'nameAr') {\r\n            this.error = error.error.message;\r\n          }\r\n        }  if (this.translate.currentLang == 'Ar')  {\r\n          if (error.error.status == 'code') {\r\n            this.error = error.error.messageAr;\r\n          }\r\n          if (error.error.status == 'name') {\r\n            this.error = error.error.messageAr;\r\n          }\r\n\r\n          if (error.error.status == 'nameAr') {\r\n            this.error = error.error.messageAr;\r\n          }\r\n        }\r\n        return false;\r\n     });\r\n  }\r\n  deleteManfacturer(manfacturerId) {\r\n      this.sharedService.deleteManufacturer(manfacturerId).subscribe(\r\n        data => { console.log(data), this.getAll() }\r\n      );\r\n  }\r\nconfirmDelete(MId,MName) {\r\nif(this.translate.currentLang == 'En')\r\n {\r\n    this.confirmationService.confirm({\r\n        message: 'Do you want to delete this ' +MName+ ' manufacturer?' ,\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        accept: () => {\r\n            this.deleteManfacturer(MId)\r\n            this.messageservice.add({ severity: 'info', detail: 'Record deleted' });\r\n           \r\n        },\r\n        reject: () => {\r\n          this.messageservice.add({ severity: 'info', detail: 'Delete rejected' });\r\n        }\r\n    });\r\n  }\r\n  if(this.translate.currentLang == 'Ar')\r\n  {\r\n    this.confirmationService.confirm({     \r\n      message: 'هل انت متأكد من مسح' + MName + 'من القائمه الرئيسيه',\r\n      header: 'تاكيد عملية المسح',\r\n      icon: 'pi pi-info-circle',\r\n      \r\n      accept: () => {\r\n        this.deleteManfacturer(MId)\r\n        this.messageservice.add({ severity: 'info', detail: 'تم المسح' });\r\n  \r\n      },\r\n      reject: () => {\r\n        this.messageservice.add({ severity: 'info', detail: 'رفض عمليه المسح' });\r\n      },\r\n      acceptLabel:\"نعم\",\r\n      rejectLabel:\"لا\",\r\n    });\r\n  }\r\n}\r\n\r\n}\r\n","<div>\r\n    <p-dialog [(visible)]=\"manufacturerDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\"  (onHide)=\"hideDialog()\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">{{'Manufacturer.AddNewmanufacturer'|translate}}</h3>\r\n                </div>\r\n\r\n            </div>\r\n            <!-- <span class=\"text-danger error\">{{error}}</span> -->\r\n            <form (ngSubmit)=\"AddManufacturerForm.valid && saveManufacturer()\" #AddManufacturerForm=\"ngForm\">\r\n\r\n                <fieldset class=\"tab\">\r\n\r\n                    <div class=\"row\">\r\n\r\n                        \r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"departmentCode\">{{'Manufacturer.manufacturerCode'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"brandCode\" name=\"brandCode\"\r\n                                #brandCode=\"ngModel\" placeholder=\"{{'Manufacturer.manufacturerCode'|translate}}\"\r\n                                [(ngModel)]=\"manufacturer.code\"\r\n                                [class.is-invalid]=\"brandCode.touched && brandCode.errors || AddManufacturerForm.submitted\"\r\n                                [class.is-valid]=\"brandCode.valid && AddManufacturerForm.submitted\" required\r\n                                pTooltip=\"Please, enter code\" tooltipPosition=\"bottom\">\r\n                            <div\r\n                                *ngIf=\"(brandCode.touched || AddManufacturerForm.submitted) && brandCode.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'Manufacturer.Required'|translate}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"manufacturerName\">{{'Manufacturer.manufacturerName'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"manufacturerName\" name=\"manufacturerEnName\"\r\n                            pTooltip=\"Enter a Name\"tooltipPosition=\"bottom\"   placeholder=\"{{'Manufacturer.manufacturerName'|translate}}\"\r\n                             #manufacturerEnName=\"ngModel\"\r\n                                [(ngModel)]=\"manufacturer.manufacturerName\" \r\n\r\n                                [class.is-invalid]=\"manufacturerEnName.touched && manufacturerEnName.errors || AddManufacturerForm.submitted\" \r\n                                [class.is-valid]=\"manufacturerEnName.valid && AddManufacturerForm.submitted\" required>\r\n                                <div *ngIf=\"(manufacturerEnName.touched || AddManufacturerForm.submitted) && manufacturerEnName.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        {{'Manufacturer.Required'|translate}}                       \r\n                                    </span>\r\n                               </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"manufacturerNameAr\">{{'Manufacturer.manufacturerNameAr'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"manufacturerName\" name=\"manufacturerArName\"\r\n                            pTooltip=\"Enter a Name in Arabic\"tooltipPosition=\"bottom\"  placeholder=\"{{'Manufacturer.manufacturerNameAr'|translate}}\"\r\n                                [(ngModel)]=\"manufacturer.manufacturerNameAr\" #manufacturerArName=\"ngModel\"\r\n                                [class.is-invalid]=\"manufacturerArName.touched && manufacturerArName.errors || AddManufacturerForm.submitted\" \r\n                                [class.is-valid]=\"manufacturerArName.valid && AddManufacturerForm.submitted\" required>\r\n                                <div *ngIf=\"(manufacturerArName.touched || AddManufacturerForm.submitted) && manufacturerArName.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        {{'Manufacturer.Required'|translate}}         \r\n                                    </span>\r\n                               </div>\r\n                        </div>\r\n                    </div>\r\n                    <br><Br>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-3\">\r\n                            <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\" \r\n                            class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>\r\n                      </div>\r\n                      <div class=\"col-lg-3\">\r\n                        <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\" \r\n                        class=\"btn btn-info\" value=\"save\" type=\"submit\"></button>\r\n                      </div>\r\n                    </div>\r\n                    <br><Br>\r\n                </fieldset>\r\n\r\n            </form>\r\n\r\n        </ng-template>\r\n    </p-dialog>\r\n    <p-dialog [(visible)]=\"errorDisplay\" [style]=\"{width: '300px'}\">\r\n        <p-header  style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n       <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{error}}</span>\r\n    </p-dialog>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Manufacturer } from 'src/app/Shared/Models/Manufacturer';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-new-manufacturer',\r\n  templateUrl: './new-manufacturer.component.html',\r\n  styleUrls: ['./new-manufacturer.component.css']\r\n})\r\nexport class NewManufacturerComponent implements OnInit {\r\n  manufacturer:Manufacturer;\r\n  manufacturerDialog:boolean;\r\n  submitted:boolean;\r\n  error:string;\r\n  errorDisplay:boolean=false;\r\n\r\n  constructor(private sharedService:SharedService,private router:Router) { }\r\n\r\n  ngOnInit() {\r\n    this.manufacturer = {\r\n      id: 0,\r\n      manufacturerName: '',\r\n      manufacturerNameAr: '',\r\n      code:''\r\n    }\r\n    this.openNew()\r\n  }\r\n\r\n  openNew() {\r\n    this.manufacturerDialog = true\r\n    this.submitted = false;\r\n  }\r\n\r\n  hideDialog() {\r\n    this.manufacturerDialog = false;\r\n    this.submitted = false;\r\n    this.router.navigate(['/home/Manfacturers/'])\r\n  }\r\n\r\n  saveManufacturer() {\r\n    this.submitted = true;\r\n    this.addManufacturer();\r\n  }\r\n\r\n  addManufacturer() {\r\n    this.sharedService.addNewManufacturer(this.manufacturer).subscribe(\r\n      data => {\r\n        this.router.navigate(['/home/Manfacturers/'])\r\n      //  console.log(data) \r\n    }\r\n      ,error=>{\r\n        this.errorDisplay=true;\r\n        this.error=error.error.message;\r\n      });\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"card\">\r\n        <p-toast posinset=\"top-right\"></p-toast>\r\n\r\n        \r\n        <div class=\"card-body\" >\r\n            <div class=\"row\">\r\n                <div class=\"col-md-11\">      <h5 class=\"p-m-0\">{{'Priority.ManagePriorities'|translate}}</h5></div>\r\n                <div class=\"col-md-1\" style=\"text-align: right;\">     \r\n                    <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary p-button-rounded p-mr-2\"\r\n                    routerLink=\"/home/addpriority\" pTooltip=\"Add a Priority\" tooltipPosition=\"right\"></button>\r\n                </div>\r\n        </div>\r\n          \r\n    \r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\"><br/></div></div>\r\n    \r\n        <div class=\"row\">\r\n                \r\n     \r\n            <div class=\"col-md-12\"> \r\n\r\n        <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n        <p-table #dt [value]=\"prioritiesList\" styleClass=\"p-datatable-responsive-demo\" [rows]=\"10\" [paginator]=\"true\" [(selection)]=\"selectedPriorities\"\r\n            [rowHover]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-striped\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            [showCurrentPageReport]=\"true\" [globalFilterFields]=\"['priorityLevel','priorityLevelAr','code']\">\r\n            <ng-template pTemplate=\"caption\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                \r\n\r\n                    <span class=\"p-input-icon-right\">\r\n                        <i class=\"pi pi-search\"></i>\r\n                        <input pInputText type=\"text\" class=\"form-control\"\r\n                            (input)=\"dt.filterGlobal($event.target.value,'contains')\" placeholder=\"Search...\" />\r\n                    </span>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th pSortableColumn=\"code\">{{'priority.Code'|translate}} <p-sortIcon field=\"code\"></p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"priorityLevel\">{{'priority.priority'|translate}} <p-sortIcon\r\n                            field=\"priorityLevel\"></p-sortIcon>\r\n                    </th>\r\n\r\n                    <th style=\"width: 10%;\">{{'Actions.Action'|translate}}</th>\r\n                </tr>\r\n                <tr>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dt.filter($event.target.value, 'code', 'contains')\"\r\n                            [value]=\"dt.filters['code']?.value\"\r\n                            placeholder=\"{{'Priority.SearchbyCode'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dt.filter($event.target.value, 'priorityLevel', 'contains')\"\r\n                            [value]=\"dt.filters['priorityLevel']?.value\"\r\n                            placeholder=\"{{'search.SearchbypriorityLevel'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n\r\n\r\n\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-priority>\r\n                <tr>\r\n                    <td style=\"text-align: inherit;\">\r\n                        {{priority.code}}\r\n                    </td>\r\n\r\n                    <td style=\"text-align: inherit;\">\r\n                        {{translate.currentLang == \"En\" ? priority.priorityLevel:priority.priorityLevelAr}}\r\n                    </td>\r\n\r\n\r\n                    <td  style=\"text-align: inherit;\">\r\n                        <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-info edit\"\r\n                            (click)=\"openNew(priority)\" pTooltip=\"edit a priority\" tooltipPosition=\"top\"></button>\r\n\r\n                        <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\"\r\n                            (click)=\"confirmDelete(priority.id)\"></button>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"summary\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    {{'In total there are.In total there are'| translate}} {{Priorities ? priorities.length : 0 }} {{'Sidebar.Priorities'|\r\n                    translate}}.\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div></div>\r\n    <p-dialog [(visible)]=\"priorityDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">{{'Priority.EditPriority'|translate}}</h3>\r\n                </div>\r\n\r\n            </div>\r\n            <form (ngSubmit)=\"EditPriorityForm.valid && updatePriority()\" #EditPriorityForm=\"ngForm\">\r\n\r\n                <fieldset class=\"tab\">\r\n\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"priorityLevel\">{{'Priority.PriorityLevel'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"code\" name=\"code\"\r\n                                #code=\"ngModel\" pTooltip=\"Enter a Priority level\" tooltipPosition=\"bottom\"\r\n                                [(ngModel)]=\"priorityObj.code\"\r\n                                [class.is-invalid]=\"code.touched && code.errors || EditPriorityForm.submitted\"\r\n                                [class.is-valid]=\"code.valid && EditPriorityForm.submitted\" required>\r\n                            <div\r\n                                *ngIf=\"(code.touched || EditPriorityForm.submitted) && code.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'Priority.Required'|translate}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"priorityLevel\">{{'Priority.PriorityLevel'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"priorityLevel\" name=\"priorityLevel\"\r\n                                #priorityLevel=\"ngModel\" pTooltip=\"Enter a Priority level\" tooltipPosition=\"bottom\"\r\n                                [(ngModel)]=\"priorityObj.priorityLevel\"\r\n                                [class.is-invalid]=\"priorityLevel.touched && priorityEnLevel.errors || EditPriorityForm.submitted\"\r\n                                [class.is-valid]=\"priorityLevel.valid && EditPriorityForm.submitted\" required>\r\n                            <div\r\n                                *ngIf=\"(priorityLevel.touched || EditPriorityForm.submitted) && priorityLevel.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'Priority.Required'|translate}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"priorityLevel\">{{'Priority.PriorityLevelAr'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"priorityLevel\" name=\"priorityArLevel\"\r\n                                #priorityArLevel=\"ngModel\" pTooltip=\"Enter a priorityLevel in Arabic\"\r\n                                tooltipPosition=\"bottom\" [(ngModel)]=\"priorityObj.priorityLevelAr\"\r\n                                [class.is-invalid]=\"priorityArLevel.touched && priorityArLevel.errors || EditPriorityForm.submitted\"\r\n                                [class.is-valid]=\"priorityArLevel.valid && EditPriorityForm.submitted\" required>\r\n                            <div\r\n                                *ngIf=\"(priorityArLevel.touched || EditPriorityForm.submitted) && priorityArLevel.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'Priority.Required'|translate}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                                class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\"\r\n                                class=\"btn btn-info\" value=\"save\" type=\"submit\"></button>\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                </fieldset>\r\n\r\n            </form>\r\n\r\n        </ng-template>\r\n    </p-dialog>\r\n\r\n        \r\n<p-dialog [(visible)]=\"errorDisplay\" [style]=\"{width: '350px'}\">\r\n    <p-header  style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n   <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{errorMessage}}</span>\r\n</p-dialog>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Priority } from 'src/app/Shared/Models/Priority';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {ConfirmationService,Message, MessageService} from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-priorities-list',\r\n  templateUrl: './priorities-list.component.html',\r\n  styleUrls: ['./priorities-list.component.scss']\r\n})\r\nexport class PrioritiesListComponent implements OnInit {\r\n  selectedPriorities: Priority[]\r\n  priorityDialog: boolean;\r\n  priorityObj: Priority\r\n  submitted: boolean;\r\n  prioritiesList: Priority[];\r\n  msgs: Message[] = [];\r\n  errorMessage: string = '';\r\n  errorDisplay: boolean = false;\r\n  result:boolean=false;\r\n\r\n\r\n  constructor(private sharedService: SharedService, \r\n              private router: Router,\r\n              private translate:TranslateService,\r\n              private confirmationService: ConfirmationService,\r\n              private messageservice:MessageService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAll()\r\n  }\r\n  getAll() {\r\n    this.sharedService.getAllpriorities().subscribe(data => { this.prioritiesList = data });\r\n\r\n  }\r\n  openNew(p) {\r\n    this.priorityDialog = true\r\n    this.submitted = false;\r\n    this.priorityObj = p;\r\n    }\r\n  hideDialog() {\r\n    this.priorityDialog = false;\r\n    this.submitted = false;\r\n    \r\n  }\r\n  updatePriority() {\r\n    this.submitted = true;\r\n    \r\n    this.sharedService.updatePriority(this.priorityObj.id, this.priorityObj).subscribe(data => \r\n      {this.hideDialog()},\r\n      (error) => {\r\n        this.errorDisplay = true;\r\n        console.log(\"error.error.status\",error.error.status)\r\n console.log(\"this.translate.currentLang \",this.translate.currentLang )\r\n        \r\n        if (this.translate.currentLang == 'En') {\r\n          if (error.error.status == 'code') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n          if (error.error.status == 'name') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n          if (error.error.status == 'nameAr') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n        }  if (this.translate.currentLang == 'Ar')  {\r\n          if (error.error.status == 'code') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n          if (error.error.status == 'name') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n          if (error.error.status == 'nameAr') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n        }\r\n        return false;\r\n      });\r\n    \r\n  }\r\n  deletePriority(priorityId) {\r\n      this.sharedService.deletePriority(priorityId).subscribe(\r\n        data => {  this.getAll() }\r\n      );\r\n  }\r\n  confirmDelete(pId) {\r\n    if (this.translate.currentLang == 'En')\r\n    {\r\n    this.confirmationService.confirm({\r\n        message: 'Do you want to delete this level of priority ?' ,\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        accept: () => {\r\n            this.deletePriority(pId)\r\n            this.messageservice.add({ severity: 'info', detail: 'Record deleted' });\r\n           \r\n        },\r\n        reject: () => {\r\n         this.messageservice.add({ severity: 'info', detail: 'Record deleted' });\r\n        }\r\n    });\r\n  }\r\n  if (this.translate.currentLang == 'Ar')\r\n  {\r\n    this.confirmationService.confirm({\r\n      message: 'هل أنت متأكد من حذف هذا العنصر' ,\r\n      header: 'تأكيد المسح',\r\n      icon: 'pi pi-info-circle',\r\n      accept: () => {\r\n          this.deletePriority(pId)\r\n          this.messageservice.add({ severity: 'info', detail: 'تم المسح' });\r\n         \r\n      },\r\n      reject: () => {\r\n        this.messageservice.add({ severity: 'info', detail: 'رفض عمليه المسح' });\r\n      },\r\n      acceptLabel:\"نعم\",\r\n      rejectLabel:\"لا\",\r\n  });\r\n  }\r\n}\r\n}\r\n","<div>\r\n    <p-dialog [(visible)]=\"priorityDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\" (onHide)=\"hideDialog()\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">{{'Priority.AddNewPriority'|translate}}</h3>\r\n                </div>\r\n\r\n            </div>\r\n            <form (ngSubmit)=\"AddPriorityForm.valid && savePriority()\" #AddPriorityForm=\"ngForm\">\r\n\r\n                <fieldset class=\"tab\">\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"Code\"> {{'Priority.Code'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"priorityCode\"\r\n                             name=\"priorityCode\" #priorityCode=\"ngModel\"\r\n                             pTooltip=\"Enter a Priority code\" tooltipPosition=\"bottom\"  [(ngModel)]=\"priorityObj.code\" \r\n                                [class.is-invalid]=\"priorityCode.touched && priorityCode.errors || AddPriorityForm.submitted\" \r\n                                [class.is-valid]=\"priorityCode.valid && AddPriorityForm.submitted\" required>\r\n                                <div *ngIf=\"(priorityCode.touched || AddPriorityForm.submitted) && priorityCode.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        {{'Priority.Required'|translate}}                         \r\n                                    </span>\r\n                               </div>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"priorityLevel\">{{'Priority.PriorityLevel'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"priorityLevel\"\r\n                             name=\"priorityLevel\" #priorityLevel=\"ngModel\"\r\n                             pTooltip=\"Enter a Priority level\"tooltipPosition=\"bottom\"  [(ngModel)]=\"priorityObj.priorityLevel\" \r\n                                [class.is-invalid]=\"priorityLevel.touched && priorityLevel.errors || AddPriorityForm.submitted\" \r\n                                [class.is-valid]=\"priorityLevel.valid && AddPriorityForm.submitted\" required>\r\n                                <div *ngIf=\"(priorityLevel?.touched || AddPriorityForm.submitted) && priorityLevel.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        {{'Priority.Required'|translate}}                          \r\n                                    </span>\r\n                               </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"priorityArLevel\">{{'Priority.PriorityLevelAr'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"priorityArLevel\" name=\"priorityArLevel\" #priorityArLevel=\"ngModel\"\r\n                            pTooltip=\"Enter a priorityLevel in Arabic\"tooltipPosition=\"bottom\" [(ngModel)]=\"priorityObj.priorityLevelAr\" \r\n                                [class.is-invalid]=\"priorityArLevel.touched && priorityArLevel.errors || AddPriorityForm.submitted\" \r\n                                [class.is-valid]=\"priorityArLevel.valid && AddPriorityForm.submitted\" required>\r\n                                <div *ngIf=\"(priorityArLevel.touched || AddPriorityForm.submitted) && priorityArLevel.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        {{'Priority.Required'|translate}}                             \r\n                                    </span>\r\n                               </div>\r\n                        </div>\r\n                    </div>\r\n                    <br><br>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\" \r\n                            class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>                        \r\n                      </div>\r\n                      <div class=\"col-md-6\">\r\n                        <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\" \r\n                        class=\"btn btn-info\" value=\"save\" type=\"submit\"></button>\r\n                      </div>\r\n                    </div>\r\n                </fieldset>\r\n\r\n            </form>\r\n\r\n        </ng-template>\r\n    </p-dialog>\r\n\r\n            \r\n<p-dialog [(visible)]=\"errorDisplay\" [style]=\"{width: '350px'}\">\r\n    <p-header  style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n   <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{errorMessage}}</span>\r\n</p-dialog>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Priority } from 'src/app/Shared/Models/Priority';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n@Component({\r\n  selector: 'app-new-priority',\r\n  templateUrl: './new-priority.component.html',\r\n  styleUrls: ['./new-priority.component.css']\r\n})\r\nexport class NewPriorityComponent implements OnInit {\r\n  priorityObj: Priority;\r\n  submitted: boolean;\r\n  priorityDialog: boolean;\r\n\r\n  errorMessage: string = '';\r\n  errorDisplay: boolean = false;\r\n\r\n\r\n  constructor(private sharedService: SharedService, private router: Router,\r\n              private translate:TranslateService) { }\r\n\r\n  ngOnInit() {\r\n    this.priorityObj = {\r\n      id: 0,\r\n      priorityLevel: '',\r\n      description: '',\r\n      priorityLevelAr: '',\r\n      descriptionAr: '',\r\n      code:''\r\n\r\n\r\n    }\r\n    this.openNew()\r\n\r\n  }\r\n\r\n  openNew() {\r\n    this.priorityDialog = true\r\n    this.submitted = false;\r\n\r\n  }\r\n\r\n  hideDialog() {\r\n    this.priorityDialog = false;\r\n    this.submitted = false;\r\n     this.router.navigate(['/home/priorities/'])\r\n  }\r\n\r\n  savePriority() {\r\n    this.submitted = true;\r\n    this.addPriority();\r\n    \r\n  }\r\n\r\n  addPriority() {\r\n    this.sharedService.addNewPriority(this.priorityObj).subscribe(data => { \r\n      console.log(data) ,this.hideDialog()\r\n    },\r\n    (error) => {\r\n      this.errorDisplay = true;\r\n      if (this.translate.currentLang == 'En') {\r\n        if (error.error.status == 'code') {\r\n          this.errorMessage = error.error.message;\r\n        }\r\n        if (error.error.status == 'name') {\r\n          this.errorMessage = error.error.message;\r\n        }\r\n        if (error.error.status == 'nameAr') {\r\n          this.errorMessage = error.error.message;\r\n        }\r\n      }  if (this.translate.currentLang == 'Ar')  {\r\n        if (error.error.status == 'code') {\r\n          this.errorMessage = error.error.messageAr;\r\n        }\r\n        if (error.error.status == 'name') {\r\n          this.errorMessage = error.error.messageAr;\r\n        }\r\n        if (error.error.status == 'nameAr') {\r\n          this.errorMessage = error.error.messageAr;\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n\r\n    <div class=\"card\">\r\n        <p-toast posinset=\"top-right\"></p-toast>\r\n        <div class=\"card-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-11\">\r\n                    <h5>{{\"department.Managedepartments\"|translate}}</h5>\r\n                </div>\r\n                <div class=\"col-md-1\" style=\"text-align: right;\">\r\n                    <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary p-button-rounded p-mr-2\"\r\n                        routerLink=\"/home/addDepartment\" pTooltip=\"add a department\" tooltipPosition=\"right\"></button>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\"><br /></div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n                    <p-table #dt [value]=\"departmentsList\" [rows]=\"10\" [paginator]=\"true\"\r\n                        styleClass=\"p-datatable-responsive-demo\" [(selection)]=\"selectedDepartments\" [rowHover]=\"true\"\r\n                        dataKey=\"id\" styleClass=\"p-datatable-striped\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        [showCurrentPageReport]=\"true\"\r\n                        [globalFilterFields]=\"['departmentName','departmentNameAr','departmentCode']\">\r\n                        <ng-template pTemplate=\"caption\">\r\n                            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                                <!-- <h5 class=\"p-m-0\">{{'department.Managedepartments'|translate}}</h5> -->\r\n\r\n                                <span class=\"p-input-icon-right\">\r\n                                    <i class=\"pi pi-search\"></i>\r\n                                    <input pInputText type=\"text\" class=\"form-control\"\r\n                                        (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                                        placeholder=\"{{'search.Search'|translate}}...\" />\r\n                                </span>\r\n                            </div>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"header\">\r\n                            <tr>\r\n\r\n                                <th style=\"text-align: inherit;\" pSortableColumn=\"departmentCode\">\r\n                                    {{'department.Code'|translate}} <p-sortIcon field=\"departmentCode\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                                <th style=\"text-align: inherit;\" pSortableColumn=\"departmentName\">\r\n                                    {{'department.DepartmentName'|translate}} <p-sortIcon field=\"departmentName\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n\r\n                                <th style=\"text-align: inherit; width: 10%;\">{{'Actions.Action'|translate}}</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th style=\"text-align: inherit;\">\r\n                                    <input pInputText type=\"text\"\r\n                                        (input)=\"dt.filter($event.target.value, 'departmentCode', 'contains')\"\r\n                                        [value]=\"dt.filters['departmentCode']?.value\"\r\n                                        placeholder=\"{{'department.SearchbyCode'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n                                </th>\r\n                                <th>\r\n                                    <input pInputText type=\"text\" *ngIf=\"translate.currentLang==='En'\"\r\n                                        (input)=\"dt.filter($event.target.value, 'departmentName', 'contains')\"\r\n                                        [value]=\"dt.filters['departmentName']?.value\"\r\n                                        placeholder=\"{{'department.SearchbyName'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n\r\n                                    <input pInputText type=\"text\" *ngIf=\"translate.currentLang==='Ar'\"\r\n                                        (input)=\"dt.filter($event.target.value, 'departmentNameAr', 'contains')\"\r\n                                        [value]=\"dt.filters['departmentNameAr']?.value\"\r\n                                        placeholder=\"{{'department.SearchbyName'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n\r\n                                </th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"body\" let-dept>\r\n                            <tr>\r\n                                <td style=\"text-align: inherit;\">{{dept.departmentCode}}</td>\r\n                                <td style=\"text-align: inherit;\">\r\n                                    {{translate.currentLang == \"En\" ? dept.departmentName:dept.departmentNameAr}}\r\n                                </td>\r\n                                <td style=\"text-align: inherit;\">\r\n                                    <button pButton pRipple icon=\"pi pi-pencil\"\r\n                                        class=\"p-button-rounded p-button-info edit\" (click)=\"openNew(dept)\"\r\n                                        pTooltip=\"edit a department\" tooltipPosition=\"top\"></button>\r\n\r\n                                    <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\"\r\n                                        (click)=\"confirmDelete(dept.id)\" pTooltip=\"delete a department\"\r\n                                        tooltipPosition=\"top\"></button>\r\n                                </td>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"summary\">\r\n                            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                                {{'In total there are.In total there are'|translate}} {{Departments ? Departments.length\r\n                                : 0 }} {{\"Sidebar.Departments\"|\r\n                                translate}}.\r\n                            </div>\r\n                        </ng-template>\r\n                    </p-table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p-dialog [(visible)]=\"departmentDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <h3 class=\"title\">{{'department.EditDepartment'|translate}}</h3>\r\n            </div>\r\n        </div>\r\n        <form (ngSubmit)=\"EditDepartmentForm.valid && updateDepartment()\" #EditDepartmentForm=\"ngForm\">\r\n            <fieldset class=\"tab\">\r\n                <div class=\"row\">\r\n                    <input type=\"hidden\" [(ngModel)]=\"departmentObj.id\" [ngModelOptions]=\"{standalone: true}\" />\r\n\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"departmentCode\">{{'department.Code'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"departmentCode\" name=\"departmentCode\"\r\n                            #departmentCode=\"ngModel\" placeholder=\"{{'department.Code'|translate}}\"\r\n                            [(ngModel)]=\"departmentObj.departmentCode\"\r\n                            [class.is-invalid]=\"departmentCode.touched && departmentCode.errors || EditDepartmentForm.submitted\"\r\n                            [class.is-valid]=\"departmentCode.valid && EditDepartmentForm.submitted\" required\r\n                            pTooltip=\"Please,Enter A departmentCode\" tooltipPosition=\"bottom\">\r\n                        <div\r\n                            *ngIf=\"(departmentCode.touched || EditDepartmentForm.submitted) && departmentCode.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                {{'department.Required'|translate}}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"departmentName\">{{'department.DepartmentName'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"departmentName\" name=\"departmentEnName\"\r\n                            #departmentEnName=\"ngModel\" placeholder=\"{{'department.DepartmentName'|translate}}\"\r\n                            [(ngModel)]=\"departmentObj.departmentName\"\r\n                            [class.is-invalid]=\"departmentEnName.touched && departmentEnName.errors || EditDepartmentForm.submitted\"\r\n                            [class.is-valid]=\"departmentEnName.valid && EditDepartmentForm.submitted\" required\r\n                            pTooltip=\"Please,Enter A DepartmentName in English\" tooltipPosition=\"bottom\">\r\n                        <div\r\n                            *ngIf=\"(departmentEnName.touched || EditDepartmentForm.submitted) && departmentEnName.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                {{'department.Required'|translate}}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"departmentName\">{{'department.DepartmentNameAr'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"departmentName\" name=\"departmentArName\"\r\n                            #departmentArName=\"ngModel\" placeholder=\"{{'department.DepartmentNameAr'|translate}}\"\r\n                            [(ngModel)]=\"departmentObj.departmentNameAr\"\r\n                            [class.is-invalid]=\"departmentArName.touched && departmentArName.errors || EditDepartmentForm.submitted\"\r\n                            [class.is-valid]=\"departmentArName.valid && EditDepartmentForm.submitted\" required\r\n                            pTooltip=\"Please,Enter A DepartmentName in Arabic\" tooltipPosition=\"bottom\">\r\n                        <div\r\n                            *ngIf=\"(departmentArName.touched || EditDepartmentForm.submitted) && departmentArName.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                {{'department.Required'|translate}}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\"><br /></div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                            class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\"\r\n                            class=\"btn btn-info\" value=\"save\" type=\"submit\"></button>\r\n                    </div>\r\n                </div>\r\n                <br><br>\r\n            </fieldset>\r\n        </form>\r\n    </ng-template>\r\n</p-dialog>\r\n\r\n<p-dialog [(visible)]=\"errorDisplay\" [style]=\"{width: '350px'}\">\r\n    <p-header style=\"color: rgb(181, 4, 4);\"> {{'General.Error'|translate}} </p-header>\r\n    <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{errorMessage}}</span>\r\n</p-dialog>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Department } from 'src/app/Shared/Models/Department';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {ConfirmationService,Message, MessageService} from 'primeng/api';\r\n@Component({\r\n  selector: 'app-departments-list',\r\n  templateUrl: './departments-list.component.html',\r\n  styleUrls: ['./departments-list.component.scss'],\r\n  encapsulation:ViewEncapsulation.None\r\n})\r\nexport class DepartmentsListComponent implements OnInit {\r\n\r\n  selectedDepartments: Department[]\r\n  departmentDialog: boolean;\r\n  departmentObj: Department\r\n  submitted: boolean;\r\n  departmentsList: Department[];\r\n\r\n\r\n  errorMessage: string = '';\r\n  errorDisplay: boolean = false;\r\n  result:boolean=false;\r\n\r\n\r\n  \r\n  msgs: Message[] = [];\r\n  constructor(private sharedService: SharedService, \r\n              private router: Router,\r\n              private translate:TranslateService,\r\n              private confirmationService: ConfirmationService,\r\n              private messageservice:MessageService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAll()\r\n    this.departmentObj={\r\n      id:0,\r\n      departmentCode:'',\r\n      departmentName:'',\r\n      departmentNameAr:''\r\n    }\r\n  }\r\n  getAll() {\r\n    this.sharedService.getAllDepartments().subscribe(data => { this.departmentsList = data });\r\n  }\r\n  openNew(dept) {\r\n    this.departmentDialog = true\r\n    this.submitted = false;\r\n    this.departmentObj = dept\r\n  }\r\n  hideDialog() {\r\n    this.departmentDialog = false;\r\n    this.submitted = false;\r\n   \r\n  }\r\n  updateDepartment() {\r\n    this.submitted = true;\r\n    this.sharedService.updateDepartment(this.departmentObj.id, this.departmentObj).subscribe(data => {\r\n      this.hideDialog()},     (error) => {\r\n        this.errorDisplay = true;\r\n        if (this.translate.currentLang == 'En') {\r\n          if (error.error.status == 'code') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n          if (error.error.status == 'name') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n          if (error.error.status == 'nameAr') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n        }  if (this.translate.currentLang == 'Ar')  {\r\n          if (error.error.status == 'code') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n          if (error.error.status == 'name') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n          if (error.error.status == 'nameAr') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n        }\r\n        return false;\r\n      });\r\n    \r\n  }\r\n  deleteDepartment(deptId) {\r\n      this.sharedService.deleteDepartment(deptId).subscribe(\r\n        data => { this.getAll() }\r\n      );\r\n  }\r\n  confirmDelete(DId) {\r\n    if (this.translate.currentLang == 'En')\r\n    {\r\n    this.confirmationService.confirm({\r\n        message: 'Do you want to delete this department ?' ,\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        accept: () => {\r\n            this.deleteDepartment(DId)\r\n            this.messageservice.add({ severity: 'info', detail: 'Record deleted' });\r\n        },\r\n        reject: () => {\r\n          this.messageservice.add({ severity: 'info', detail: 'Delete rejected' });\r\n        }\r\n    });\r\n  }\r\n  if (this.translate.currentLang == 'Ar')\r\n  {\r\n    this.confirmationService.confirm({\r\n      message: 'هل أنت متأكد من مسح هذا القسم' ,\r\n      header: 'تأكيد المسح',\r\n      icon: 'pi pi-info-circle',\r\n      accept: () => {\r\n          this.deleteDepartment(DId)\r\n          this.messageservice.add({ severity: 'info', detail: 'تم المسح' });\r\n      },\r\n      reject: () => {\r\n        this.messageservice.add({ severity: 'info', detail: 'رفض عمليه المسح' });\r\n      },\r\n      acceptLabel:\"نعم\",\r\n      rejectLabel:\"لا\",\r\n  });\r\n\r\n  }\r\n}\r\n}\r\n","<div>\r\n    <p-dialog [(visible)]=\"departmentDialog\" [style]=\"{width: '800px'}\" [modal]=\"true\" styleClass=\"p-fluid\" (onHide)=\"hideDialog()\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">{{'department.AddNewDepartment'|translate}}</h3>\r\n                </div>\r\n\r\n            </div>\r\n            <form (ngSubmit)=\"AddDepartmentForm.valid && saveDepartment()\" #AddDepartmentForm=\"ngForm\">\r\n\r\n                <fieldset class=\"tab\">\r\n\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"departmentCode\">{{'department.Code'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"departmentCode\" name=\"departmentCode\"\r\n                                #departmentCode=\"ngModel\" placeholder=\"{{'department.Code'|translate}}\"\r\n                                [(ngModel)]=\"departmentObj.departmentCode\"\r\n                                [class.is-invalid]=\"departmentCode.touched && departmentCode.errors || AddDepartmentForm.submitted\"\r\n                                [class.is-valid]=\"departmentCode.valid && AddDepartmentForm.submitted\" required\r\n                                pTooltip=\"Please,Enter A departmentCode\" tooltipPosition=\"bottom\">\r\n                            <div\r\n                                *ngIf=\"(departmentCode.touched || AddDepartmentForm.submitted) && departmentCode.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'department.Required'|translate}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"departmentName\">{{'department.DepartmentName'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"departmentName\"\r\n                             name=\"departmentName\" #departmentEnName=\"ngModel\"\r\n                                placeholder=\"{{'department.DepartmentName'|translate}}\" [(ngModel)]=\"departmentObj.departmentName\" \r\n                                [class.is-invalid]=\"departmentEnName.touched && departmentEnName.errors || AddDepartmentForm.submitted\" \r\n                                [class.is-valid]=\"departmentEnName.valid && AddDepartmentForm.submitted\" required\r\n                                pTooltip=\"Please,Enter A DepartmentName in English\" tooltipPosition=\"bottom\">\r\n                                <div *ngIf=\"(departmentEnName.touched || AddDepartmentForm.submitted) && departmentEnName.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        {{'department.Required'|translate}}                             \r\n                                    </span>\r\n                               </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"departmentArName\">{{'department.DepartmentNameAr'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"departmentArName\" name=\"departmentArName\"\r\n                             #departmentArName=\"ngModel\"\r\n                                placeholder=\"{{'department.DepartmentNameAr'|translate}}\" [(ngModel)]=\"departmentObj.departmentNameAr\" \r\n                                [class.is-invalid]=\"departmentArName.touched && departmentArName.errors || AddDepartmentForm.submitted\" \r\n                                [class.is-valid]=\"departmentArName.valid && AddDepartmentForm.submitted\" required\r\n                                pTooltip=\"Please,Enter A DepartmentName in Arabic\" tooltipPosition=\"bottom\">\r\n                                <div *ngIf=\"(departmentArName.touched || AddDepartmentForm.submitted) && departmentArName.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        {{'department.Required'|translate}}                               \r\n                                    </span>\r\n                               </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\"><br/></div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-6\">\r\n                            <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                            class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>                      \r\n                      </div>\r\n                      <div class=\"col-lg-6\">\r\n                            <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\" \r\n                            class=\"btn btn-info\" value=\"save\" type=\"submit\"></button>\r\n                      </div>\r\n                    </div>\r\n                    <br><br>\r\n                </fieldset>\r\n\r\n            </form>\r\n\r\n           \r\n        </ng-template>\r\n    </p-dialog>\r\n\r\n        \r\n    <p-dialog [(visible)]=\"errorDisplay\" [style]=\"{width: '350px'}\">\r\n        <p-header  style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n       <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{errorMessage}}</span>\r\n    </p-dialog>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { error } from 'jquery';\r\nimport { Department } from 'src/app/Shared/Models/Department';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-new-department',\r\n  templateUrl: './new-department.component.html',\r\n  styleUrls: ['./new-department.component.css']\r\n})\r\nexport class NewDepartmentComponent implements OnInit {\r\n\r\n  departmentObj:Department;\r\n  departmentDialog:boolean;\r\n  submitted:boolean;\r\n\r\n  errorDisplay:boolean=false;\r\n  errorMessage:string=\"\";\r\n\r\n  constructor(private sharedService:SharedService,private router:Router, private translate:TranslateService) { }\r\n\r\n  ngOnInit() {\r\n    this.departmentObj = {\r\n      id: 0,\r\n      departmentName: '',\r\n\r\n      departmentNameAr: '',\r\n\r\n      departmentCode:''\r\n\r\n    }\r\n    this.openNew()\r\n\r\n  }\r\n\r\n  openNew() {\r\n    this.departmentDialog = true\r\n    this.submitted = false;\r\n\r\n  }\r\n\r\n  hideDialog() {\r\n    this.departmentDialog = false;\r\n    this.submitted = false;\r\n    this.router.navigate(['/home/Departments/'])\r\n  }\r\n\r\n  saveDepartment() {\r\n    this.submitted = true;\r\n    this.addDepartment();\r\n   \r\n  }\r\n\r\n  addDepartment() \r\n  {\r\n   \r\n    this.sharedService.addNewDepartment(this.departmentObj).subscribe(data => \r\n      { \r\n        this.router.navigate(['/home/Departments/']) \r\n      }, \r\n      \r\n      error => {\r\n        this.errorDisplay = true;\r\n        if (this.translate.currentLang == 'En') {\r\n          if (error.error.status == 'code') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n          if (error.error.status == 'name') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n          if (error.error.status == 'nameAr') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n        }  if (this.translate.currentLang == 'Ar')  {\r\n          if (error.error.status == 'code') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n          if (error.error.status == 'name') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n          if (error.error.status == 'nameAr') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n        }\r\n        return false;\r\n      }\r\n      \r\n      );\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"card\">\r\n        <p-toast posinset=\"top-right\"></p-toast>\r\n\r\n        <div class=\"card-body\" >\r\n            <div class=\"row\">\r\n                <div class=\"col-md-11\">    <h5 class=\"p-m-0\">{{'status.Managestatus'|translate}}</h5></div>\r\n                <div class=\"col-md-1\" style=\"text-align: right;\">     \r\n                    <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary p-button-rounded p-mr-2\"\r\n                    routerLink=\"/home/addStatus\" pTooltip=\"edit a user\" tooltipPosition=\"right\"></button>\r\n                </div>\r\n        </div>\r\n          \r\n    \r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\"><br/></div></div>\r\n    \r\n        <div class=\"row\">\r\n                \r\n     \r\n            <div class=\"col-md-12\"> \r\n\r\n\r\n\r\n\r\n\r\n        <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n        <p-table #dt [value]=\"statusesList\" styleClass=\"p-datatable-responsive-demo\" [rows]=\"10\" [paginator]=\"true\" [(selection)]=\"selectedStatuses\"\r\n            [rowHover]=\"true\" dataKey=\"id\"  styleClass=\"p-datatable-striped\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            [showCurrentPageReport]=\"true\" [globalFilterFields]=\"['status','statusAr','code']\">\r\n            <ng-template pTemplate=\"caption\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                \r\n\r\n                    <span class=\"p-input-icon-right\">\r\n                        <i class=\"pi pi-search\"></i>\r\n                        <input pInputText type=\"text\" class=\"form-control\"\r\n                            (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                            placeholder=\"{{'search.Search'|translate}}...\" />\r\n                    </span>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th pSortableColumn=\"code\">{{'status.Code'|translate}} <p-sortIcon field=\"code\"></p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"status\">{{'status.status'|translate}} <p-sortIcon field=\"status\"></p-sortIcon>\r\n                    </th>\r\n\r\n                    <th  style=\"width: 10%;\">{{'Actions.Action'|translate}}</th>\r\n                </tr>\r\n                <tr>\r\n                    <th>\r\n                        <input pInputText type=\"text\" (input)=\"dt.filter($event.target.value, 'code', 'contains')\"\r\n                            [value]=\"dt.filters['code']?.value\" placeholder=\"{{'status.SearchbyCode'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th>\r\n                        <input pInputText type=\"text\" (input)=\"dt.filter($event.target.value, 'status', 'contains')\"\r\n                            [value]=\"dt.filters['status']?.value\" placeholder=\"{{'status.SearchbyName'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n\r\n                    <th style=\"width: 10%;\"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-status>\r\n                <tr>\r\n                    <td style=\"text-align: inherit;\">\r\n                    {{status.code}}\r\n                    </td>\r\n                    <td style=\"text-align: inherit;\">\r\n                        {{translate.currentLang == \"En\" ? status.status:status.statusAr}}\r\n                    </td>\r\n                    <td style=\"text-align: inherit;width: 10%;\">\r\n                        <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-info edit\"\r\n                            (click)=\"openNew(status)\" pTooltip=\"edit a status\" tooltipPosition=\"top\"></button>\r\n                        <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\"\r\n                            (click)=\"confirmDelete(status.id)\"></button>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"summary\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    {{'In total there are.In total there are'| translate}} {{Statuses ? Statuses.length : 0 }} {{\"Sidebar.Status\" |\r\n                    translate}}.\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div></div>\r\n    <p-dialog [(visible)]=\"statusDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">{{'status.Editstatus'|translate}}</h3>\r\n                </div>\r\n            </div>\r\n            <form (ngSubmit)=\"EditStatusForm.valid && updateStatus()\" #EditStatusForm=\"ngForm\">\r\n                <fieldset class=\"tab\">\r\n                    <div class=\"row\">\r\n\r\n                     <div class=\"col-md-12\">\r\n                            <label for=\"status\">{{'status.Code'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"statusCode\" name=\"statusCode\" #statusCode=\"ngModel\"\r\n                                pTooltip=\"Enter Code\" tooltipPosition=\"bottom\" [(ngModel)]=\"equipmentStatusObj.code\"\r\n                                [class.is-invalid]=\"statusCode.touched && statusCode.errors || EditStatusForm.submitted\"\r\n                                [class.is-valid]=\"statusCode.valid && EditStatusForm.submitted\" required>\r\n                            <div *ngIf=\"(statusCode.touched || EditStatusForm.submitted) && statusCode.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                     {{'status.Required'|translate}}      \r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        \r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"status\">{{'status.status'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"Enstatus\" name=\"Enstatus\" #Enstatus=\"ngModel\"\r\n                                pTooltip=\"Enter a Name\" tooltipPosition=\"bottom\" [(ngModel)]=\"equipmentStatusObj.status\"\r\n                                [class.is-invalid]=\"Enstatus.touched && Enstatus.errors || EditStatusForm.submitted\"\r\n                                [class.is-valid]=\"Enstatus.valid && EditStatusForm.submitted\" required>\r\n                            <div *ngIf=\"(Enstatus.touched || EditStatusForm.submitted) && Enstatus.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'status.Required'|translate}}      \r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"status\">{{'status.statusAr'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"Arstatus\" name=\"Arstatus\" #Arstatus=\"ngModel\"\r\n                                pTooltip=\"Enter a Name in Arabic\" tooltipPosition=\"bottom\" [(ngModel)]=\"equipmentStatusObj.statusAr\"\r\n                                [class.is-invalid]=\"Arstatus.touched && Arstatus.errors || EditStatusForm.submitted\"\r\n                                [class.is-valid]=\"Arstatus.valid && EditStatusForm.submitted\" required>\r\n                            <div *ngIf=\"(Arstatus.touched || EditStatusForm.submitted) && Arstatus.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'status.Required'|translate}}      \r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br><br>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                                class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\"\r\n                                class=\"btn btn-info\" value=\"save\" type=\"submit\"></button>\r\n                        </div>\r\n                    </div>\r\n                    <br><br>\r\n                </fieldset>\r\n            </form>\r\n        </ng-template>\r\n    </p-dialog>\r\n\r\n    <p-dialog [(visible)]=\"errorDisplay\" [style]=\"{width: '350px'}\">\r\n        <p-header  style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n       <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{errorMessage}}</span>\r\n    </p-dialog>\r\n    \r\n</div></div></div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Status } from 'src/app/Shared/Models/Status';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {ConfirmationService,Message, MessageService} from 'primeng/api';\r\n@Component({\r\n  selector: 'app-statuses-list',\r\n  templateUrl: './statuses-list.component.html',\r\n  styleUrls: ['./statuses-list.component.scss']\r\n})\r\nexport class StatusesListComponent implements OnInit {\r\n\r\n  selectedStatuses: Status[]\r\n  statusDialog: boolean;\r\n  equipmentStatusObj: Status\r\n  submitted: boolean;\r\n  msgs: Message[] = [];\r\n  statusesList: Status[];\r\n  errorMessage: string = '';\r\n  errorDisplay: boolean = false;\r\n\r\n\r\n  \r\n  constructor(private sharedService: SharedService,\r\n              private router: Router,\r\n              private translate:TranslateService,\r\n              private confirmationService: ConfirmationService,\r\n              private messageservice:MessageService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAll()\r\n  }\r\n  getAll() {\r\n    this.sharedService.getAllstatuses().subscribe(data => { this.statusesList = data });\r\n\r\n  }\r\n  openNew(S) {\r\n    this.statusDialog = true\r\n    this.submitted = false;\r\n    this.equipmentStatusObj = S\r\n  }\r\n  hideDialog() {\r\n    this.statusDialog = false;\r\n    this.submitted = false;\r\n\r\n  }\r\n  updateStatus() {\r\n    this.submitted = true;\r\n    this.sharedService.updateStatus(this.equipmentStatusObj.id, this.equipmentStatusObj).subscribe(data =>\r\n       {\r\n         this.hideDialog();\r\n         this.router.navigate(['/home/Statuses/']);\r\n        },\r\n      (error) => {\r\n        this.errorDisplay = true;\r\n        if (this.translate.currentLang == 'En') {\r\n          if (error.error.status == 'code') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n          if (error.error.status == 'name') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n          if (error.error.status == 'nameAr') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n        }  if (this.translate.currentLang == 'Ar')  {\r\n          if (error.error.status == 'code') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n          if (error.error.status == 'name') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n          if (error.error.status == 'nameAr') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n        }\r\n        return false;\r\n      }\r\n      )\r\n  }\r\n  deleteStatus(modeId) {\r\n      this.sharedService.deleteStatus(modeId).subscribe(\r\n        data => {  this.getAll() }\r\n      );\r\n  }\r\n  confirmDelete(SId) {\r\n    if (this.translate.currentLang == 'En')\r\n    {\r\n    this.confirmationService.confirm({\r\n        message: 'Do you want to delete this status ?' ,\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        accept: () => {\r\n            this.deleteStatus(SId)\r\n            this.messageservice.add({ severity: 'info', detail: 'Record deleted' });          \r\n        },\r\n        reject: () => {\r\n          this.messageservice.add({ severity: 'info', detail: 'Delete rejected' });\r\n        }\r\n    });\r\n  }\r\n  if (this.translate.currentLang == 'Ar')\r\n  {\r\n    this.confirmationService.confirm({\r\n      message: 'هل أنت متأكد من مسح الحالة؟' ,\r\n      header: 'تأكيد المسح',\r\n      icon: 'pi pi-info-circle',\r\n      accept: () => {\r\n          this.deleteStatus(SId)\r\n          this.messageservice.add({ severity: 'info', detail: 'تم المسح' });\r\n      },\r\n      reject: () => {\r\n        this.messageservice.add({ severity: 'info', detail: 'رفض عمليه المسح' });\r\n      },\r\n      acceptLabel:\"نعم\",\r\n      rejectLabel:\"لا\",\r\n  });\r\n  }\r\n}\r\n}","<div>\r\n    <p-dialog [(visible)]=\"statusDialog\" [style]=\"{width: '800px'}\" [modal]=\"true\" styleClass=\"p-fluid\" (onHide)=\"hideDialog()\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">{{'status.AddNewStatus'|translate}}</h3>\r\n                </div>\r\n\r\n            </div>\r\n            <form (ngSubmit)=\"AddStatusForm.valid && saveStatus()\" #AddStatusForm=\"ngForm\">\r\n\r\n                <fieldset class=\"tab\">\r\n\r\n                    <div class=\"row\">\r\n\r\n         <div class=\"col-md-12\">\r\n                            <label for=\"status\">{{'status.Code'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"statusCode\" name=\"statusCode\" #statusCode=\"ngModel\"\r\n                            pTooltip=\"Enter a Name\"tooltipPosition=\"bottom\" [(ngModel)]=\"equipmentStatusObj.code\" \r\n                                [class.is-invalid]=\"statusCode.touched && statusCode.errors || AddStatusForm.submitted\" \r\n                                [class.is-valid]=\"statusCode?.valid && AddStatusForm.submitted\" required>\r\n                                <div *ngIf=\"(statusCode?.touched || AddStatusForm.submitted) && statusCode.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        {{'status.Required'|translate}}                    \r\n                                    </span>\r\n                               </div>\r\n                        </div>\r\n\r\n                        \r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"status\">{{'status.status'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"Enstatus\" name=\"Enstatus\" #Enstatus=\"ngModel\"\r\n                            pTooltip=\"Enter a Name\"tooltipPosition=\"bottom\" [(ngModel)]=\"equipmentStatusObj.status\" \r\n                                [class.is-invalid]=\"Enstatus.touched && Enstatus.errors || AddStatusForm.submitted\" \r\n                                [class.is-valid]=\"Enstatus.valid && AddStatusForm.submitted\" required>\r\n                                <div *ngIf=\"(Enstatus.touched || AddStatusForm.submitted) && Enstatus.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        {{'status.Required'|translate}}                            \r\n                                    </span>\r\n                               </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"status\">{{'status.statusAr'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"status\" name=\"Arstatus\" #Arstatus=\"ngModel\"\r\n                            pTooltip=\"Enter a Name in Arabic\"tooltipPosition=\"bottom\"  [(ngModel)]=\"equipmentStatusObj.statusAr\" \r\n                                [class.is-invalid]=\"Arstatus.touched && Arstatus.errors || AddStatusForm.submitted\" \r\n                                [class.is-valid]=\"Arstatus.valid && AddStatusForm.submitted\" required>\r\n                                <div *ngIf=\"(Arstatus.touched || AddStatusForm.submitted) && Arstatus.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        {{'status.Required'|translate}}                       \r\n                                    </span>\r\n                               </div>\r\n                        </div>\r\n                    </div>\r\n                    <br><br>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\" \r\n                            class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>                       \r\n                      </div>\r\n                      <div class=\"col-md-6\">\r\n                        <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\" \r\n                        class=\"btn btn-info\" value=\"save\" type=\"submit\"></button>\r\n                      </div>\r\n                    </div>\r\n                    <br><br>\r\n                </fieldset>\r\n\r\n            </form>\r\n\r\n        </ng-template>\r\n    </p-dialog>\r\n\r\n    <p-dialog [(visible)]=\"errorDisplay\" [style]=\"{width: '350px'}\">\r\n        <p-header  style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n       <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{errorMessage}}</span>\r\n    </p-dialog>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Status } from 'src/app/Shared/Models/Status';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-new-status',\r\n  templateUrl: './new-status.component.html',\r\n  styleUrls: ['./new-status.component.css']\r\n})\r\nexport class NewStatusComponent implements OnInit {\r\n\r\n  equipmentStatusObj: Status;\r\n  submitted: boolean;\r\n  statusDialog: boolean;\r\n  errorMessage: string = '';\r\n  errorDisplay: boolean = false;\r\n\r\n\r\n  constructor(private sharedService: SharedService, private router: Router ,private translate:TranslateService) { }\r\n\r\n  ngOnInit() {\r\n    this.equipmentStatusObj = {\r\n      id: 0,\r\n      status: '',\r\n      statusAr: '',\r\n      selected: false,\r\n      code:''\r\n    }\r\n    this.openNew()\r\n\r\n  }\r\n\r\n  openNew() {\r\n    this.statusDialog = true\r\n    this.submitted = false;\r\n\r\n  }\r\n\r\n  hideDialog() {\r\n    this.statusDialog = false;\r\n    this.submitted = false;\r\n      this.router.navigate(['/home/Statuses/'])\r\n  }\r\n\r\n  saveStatus() {\r\n    this.submitted = true;\r\n    this.addStatus();\r\n  \r\n  }\r\n\r\n  addStatus() {   \r\n    this.sharedService.addNewStatus(this.equipmentStatusObj).subscribe(data => {\r\n      this.hideDialog()\r\n       },\r\n       (error) => {\r\n         this.errorDisplay = true;\r\n         if (this.translate.currentLang == 'En') {\r\n           if (error.error.status == 'code') {\r\n             this.errorMessage = error.error.message;\r\n           }\r\n           if (error.error.status == 'name') {\r\n             this.errorMessage = error.error.message;\r\n           }\r\n           if (error.error.status == 'nameAr') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n         }  if (this.translate.currentLang == 'Ar')  {\r\n           if (error.error.status == 'code') {\r\n             this.errorMessage = error.error.messageAr;\r\n           }\r\n           if (error.error.status == 'name') {\r\n             this.errorMessage = error.error.messageAr;\r\n           }\r\n           if (error.error.status == 'nameAr') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n         }\r\n         return false;\r\n       });\r\n  }\r\n\r\n}\r\n"," <div class=\"container-fluid\">\r\n\r\n\r\n        \r\n        <div class=\"card\" style=\"margin: 0px 10px;\" >\r\n            <p-toast posinset=\"top-right\"></p-toast>\r\n            <div class=\"card-body\" >\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-11\"><h5 class=\"p-m-0\">{{'supplier.ManageSuppliers'|translate}}</h5></div>\r\n                    <div class=\"col-md-1\" style=\"text-align: right;\">     \r\n                        <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary p-button-rounded p-mr-2\"\r\n                        routerLink=\"/home/addSupplier\" pTooltip=\"Add a Supplier\" tooltipPosition=\"right\"></button>\r\n                    </div>\r\n            </div>\r\n              \r\n        \r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\"><br/></div></div>\r\n        \r\n            <div class=\"row\">\r\n                    \r\n         \r\n                <div class=\"col-md-12\"> \r\n        <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n        <p-table #dt [value]=\"suppliersList\"  [rows]=\"10\" [paginator]=\"true\" [(selection)]=\"selectedSuppliers\"\r\n            [rowHover]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-striped\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            [showCurrentPageReport]=\"true\" [globalFilterFields]=\"['supplierName','supplierNameAr','supplierCode']\">\r\n            <ng-template pTemplate=\"caption\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n             \r\n\r\n                    <span class=\"p-input-icon-right\">\r\n                        <i class=\"pi pi-search\"></i>\r\n                        <input pInputText type=\"text\" class=\"form-control\" style=\"text-align: inherit;\"\r\n                            (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                            placeholder=\"{{'search.Search'|translate}}...\" />\r\n                    </span>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n\r\n                    <th pSortableColumn=\"supplierCode\">{{'supplier.Code'|translate}} <p-sortIcon field=\"supplierCode\">\r\n                    </p-sortIcon>\r\n                </th>\r\n\r\n\r\n\r\n                    <th pSortableColumn=\"supplierName\">{{'name.name'|translate}} <p-sortIcon field=\"supplierName\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n\r\n                    <th style=\"width: 10%;\">{{'Actions.Action'|translate}}</th>\r\n                </tr>\r\n                <tr>\r\n                    <th>\r\n                        <input pInputText type=\"text\" \r\n                            (input)=\"dt.filter($event.target.value, 'SupplierCode', 'contains')\"\r\n                            [value]=\"dt.filters['supplierCode']?.value\"\r\n                            placeholder=\"{{'supplier.SearchbyCode'|translate}}\" class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th>\r\n                        <input pInputText type=\"text\"  *ngIf=\"translate.currentLang =='En'\" \r\n                            (input)=\"dt.filter($event.target.value, 'SupplierName', 'contains')\"\r\n                            [value]=\"dt.filters['supplierName']?.value\"\r\n                            placeholder=\"{{'supplier.SearchbyName'|translate}}\" class=\"p-column-filter form-control\" />\r\n\r\n    <input pInputText type=\"text\"  *ngIf=\"translate.currentLang =='Ar'\" \r\n                            (input)=\"dt.filter($event.target.value, 'SupplierNameAr', 'contains')\"\r\n                            [value]=\"dt.filters['supplierNameAr']?.value\"\r\n                            placeholder=\"{{'supplier.SearchbyName'|translate}}\" class=\"p-column-filter form-control\" /> \r\n\r\n                    </th>\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-supplier>\r\n                <tr>\r\n                    <td style=\"text-align: inherit;\">\r\n                        {{supplier.supplierCode}}\r\n                    </td>\r\n                    <td style=\"text-align: inherit;\">\r\n                        {{translate.currentLang == \"En\" ? supplier.supplierName:supplier.supplierNameAr}}\r\n                    </td>\r\n\r\n\r\n                    <td style=\"text-align: inherit;\">\r\n                        <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-info edit\"\r\n                            (click)=\"openNew(supplier)\" pTooltip=\"edit a supplier\" tooltipPosition=\"top\"></button>\r\n\r\n                        <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\"\r\n                            (click)=\"confirmDelete(supplier.id,supplier.supplierName)\" pTooltip=\"delete a supplier\"\r\n                            tooltipPosition=\"top\"></button>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"summary\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    {{'In total there are.In total there are'| translate}} {{Suppliers ? Suppliers.length : 0 }} {{\"Sidebar.Suppliers\" |\r\n                    translate}}.\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div></div>\r\n    <p-dialog [(visible)]=\"supplierDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">{{'supplier.Editsupplier'|translate}}</h3>\r\n                </div>\r\n\r\n            </div>\r\n            <form (ngSubmit)=\"EditSupplierForm.valid && updateSupplier()\" #EditSupplierForm=\"ngForm\">\r\n                <fieldset class=\"tab\">\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"supplierName\">{{'supplier.Code'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"supplierCode\" name=\"supplierCode\"\r\n                                #supplierCode=\"ngModel\" pTooltip=\"Enter a Name\" tooltipPosition=\"bottom\"\r\n                                [(ngModel)]=\"supplierObj.supplierCode\"\r\n                                [class.is-invalid]=\"supplierCode.touched && supplierCode.errors || EditSupplierForm.submitted\"\r\n                                [class.is-valid]=\"supplierCode.valid && EditSupplierForm.submitted\" required>\r\n                            <div\r\n                                *ngIf=\"(supplierCode.touched || EditSupplierForm.submitted) && supplierCode.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'ecricodes.Required'|translate}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"supplierName\">{{'supplier.SupplierName'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"supplierName\" name=\"supplierName\"\r\n                                #supplierEnName=\"ngModel\" pTooltip=\"Enter a Name\" tooltipPosition=\"bottom\"\r\n                                [(ngModel)]=\"supplierObj.supplierName\"\r\n                                [class.is-invalid]=\"supplierEnName.touched && supplierEnName.errors || EditSupplierForm.submitted\"\r\n                                [class.is-valid]=\"supplierEnName.valid && EditSupplierForm.submitted\" required>\r\n                            <div\r\n                                *ngIf=\"(supplierEnName.touched || EditSupplierForm.submitted) && supplierEnName.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'ecricodes.Required'|translate}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"supplierName\">{{'supplier.SupplierNameAr'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"supplierName\" name=\"supplierArName\"\r\n                                #supplierArName=\"ngModel\" pTooltip=\"Enter a Name in Arabic\" tooltipPosition=\"bottom\"\r\n                                [(ngModel)]=\"supplierObj.supplierNameAr\"\r\n                                [class.is-invalid]=\"supplierArName.touched && supplierArName.errors || EditSupplierForm.submitted\"\r\n                                [class.is-valid]=\"supplierArName.valid && EditSupplierForm.submitted\" required>\r\n                            <div\r\n                                *ngIf=\"(supplierArName.touched || EditSupplierForm.submitted) && supplierArName.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'ecricodes.Required'|translate}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br><br>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-6\">\r\n                            <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                                class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>\r\n                        </div>\r\n                        <div class=\"col-lg-6\">\r\n                            <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\"\r\n                                class=\"btn btn-info\" value=\"save\" type=\"submit\"></button>\r\n                        </div>\r\n                    </div>\r\n                    <br><br>\r\n                </fieldset>\r\n            </form>\r\n        </ng-template>\r\n    </p-dialog>\r\n\r\n    \r\n    <p-dialog [(visible)]=\"errorDisplay\" [style]=\"{width: '350px'}\">\r\n        <p-header  style=\"color: rgb(181, 4, 4);\">     {{'General.Error'|translate}} </p-header>\r\n       <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{errorMessage}}</span>\r\n    </p-dialog>\r\n</div></div>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Supplier } from 'src/app/Shared/Models/Supplier';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {ConfirmationService,Message, MessageService} from 'primeng/api';\r\n@Component({\r\n  selector: 'app-suppliers-list',\r\n  templateUrl: './suppliers-list.component.html',\r\n  styleUrls: ['./suppliers-list.component.scss'],\r\n  encapsulation:ViewEncapsulation.None\r\n})\r\nexport class SuppliersListComponent implements OnInit {\r\n  selectedSuppliers: Supplier[]\r\n  supplierDialog: boolean;\r\n  supplierObj: Supplier\r\n  submitted: boolean;\r\n  suppliersList:Supplier[];\r\n  msgs: Message[] = [];\r\n  errorMessage: string = '';\r\n  errorDisplay: boolean = false;\r\n\r\n  constructor(private sharedService:SharedService,\r\n              private router:Router,\r\n              private translate:TranslateService,\r\n              private confirmationService: ConfirmationService,\r\n              private messageservice:MessageService) { }\r\n\r\n  ngOnInit(){\r\n    this.supplierObj={\r\n      id:0,\r\n      supplierCode:'',\r\n      supplierName:'',\r\n      supplierNameAr:''\r\n    }\r\n    this.getAll();\r\n  }\r\n  getAll(){\r\n    this.sharedService.getAllSuppliers().subscribe(data => { this.suppliersList = data });\r\n\r\n  }\r\n  openNew(s) {\r\n    this.supplierDialog = true\r\n    this.submitted = false;\r\n    this.supplierObj = s\r\n  }\r\n  hideDialog() {\r\n    this.supplierDialog = false;\r\n    this.submitted = false;\r\n    \r\n  }\r\n  updateSupplier() {\r\n    this.submitted = true;\r\n     this.sharedService.updateSupplier(this.supplierObj.id, this.supplierObj).subscribe(data => \r\n      {this.hideDialog()},\r\n      (error) => {\r\n        this.errorDisplay = true;\r\n        if (this.translate.currentLang == 'En') {\r\n          if (error.error.status == 'code') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n          if (error.error.status == 'name') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n          if (error.error.status == 'nameAr') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n        }  if (this.translate.currentLang == 'Ar')  {\r\n          if (error.error.status == 'code') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n          if (error.error.status == 'name') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n          if (error.error.status == 'nameAr') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n        }\r\n        return false;\r\n      });\r\n   \r\n  }\r\n  deleteSupplier(supplierId) {\r\n      this.sharedService.deleteSupplier(supplierId).subscribe(\r\n        data => {  this.getAll() }\r\n      );\r\n  }\r\n  confirmDelete(SId,SName) {\r\n    if (this.translate.currentLang == 'En')\r\n    {\r\n    this.confirmationService.confirm({\r\n        message: 'Do you want to delete '+ SName +' supplier ?' ,\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        accept: () => {\r\n            this.deleteSupplier(SId)\r\n            this.messageservice.add({ severity: 'info', detail: 'Record deleted' });\r\n           \r\n        },\r\n        reject: () => {\r\n            this.messageservice.add({ severity: 'info', detail: 'Delete rejected' });\r\n        }\r\n    });\r\n  }\r\n\r\n  if (this.translate.currentLang == 'Ar')\r\n  {\r\n    this.confirmationService.confirm({\r\n      message: 'هل أنت متأكد من مسح الحالة؟' ,\r\n      header: 'تأكيد المسح',\r\n      icon: 'pi pi-info-circle',\r\n      accept: () => {\r\n          this.deleteSupplier(SId)\r\n          this.messageservice.add({ severity: 'info', detail: 'تم المسح' });\r\n         \r\n      },\r\n      reject: () => {\r\n        this.messageservice.add({ severity: 'info', detail: 'رفض عمليه المسح' });\r\n      },\r\n      acceptLabel:\"نعم\",\r\n      rejectLabel:\"لا\",\r\n  });\r\n  }\r\n\r\n\r\n}\r\n}\r\n","<div>\r\n    <p-dialog [(visible)]=\"supplierDialog\" [style]=\"{width: '800px'}\" [modal]=\"true\" styleClass=\"p-fluid\" (onHide)=\"hideDialog()\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">{{'supplier.AddNewSupplier'|translate}}</h3>\r\n                </div>\r\n\r\n            </div>\r\n            <form (ngSubmit)=\"AddSupplierForm.valid && saveSupplier()\" #AddSupplierForm=\"ngForm\">\r\n\r\n                <fieldset class=\"tab\">\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"supplierName\">{{'supplier.Code'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"supplierCode\" name=\"supplierCode\"\r\n                                #supplierCode=\"ngModel\" pTooltip=\"Enter a Name\" tooltipPosition=\"bottom\"\r\n                                [(ngModel)]=\"supplierObj.supplierCode\"\r\n                                [class.is-invalid]=\"supplierCode.touched && supplierCode.errors || AddSupplierForm.submitted\"\r\n                                [class.is-valid]=\"supplierCode.valid && AddSupplierForm.submitted\" required>\r\n                            <div\r\n                                *ngIf=\"(supplierCode.touched || AddSupplierForm.submitted) && supplierCode.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'ecricodes.Required'|translate}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"supplierName\">{{'supplier.SupplierName'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"supplierName\" name=\"supplierName\" #supplierEnName=\"ngModel\"\r\n                                pTooltip=\"Enter a Name\"tooltipPosition=\"bottom\"  [(ngModel)]=\"supplierObj.supplierName\" \r\n                                [class.is-invalid]=\"supplierEnName.touched && supplierEnName.errors || AddSupplierForm.submitted\" \r\n                                [class.is-valid]=\"supplierEnName.valid && AddSupplierForm.submitted\" required>\r\n                                <div *ngIf=\"(supplierEnName.touched || AddSupplierForm.submitted) && supplierEnName.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        {{'ecricodes.Required'|translate}}                        \r\n                                    </span>\r\n                               </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"supplierName\">{{'supplier.SupplierNameAr'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"supplierName\" name=\"supplierArName\" #supplierArName=\"ngModel\"\r\n                            pTooltip=\"Enter a Name in Arabic\"tooltipPosition=\"bottom\"  [(ngModel)]=\"supplierObj.supplierNameAr\" \r\n                                [class.is-invalid]=\"supplierArName.touched && supplierArName.errors || AddSupplierForm.submitted\" \r\n                                [class.is-valid]=\"supplierArName.valid && AddSupplierForm.submitted\" required>\r\n                                <div *ngIf=\"(supplierArName.touched || AddSupplierForm.submitted) && supplierArName.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        {{'ecricodes.Required'|translate}}                        \r\n                                    </span>\r\n                               </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <br><br>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\" \r\n                            class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>                       \r\n                      </div>\r\n                      <div class=\"col-md-6\">\r\n                        <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\" \r\n                        class=\"btn btn-info\" value=\"save\" type=\"submit\"></button>\r\n                      </div>\r\n                    </div>\r\n                    <br><br>\r\n                </fieldset>\r\n\r\n            </form>\r\n\r\n        </ng-template>\r\n    </p-dialog>\r\n\r\n    <p-dialog [(visible)]=\"errorDisplay\" [style]=\"{width: '350px'}\">\r\n        <p-header  style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n       <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{errorMessage}}</span>\r\n    </p-dialog>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Supplier } from 'src/app/Shared/Models/Supplier';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-new-supplier',\r\n  templateUrl: './new-supplier.component.html',\r\n  styleUrls: ['./new-supplier.component.css']\r\n})\r\nexport class NewSupplierComponent implements OnInit {\r\n\r\n  supplierObj:Supplier;\r\n  supplierDialog:boolean;\r\n  submitted:boolean;\r\n  errorMessage: string = '';\r\n  errorDisplay: boolean = false;\r\n  constructor(private sharedService:SharedService,private router:Router ,private translate:TranslateService) { }\r\n\r\n  ngOnInit() {\r\n    this.supplierObj = {\r\n      id: 0,\r\n      supplierName: '',\r\n     supplierNameAr: '',\r\n      supplierCode:''\r\n\r\n    }\r\n    this.openNew()\r\n\r\n  }\r\n\r\n  openNew() {\r\n    this.supplierDialog = true\r\n    this.submitted = false;\r\n\r\n  }\r\n\r\n  hideDialog() {\r\n    this.supplierDialog = false;\r\n    this.submitted = false;\r\n    this.router.navigate(['/home/Suppliers'])\r\n  }\r\n\r\n  saveSupplier() {\r\n   \r\n    this.addSupplier();\r\n  \r\n  }\r\n\r\n  addSupplier() {\r\n    this.sharedService.addNewSupplier(this.supplierObj).subscribe(data => { \r\n      this.hideDialog() },\r\n      (error) => {\r\n        this.errorDisplay = true;\r\n        if (this.translate.currentLang == 'En') {\r\n          if (error.error.status == 'code') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n          if (error.error.status == 'name') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n          if (error.error.status == 'nameAr') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n        }  if (this.translate.currentLang == 'Ar')  {\r\n          if (error.error.status == 'code') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n          if (error.error.status == 'name') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n          if (error.error.status == 'nameAr') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n        }\r\n        return false;\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","\r\n<div class=\"container-fluid\">\r\n    <div class=\"card\">\r\n        <p-messages [value]=\"msgs\"></p-messages>\r\n        <p-toolbar styleClass=\"p-mb-4\">\r\n            <ng-template pTemplate=\"left\">\r\n                <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary p-button-rounded p-mr-2\"\r\n                pTooltip=\"add a new Mode\" tooltipPosition=\"right\" routerLink=\"/home/addMode\"></button>\r\n            </ng-template>\r\n        </p-toolbar>\r\n        <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n        <p-table #dt [value]=\"modesList\" [rows]=\"10\"styleClass=\"p-datatable-responsive-demo\" [paginator]=\"true\" [(selection)]=\"selectedModes\"\r\n            [rowHover]=\"true\" dataKey=\"id\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            [showCurrentPageReport]=\"true\"\r\n            [globalFilterFields]=\"['requestMode']\">\r\n            <ng-template pTemplate=\"caption\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    <h5 class=\"p-m-0\">Manage Modes</h5>\r\n\r\n                    <span class=\"p-input-icon-right\">\r\n                        <i class=\"pi pi-search\"></i>\r\n                        <input pInputText type=\"text\" class=\"form-control\" (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                            placeholder=\"Search...\" />\r\n                    </span>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n\r\n                    <th pSortableColumn=\"requestMode\">RequestMode <p-sortIcon field=\"requestMode\"></p-sortIcon>\r\n                    </th>\r\n                   \r\n                    <th>Actions</th>\r\n                </tr>\r\n                <tr>\r\n\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dt.filter($event.target.value, 'requestMode', 'contains')\"\r\n                            [value]=\"dt.filters['requestMode']?.value\" placeholder=\"Search by requestMode\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                   \r\n                    \r\n\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-mode>\r\n                <tr>\r\n                    <td>{{mode.requestMode}}</td>\r\n                   \r\n\r\n                    <td>\r\n                        <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-info edit\"\r\n                            (click)=\"openNew(mode)\" pTooltip=\"edit a mode\" tooltipPosition=\"top\"></button>\r\n\r\n                        <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\"\r\n                            (click)=\"confirmDelete(mode.id)\" pTooltip=\"delete a mode\" tooltipPosition=\"top\"></button>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"summary\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    In total there are {{Modes ? Modes.length : 0 }} Modes.\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n    <p-dialog [(visible)]=\"modeDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">Edit Mode</h3>\r\n                </div>\r\n               \r\n            </div>\r\n            <form (ngSubmit)=\"EditModeForm.valid && updateMode()\" #EditModeForm=\"ngForm\">\r\n\r\n                <fieldset class=\"tab\">\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-3\">\r\n                            <label for=\"requestMode\">RequestMode</label>\r\n                            <input type=\"text\" class=\"form-control\" pTooltip=\"Enter a RequestMode\"\r\n                                tooltipPosition=\"bottom\" id=\"requestMode\" name=\"requestMode\" #requestMode=\"ngModel\"\r\n                                [(ngModel)]=\"mode.requestMode\" autofocus required\r\n                                [class.is-invalid]=\"(requestMode.touched && requestMode.errors) || EditModeForm.submitted\"\r\n                                [class.is-valid]=\"requestMode.valid && EditModeForm.submitted\">\r\n                                <div *ngIf=\"(requestMode.touched || EditModeForm.submitted) && requestMode.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        RequestMode is required\r\n                                    </span>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <br/>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-2\">\r\n                            <button pButton pRipple label=\"{{'Actions.Cancel' |translate}}\" icon=\"pi pi-times\"\r\n                                class=\"btn btn-info\" type=\"button\" (click)=\"hideDialog()\" value=\"cancel\"></button>\r\n                        </div>\r\n                        <div class=\"col-lg-2\">\r\n                            <button pButton pRipple label=\"{{'Actions.Save' |translate}}\" icon=\"pi pi-check\"\r\n                                class=\"btn btn-info\" type=\"submit\" value=\"save\"></button>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n\r\n            </form>\r\n\r\n    \r\n\r\n     \r\n\r\n        </ng-template>\r\n    </p-dialog>\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Mode } from 'src/app/Shared/Models/Mode';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport {ConfirmationService,Message} from 'primeng/api';\r\n@Component({\r\n  selector: 'app-modes-list',\r\n  templateUrl: './modes-list.component.html',\r\n  styleUrls: ['./modes-list.component.scss']\r\n})\r\nexport class ModesListComponent implements OnInit {\r\n  selectedModes: Mode[]\r\n  modeDialog: boolean;\r\n  mode: Mode\r\n  submitted: boolean;\r\n  modesList: Mode[];\r\n  msgs: Message[] = [];\r\n  constructor(private sharedService: SharedService, private router: Router,\r\n    private confirmationService: ConfirmationService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAll()\r\n  }\r\n  getAll() {\r\n    this.sharedService.getAllModes().subscribe(data => { this.modesList = data });\r\n\r\n  }\r\n  openNew(m) {\r\n    this.modeDialog = true\r\n    this.submitted = false;\r\n    this.mode = m\r\n    console.log(m)\r\n  }\r\n  hideDialog() {\r\n    this.modeDialog = false;\r\n    this.submitted = false;\r\n   \r\n  }\r\n  updateMode() {\r\n    this.submitted = true;\r\n    console.log(this.mode)\r\n    this.sharedService.updateMode(this.mode.id, this.mode).subscribe(data =>{data=this.mode, console.log(data), this.hideDialog()})\r\n \r\n  }\r\n  deleteMode(modeId) {\r\n      this.sharedService.deleteMode(modeId).subscribe(\r\n        data => { console.log(data), this.getAll() }\r\n      );\r\n  }\r\n  confirmDelete(MId) {\r\n    this.confirmationService.confirm({\r\n        message: 'Do you want to delete this level of Mode ?' ,\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        accept: () => {\r\n            this.deleteMode(MId)\r\n            this.msgs = [{severity:'info', summary:'Confirmed', detail:'Record deleted'}];\r\n            \r\n        },\r\n        reject: () => {\r\n            this.msgs = [{severity:'info', summary:'Rejected', detail:'Delete rejected'}];\r\n        }\r\n    });\r\n}\r\n}\r\n\r\n","<div>\r\n    <p-dialog [(visible)]=\"modeDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">Add New Mode</h3>\r\n                </div>\r\n\r\n            </div>\r\n            <form (ngSubmit)=\"AddModeForm.valid && saveMode()\" #AddModeForm=\"ngForm\">\r\n\r\n                <fieldset class=\"tab\">\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-3\">\r\n                            <label for=\"requestMode\">RequestMode</label>\r\n                            <input type=\"text\" class=\"form-control\" pTooltip=\"Enter a RequestMode\"\r\n                                tooltipPosition=\"bottom\" id=\"requestMode\" name=\"requestMode\" #requestMode=\"ngModel\"\r\n                                [(ngModel)]=\"mode.requestMode\" autofocus required\r\n                                [class.is-invalid]=\"(requestMode.touched && requestMode.errors) || AddModeForm.submitted\"\r\n                                [class.is-valid]=\"requestMode.valid && AddModeForm.submitted\">\r\n                                <div *ngIf=\"(requestMode.touched || AddModeForm.submitted) && requestMode.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        RequestMode is required\r\n                                    </span>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <br/>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-2\">\r\n                            <button pButton pRipple label=\"{{'Actions.Cancel' |translate}}\" icon=\"pi pi-times\"\r\n                                class=\"btn btn-info\" type=\"button\" (click)=\"hideDialog()\" value=\"cancel\"></button>\r\n                        </div>\r\n                        <div class=\"col-lg-2\">\r\n                            <button pButton pRipple label=\"{{'Actions.Save' |translate}}\" icon=\"pi pi-check\"\r\n                                class=\"btn btn-info\" type=\"submit\" value=\"save\"></button>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n\r\n            </form>\r\n\r\n        </ng-template>\r\n\r\n       \r\n    </p-dialog>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Mode } from 'src/app/Shared/Models/Mode';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-new-mode',\r\n  templateUrl: './new-mode.component.html',\r\n  styleUrls: ['./new-mode.component.css']\r\n})\r\nexport class NewModeComponent implements OnInit {\r\n modeDialog: boolean;\r\n  mode: Mode;\r\n  submitted:boolean;\r\n  constructor(private sharedService:SharedService,private router:Router) { }\r\n\r\n  ngOnInit() {\r\n    this.mode = {\r\n      id: 0,\r\n      requestMode: '',\r\n      requestModeAr:''\r\n    }\r\n    this.openNew()\r\n  }\r\n\r\n  openNew() {\r\n    this.modeDialog = true\r\n    this.submitted = false;\r\n  }\r\n\r\n  hideDialog() {\r\n    this.modeDialog = false;\r\n    this.submitted = false;\r\n    this.router.navigate(['/home/Modes/'])\r\n  }\r\n\r\n  saveMode() {\r\n    this.submitted = true;\r\n    this.addMode();\r\n    this.router.navigate(['/home/Modes/'])\r\n  }\r\n\r\n  addMode() {\r\n    this.sharedService.addNewMode(this.mode).subscribe(data => { console.log(data) });\r\n\r\n  }\r\n\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\r\nimport { CalendarOptions, } from '@fullcalendar/angular'; // useful for typechecking\r\nimport { Contract } from 'src/app/Shared/Models/Contract';\r\nimport { ContractRequest } from 'src/app/Shared/Models/ContractRequest';\r\nimport { RequestService } from 'src/app/Shared/Models/RequstService';\r\nimport { ContractService } from 'src/app/Shared/services/contract.service';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\nimport { RequestServiceService } from 'src/app/Shared/services/request-service.service';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  contractObj: Contract\r\n  requestsList: Contract[]\r\n  calendarOptions: CalendarOptions\r\n  // newdate: string\r\n  subject: string\r\n  list: any[] = []\r\n  constructor(private requestService: ContractService,\r\n    private datePipe: DatePipe,\r\n    private equipmentService: EquipmentService) { }\r\n  ngOnInit() {\r\n    this.contractObj = {\r\n      id: 0,\r\n      number: 0,\r\n      startDate: null,\r\n      endDate: null,\r\n      contents: '',\r\n      healthCareUnitId: null,\r\n      subject: '',\r\n      supplierId: null,\r\n      supplierName: '',\r\n      supplierNameAr: '',\r\n      equipmentIDs: []\r\n    }\r\n\r\n    this.requestService.getAllContracts().subscribe(data => {\r\n      this.list = []\r\n      this.requestsList = data, console.log(data),\r\n        this.requestsList.forEach(element => {\r\n          var title = ''\r\n          var date = ''\r\n          var event = { title: element.subject, date: element.startDate.toString() }\r\n          this.list.push(event)\r\n          console.log(this.list)\r\n        });\r\n      this.calendarOptions = {\r\n        initialView: 'dayGridMonth',\r\n        // dateClick: this.handleDateClick.bind(this),\r\n        // bind is important!\r\n        events: this.list\r\n      }\r\n\r\n      console.log(this.calendarOptions.events);\r\n      ;\r\n    })\r\n\r\n    // this.serviceRequest={\r\n    //   modeId:0,\r\n    //   priorityId:0,\r\n    //   employeeEmail:'',\r\n    //   employeeId:'',\r\n    //   EquipmentId:0,\r\n    //   healthDirectoryId:0,\r\n    //   healthDistrictId:0,\r\n    //   id:0,\r\n    //   problemDescription:'',\r\n    //   problemDescriptionAr:'',\r\n    //   requestType:'',\r\n    //   serviceRequestCode:'',\r\n    //   serviceRequestDate:new Date,\r\n    //   serviceRequestTime:'',\r\n    //   serviceRequestTitle:'',\r\n    //   serviceRequestTitleAr:''\r\n    // }\r\n\r\n\r\n\r\n  }\r\n\r\n  handleDateClick(arg) {\r\n    // alert('date click! ' + arg.dateStr + this.newdate)\r\n  }\r\n  // toggleWeekends() {\r\n  //   this.calendarOptions.weekends = !this.calendarOptions.weekends // toggle the boolean!\r\n  // }\r\n}\r\n\r\n\r\n","<div>\r\n    <p-dialog [(visible)]=\"equipmentDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\"\r\n        (onHide)=\"hideDialog()\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div class=\"header\" style=\"margin-top: -20px;\">\r\n                <h5 class=\"title\">{{'masterEquipment.AddEquipmentinmaster' | translate}}</h5>\r\n                <img src=\"./../assets/images/medical-equipment-icon.jpg\" class=\"img\" style=\"margin-top: 60px;width: 40px;height: 40px;\" [alt]=\"product\">\r\n            </div>\r\n\r\n            <form (ngSubmit)=\"AddMasterEquipForm.valid && saveEquipment()\" #AddMasterEquipForm=\"ngForm\">\r\n                <p-tabView [activeIndex]=\"index\" (onChange)=\"handleChange($event)\">\r\n                    <p-tabPanel header=\"{{'equipment.Details' | translate}}\">\r\n                        <fieldset class=\"tab\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6 form-group\">\r\n                                    <label for=\"masterCode\">{{'masterEquipment.MasterCode' | translate}}</label>\r\n\r\n                                    <input type=\"text\" class=\"form-control\" id=\"masterCode\" name=\"masterCode\" #masterCode=\"ngModel\"\r\n                                        pTooltip=\"Enter a code\" tooltipPosition=\"bottom\"\r\n                                        [(ngModel)]=\"masterEquipmentObj.masterCode\"\r\n                                        [class.is-invalid]=\"masterCode.touched && masterCode.errors || AddMasterEquipForm.submitted\"\r\n                                        [class.is-valid]=\"masterCode.valid && AddMasterEquipForm.submitted\">\r\n                                     <div\r\n                                        *ngIf=\"(masterCode.touched || AddMasterEquipForm.submitted) && masterCode.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            {{'ecricodes.Required'|translate}}\r\n                                        </span>\r\n                                    </div> \r\n                                </div>\r\n                                <div class=\"col-md-6 form-group\">\r\n                                    <label for=\"upa\">{{'masterEquipment.upaCode' | translate}}</label>\r\n\r\n\r\n                                    <input type=\"text\" class=\"form-control\" id=\"upa\" name=\"upa\" #upa=\"ngModel\"\r\n                                    pTooltip=\"Enter a UPA code\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"masterEquipmentObj.upaCode\">\r\n                         \r\n\r\n\r\n\r\n                                    <!-- <input type=\"text\" class=\"form-control\" id=\"upa\" name=\"upa\" #upa=\"ngModel\"\r\n                                        pTooltip=\"Enter a UPA code\" tooltipPosition=\"bottom\"\r\n                                        [(ngModel)]=\"masterEquipment.upaCode\"\r\n                                        [class.is-invalid]=\"upa.touched && upa.errors || AddMasterEquipForm.submitted\"\r\n                                        [class.is-valid]=\"upa.valid && AddMasterEquipForm.submitted\" required>\r\n                                    <div *ngIf=\"(upa.touched || AddMasterEquipForm.submitted) && upa.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            UPACode is required\r\n                                        </span>\r\n                                    </div> -->\r\n                                    \r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <label for=\"name\">{{'masterEquipment.Name' | translate}}</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"name\" name=\"EnName\"\r\n                                        [(ngModel)]=\"masterEquipmentObj.name\" #EnName=\"ngModel\"\r\n                                        [class.is-invalid]=\"EnName.touched && EnName.errors || AddMasterEquipForm.submitted\"\r\n                                        [class.is-valid]=\"EnName.valid && AddMasterEquipForm.submitted\"\r\n                                        pTooltip=\"Enter a Name\" tooltipPosition=\"bottom\">\r\n                                    <div\r\n                                        *ngIf=\"(EnName.touched || AddMasterEquipForm.submitted) && EnName.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            {{'ecricodes.Required'|translate}}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <label for=\"nameAr\">{{'masterEquipment.NameAr' | translate}}</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"NameAr\" name=\"NameAr\" #NameAr=\"ngModel\"\r\n                                        [(ngModel)]=\"masterEquipmentObj.nameAr\" pTooltip=\"Enter a Name in Arabic\"\r\n                                        [class.is-invalid]=\"NameAr.touched && NameAr.errors || AddMasterEquipForm.submitted\"\r\n                                        [class.is-valid]=\"NameAr.valid && AddMasterEquipForm.submitted\"\r\n                                        tooltipPosition=\"bottom\">\r\n                                       \r\n                                       \r\n                                       \r\n                                        <div  *ngIf=\"(NameAr.touched || AddMasterEquipForm.submitted) && NameAr.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            {{'ecricodes.Required'|translate}}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6 form-group\">\r\n                                    <label for=\"category\">{{'equipment.Category'| translate}}</label>\r\n                                    <select class=\"form-control\" id=\"category\" name=\"category\" #category=\"ngModel\"\r\n                                        [(ngModel)]=\"masterEquipmentObj.equipmentCategoryId\"\r\n                                        (change)=\"fillSubCategory(masterEquipmentObj.equipmentCategoryId)\" \r\n                                        pTooltip=\"Please Select Category\" tooltipPosition=\"bottom\" [value]=\"0\">\r\n                                        <option selected value=\"0\">--select--</option>\r\n                                        <option *ngFor=\"let cat of categoriesList\" [value]=\"cat.id\">\r\n                                            {{translate.currentLang == \"En\" ? cat.categoryName:cat.categoryNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <!-- <div\r\n                                        *ngIf=\"(category.touched || AddMasterEquipForm.submitted) && category.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            category is required\r\n                                        </span>\r\n                                    </div> -->\r\n                                </div>\r\n                                <div class=\"col-md-6 form-group\">\r\n                                    <label for=\"subCategory\">{{'equipment.SubCategory'| translate}}</label>\r\n                                    <select class=\"form-control\" id=\"subCategory\" name=\"subCategory\"\r\n                                        #subCategory=\"ngModel\"\r\n                                        [(ngModel)]=\"masterEquipmentObj.equipmentSubCategoryId\"  [value]=\"0\"\r\n                                        pTooltip=\"Select A SubCategory\" tooltipPosition=\"bottom\">\r\n                                        <option selected value=\"0\">--select--</option>\r\n                                        <option *ngFor=\"let s of subCategoriesList\" [value]=\"s.id\">\r\n                                            {{translate.currentLang == \"En\" ? s.subCategoryName:s.subCategoryNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <!-- <div\r\n                                        *ngIf=\"(subCategory.touched || AddMasterEquipForm.submitted) && subCategory.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            subCategory name is required\r\n                                        </span>\r\n                                    </div> -->\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\"\r\n                                [hidden]=\"isNextvalid\">Next</button>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\"\r\n                                [hidden]=\"isPrevvalid\">previous</button>\r\n                           \r\n                        </fieldset>\r\n                    </p-tabPanel>\r\n                    <p-tabPanel header=\"{{'equipment.IndustryDetails' | translate}}\">\r\n                        <fieldset class=\"tab\">\r\n                            <legend>{{'equipment.IndustryDetails' | translate}}</legend>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6 form-group\">\r\n                                    <label for=\"manufacturer\">{{'equipment.Manufacturer'| translate}}</label>\r\n\r\n                                    <select class=\"form-control\" id=\"manufacturer\" #manufacturer=\"ngModel\"\r\n                                        name=\"manufacturer\" [(ngModel)]=\"masterEquipmentObj.manufacturerId\"\r\n                                        pTooltip=\"Select Brand\" tooltipPosition=\"bottom\" [value]=\"0\">\r\n                                        <option selected value=\"0\">--select--</option>\r\n                                        <option *ngFor=\"let m of manufacturerList\" [value]=\"m.id\">\r\n                                            {{translate.currentLang == \"En\" ? m.manufacturerName:m.manufacturerNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <!-- <span class=\"text-danger\"\r\n                                        *ngIf=\"(manufacturer.touched || AddMasterEquipForm.submitted) && manufacturer.errors?.required\">\r\n                                        Manufacturer is required\r\n                                    </span> -->\r\n                                <!-- </div>\r\n                                <div class=\"col-md-3 form-group\"> -->\r\n                                    <label for=\"origin\">{{'equipment.Origin'| translate}}</label>\r\n                                    <select class=\"form-control\" id=\"origin\" #origin=\"ngModel\" name=\"origin\"\r\n                                        [(ngModel)]=\"masterEquipmentObj.originId\"  [value]=\"0\"\r\n                                        pTooltip=\"Select Origin\" tooltipPosition=\"bottom\">\r\n                                        <option value=\"0\">--select--</option>\r\n                                        <option *ngFor=\"let o of originsList\" [value]=\"o.id\">{{o.originCode}}</option>\r\n                                    </select>\r\n                                    <!-- <span class=\"text-danger\"\r\n                                        *ngIf=\"(origin.touched || AddMasterEquipForm.submitted) && origin.errors?.required\">\r\n                                        Origin is required\r\n                                    </span> -->\r\n                                <!-- </div>\r\n                                <div class=\"col-md-3\"> -->\r\n                                    <label for=\"ExpectedLifeTime\">{{'equipment.expectedtimelife'| translate}}</label>\r\n                                    <input type=\"number\" pInputText id=\"ExpectedLifeTime\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" class=\"form-control\"\r\n                                        [(ngModel)]=\"masterEquipmentObj.expectedLifeTime\"\r\n                                        pTooltip=\"Enter An ExpectedLifeTime\" tooltipPosition=\"bottom\" />\r\n                                    <!-- <small class=\"p-error\"\r\n                                        *ngIf=\"submitted && !masterEquipmentObj.expectedLifeTime\">Employee\r\n                                        is\r\n                                        required.</small> -->\r\n                                <!-- </div>\r\n                                <div class=\"col-md-3\"> -->\r\n                                    <label for=\"modelNumber\">{{'equipment.modelNumber'| translate}}</label>\r\n                                    <input type=\"text\" pInputText id=\"modelNumber\" class=\"form-control\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"masterEquipmentObj.modelNumber\"\r\n                                        pTooltip=\"Enter A modelNumber\" tooltipPosition=\"bottom\" />\r\n                                <!-- </div>\r\n                                <div class=\"col-md-3\"> -->\r\n                                   \r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <label for=\"priority\">{{'equipment.EquipmentPriority'|translate}}</label>\r\n                                    <div>\r\n                                        <ul class=\"list-group\" pTooltip=\"Select A priority\" tooltipPosition=\"bottom\">\r\n                                            <li class=\"list-group-item\" *ngFor=\"let item of priorityList;let i = index\">\r\n                                                <input type=\"radio\" [(ngModel)]=\"masterEquipmentObj.priorityId\"\r\n                                                    name=\"priority{{i}}\" id=\"priority{{i}}\" #priority=\"ngModel\"\r\n                                                    [value]=\"item.id\" group=\"priority\" [checked]=\"(i === 0)\"/>\r\n                                                {{translate.currentLang == \"En\" ?\r\n                                                item.priorityLevel:item.priorityLevelAr}}\r\n\r\n                                            </li>\r\n                                        </ul>\r\n                                        <!-- <div *ngIf=\"!masterEquipmentObj.priorityId\">\r\n                                            <span class=\"text-danger\">\r\n                                                priority is required\r\n                                            </span>\r\n                                        </div> -->\r\n                                    </div>\r\n<br/>\r\n\r\n                                    <label for=\"versionNumber\">{{'equipment.versionNumber'| translate}}</label>\r\n                                    <input type=\"text\" pInputText id=\"versionNumber\" class=\"form-control\"\r\n                                        [ngModelOptions]=\"{standalone: true}\"\r\n                                        [(ngModel)]=\"masterEquipmentObj.versionNumber\" pTooltip=\"Enter A Version Number\"\r\n                                        tooltipPosition=\"bottom\" />\r\n\r\n                                </div>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\"\r\n                                [hidden]=\"isNextvalid\">Next</button>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\"\r\n                                [hidden]=\"isPrevvalid\">previous</button>\r\n                        </fieldset>\r\n                    </p-tabPanel>\r\n                    <p-tabPanel header=\"{{'Actions.Attachments' |translate}}\">\r\n\r\n                        <fieldset class=\"tab\">\r\n                            <legend>{{'Actions.Attachments' |translate}}</legend>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12\">\r\n\r\n                                    <p-fileUpload name=\"demo1[]\" multiple=\"true\"\r\n                                        url=\"http://biomedicalupd-001-site1.itempurl.com/api/MasterEquipmentAttachment/Masterupload/\"                                      \r\n                                        accept=\".xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf\"\r\n                                        maxFileSize=\"1000000000\">\r\n                                    </p-fileUpload>\r\n                                </div>\r\n                            </div>\r\n \r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-2\">\r\n                                    <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                                        (click)=\"hideDialog()\" type=\"button\" value=\"cancel\"\r\n                                        class=\"btn btn-info\"></button>\r\n                                </div>\r\n                                <div class=\"col-lg-2\">\r\n                                    <button pButton pRipple label=\"{{'Actions.Save' |translate}}\" icon=\"pi pi-check\"\r\n                                        value=\"save\" type=\"submit\" class=\"btn btn-info\"></button>\r\n                                </div>\r\n                            </div>\r\n                            <br>\r\n\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\"\r\n                            [hidden]=\"isNextvalid\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\"\r\n                            [hidden]=\"isPrevvalid\">previous</button>\r\n\r\n                            \r\n                        </fieldset>\r\n                    </p-tabPanel>\r\n\r\n                </p-tabView>\r\n            </form>\r\n        </ng-template>\r\n    </p-dialog>\r\n\r\n    <p-dialog [(visible)]=\"errorDisplay\" [style]=\"{width: '350px'}\">\r\n        <p-header  style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n       <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{errorMessage}}</span>\r\n    </p-dialog>\r\n</div>","<div class=\"container-fluid\">\r\n    <div>\r\n        <!-- <button class=\"btn btn-primary\" (click)=\"toggleWeekends()\">toggle weekends</button> -->\r\n    </div>\r\n    <full-calendar id=\"fullCalendar\"    [options]=\"calendarOptions\"></full-calendar>\r\n</div>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { MasterEquipment } from 'src/app/Shared/Models/MasterEquipment';\r\nimport { Router } from '@angular/router';\r\nimport { MasterequipmentService } from 'src/app/Shared/services/masterequipment.service';\r\nimport { Category } from 'src/app/Shared/Models/Category';\r\nimport { SubCategory } from 'src/app/Shared/Models/SubCategory';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Priority } from 'src/app/Shared/Models/Priority';\r\nimport { Manufacturer } from 'src/app/Shared/Models/Manufacturer';\r\nimport { Origin } from 'src/app/Shared/Models/Origin';\r\nimport { MasterEquipmentAttachments } from 'src/app/Shared/Models/MasterEquipmentAttachments';\r\n@Component({\r\n  selector: 'app-new-master-equipment',\r\n  templateUrl: './new-master-equipment.component.html',\r\n  styleUrls: ['./new-master-equipment.component.css'],\r\n  encapsulation:ViewEncapsulation.None\r\n})\r\nexport class NewMasterEquipmentComponent implements OnInit {\r\n  equipmentDialog: boolean;\r\n  submitted: boolean;\r\n  masterEquipmentObj: MasterEquipment;\r\n  categoriesList: Category[];\r\n  subCategoriesList: SubCategory[];\r\n  index: number = 0;\r\n  isNextvalid: boolean = false;\r\n  isPrevvalid: boolean = true;\r\n  priorityList:Priority[];\r\n  manufacturerList:Manufacturer[];\r\n  originsList:Origin[]\r\n  errorMessage: string=\"\";\r\n  errorDisplay:boolean= false;\r\n  EquipAttachs:MasterEquipmentAttachments[];\r\n  IDs:number[]=[];\r\n\r\n\r\n  constructor(private router: Router, private masterEquipmentService: MasterequipmentService,\r\n    private sharedService: SharedService,\r\n    private translate: TranslateService\r\n  ) { }\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.masterEquipmentObj = {\r\n      id: 0,\r\n      name: '',\r\n      nameAr: '',\r\n      masterCode: '',\r\n      equipmentCategoryId: 0,\r\n      equipmentDescriptionAr: '',\r\n      equipmentSubCategoryId: 0,\r\n      expectedLifeTime: 0,\r\n      manufacturerId: 0,\r\n      manufacturerName:'',\r\n      manufacturerNameAr:'',\r\n      modelNumber: '',\r\n      originId: 0,\r\n      originCode:'',\r\n      priorityId: 0,\r\n      upaCode: '',\r\n      versionNumber: '',\r\n      AttachmentIDs:[]\r\n    }\r\n    this.openNew();\r\n  }\r\n  openNew() {\r\n    this.sharedService.getAllCategories().subscribe(data => { this.categoriesList = data });\r\n    this.sharedService.getAllpriorities().subscribe(data => { this.priorityList = data });\r\n    this.sharedService.getAllmanufacturer().subscribe(data => { this.manufacturerList = data });\r\n    this.sharedService.getAllOrigins().subscribe(data => { this.originsList = data });\r\n\r\n    this.equipmentDialog = true\r\n    this.submitted = false;\r\n  }\r\n  hideDialog() {\r\n    this.equipmentDialog = false;\r\n    this.submitted = false;\r\n    this.router.navigate(['/home/MasterEquipmentList/']);\r\n  }\r\n  saveEquipment() {\r\n    this.submitted = true;\r\n    this.addEquipment();\r\n    \r\n  }\r\n  addEquipment() {\r\n\r\n//console.log(\"this.masterEquipmentObj\",this.masterEquipmentObj);\r\n\r\n\r\n    if(this.masterEquipmentObj.manufacturerId == 0)\r\n    {\r\n      this.errorDisplay = true;\r\n      if (this.translate.currentLang == 'En') {\r\n    \r\n      this.errorMessage =\"Please select brand\";\r\n      }\r\n      if (this.translate.currentLang == 'Ar') {\r\n        this.errorMessage =\"اختر ماركة\";\r\n        }\r\n        return false;\r\n    }\r\n\r\n    \r\n    if(this.masterEquipmentObj.equipmentCategoryId == 0)\r\n    {\r\n      this.errorDisplay = true;\r\n      if (this.translate.currentLang == 'En') {\r\n    \r\n      this.errorMessage =\"Please select category\";\r\n      }\r\n      if (this.translate.currentLang == 'Ar') {\r\n        this.errorMessage =\"اختر التصنيف\";\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    if(this.masterEquipmentObj.originId == 0)\r\n    {\r\n      this.errorDisplay = true;\r\n      if (this.translate.currentLang == 'En') {\r\n    \r\n      this.errorMessage =\"Please select origin\";\r\n      }\r\n      if (this.translate.currentLang == 'Ar') {\r\n        this.errorMessage =\"اختر بلد المنشأ\";\r\n        }\r\n        return false;\r\n    }\r\n\r\n    if(this.masterEquipmentObj.priorityId == 0)\r\n    {\r\n      this.errorDisplay = true;\r\n      if (this.translate.currentLang == 'En') {\r\n    \r\n      this.errorMessage =\"Please select priority\";\r\n      }\r\n      if (this.translate.currentLang == 'Ar') {\r\n        this.errorMessage =\"اختر المستوى\";\r\n        }\r\n      return false;\r\n    }\r\n\r\n if(this.masterEquipmentObj.nameAr == \"\")\r\n    {\r\n      this.errorDisplay = true;\r\n      if (this.translate.currentLang == 'En') {\r\n    \r\n      this.errorMessage =\"Please enter arabic name\";\r\n      }\r\n      if (this.translate.currentLang == 'Ar') {\r\n        this.errorMessage =\"ادخل اسم الجهاز\";\r\n        }\r\n        return false;\r\n    }\r\n\r\n    if(this.masterEquipmentObj.name == \"\")\r\n    {\r\n      this.errorDisplay = true;\r\n      if (this.translate.currentLang == 'En') {\r\n    \r\n      this.errorMessage =\"Please enter name\";\r\n      }\r\n      if (this.translate.currentLang == 'Ar') {\r\n        this.errorMessage =\"ادخل اسم الجهاز\";\r\n        }\r\n        return false;\r\n    }\r\n\r\n    if(this.masterEquipmentObj.masterCode == \"\")\r\n    { this.errorDisplay = true;\r\n      if (this.translate.currentLang == 'En') {\r\n     \r\n      this.errorMessage =\"Please enter code\";\r\n      }\r\n      if (this.translate.currentLang == 'Ar') {\r\n        this.errorMessage =\"ادخل اسم الكود\";\r\n        }\r\n        return false;\r\n    }\r\n    else{\r\n    this.masterEquipmentService.getAllAttachWithNoMasterEquipment().subscribe(data=>{\r\n      this.EquipAttachs=data;\r\n      this.EquipAttachs.forEach(element=>{\r\n        this.IDs.push(element.id);\r\n      });\r\n      this.masterEquipmentObj.AttachmentIDs=this.IDs;\r\n      console.log(\"this.equipmentObj.AttachmentIDs\",this.masterEquipmentObj.AttachmentIDs);\r\n      this.masterEquipmentService.addNewEquipments(this.masterEquipmentObj).subscribe(data => { this.hideDialog() });\r\n    //  console.log(\"IDDDDs\",this.EquipAttachs);\r\n    // });\r\n    },\r\n    error => {\r\n      this.errorDisplay = true;\r\n      if (this.translate.currentLang == 'En') {\r\n        if (error.error.status == 'code') {\r\n          this.errorMessage = error.error.message;\r\n        }\r\n        if (error.error.status == 'name') {\r\n          this.errorMessage = error.error.message;\r\n        }\r\n      }  if (this.translate.currentLang == 'Ar')  {\r\n        if (error.error.status == 'code') {\r\n          this.errorMessage = error.error.messageAr;\r\n        }\r\n        if (error.error.status == 'name') {\r\n          this.errorMessage = error.error.messageAr;\r\n        }\r\n      }\r\n      return false;\r\n    }) ;\r\n  }\r\n  }\r\n  handleChange(e) {\r\n    this.index = e.index;\r\n    if (this.index === 2) {\r\n      this.isNextvalid = true;\r\n      this.isPrevvalid = false;\r\n    }\r\n    else if (this.index === 0) {\r\n      this.isNextvalid = false;\r\n      this.isPrevvalid = true;\r\n    }\r\n  }\r\n  Next() {\r\n    this.index++;\r\n    if (this.index === 2) {\r\n      this.isNextvalid = true;\r\n      this.isPrevvalid = false;\r\n    }\r\n  }\r\n  Previous() {\r\n    this.index--;\r\n    if (this.index === 0) {\r\n      this.isNextvalid = false;\r\n      this.isPrevvalid = true;\r\n    }\r\n  }\r\n  fillSubCategory(id: number) {\r\n    this.sharedService.getAllSubCategories(id).subscribe(data => { this.subCategoriesList = data; });\r\n  }\r\n}\r\n","    <div class=\"container-fluid\">\r\n\r\n        <div class=\"card\" >\r\n            \r\n    <!-- <p-messages lang='translate.currentLang' [value]=\"msgs\"></p-messages> -->\r\n    <p-toast posinset=\"top-right\"></p-toast>\r\n    <!-- [hidden]=\"msgappear\"  -->\r\n            <div class=\"card-body\" >\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-11\"><h5>{{'masterEquipment.ManageMasterEquipment'|translate}}</h5></div>\r\n                    <div class=\"col-md-1\" style=\"text-align: right;\">     \r\n                        <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary p-button-rounded p-mr-2\"\r\n                        routerLink=\"/home/AddMasterEquipment\" pTooltip=\"add an Add a MasterEquipment\"\r\n                        tooltipPosition=\"right\"></button>  </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\"><br/></div></div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\"> \r\n\r\n    <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n    <p-table #dt [value]=\"MasterEquipments\" styleClass=\"p-datatable-responsive-demo\" [rows]=\"5\" \r\n    [paginator]=\"false\" styleClass=\"p-datatable-striped\"\r\n        [(selection)]=\"MasterEquipments\" [rowHover]=\"true\" dataKey=\"id\"\r\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n         [showCurrentPageReport]=\"true\"  \r\n        [globalFilterFields]=\"['Name','masterCode','upaCode','modelNumber','originCode','manufacturerName','manufacturerNameAr','nameAr']\">\r\n        <ng-template pTemplate=\"caption\">\r\n            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n            \r\n\r\n                <span class=\"p-input-icon-right\">\r\n                    <i class=\"pi pi-search\"></i>\r\n                    <input pInputText type=\"text\" class=\"form-control\"\r\n                        (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                        placeholder=\"{{'search.Search'|translate}}...\" />\r\n                </span>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th  style=\"width: 8%;\" pSortableColumn=\"masterCode\">{{'masterEquipment.Code'|translate}}<p-sortIcon field=\"masterCode\"></p-sortIcon>\r\n                </th>\r\n                <th  style=\"width: 8%;\" pSortableColumn=\"upaCode\">{{'masterEquipment.upaCode'|translate}}<p-sortIcon field=\"upaCode\"></p-sortIcon>\r\n                </th>\r\n                <th  style=\"width: 32%;\" pSortableColumn=\"Name\">{{'masterEquipment.Name'|translate}}<p-sortIcon field=\"Name\"></p-sortIcon>\r\n                </th>\r\n                <th  style=\"width: 20%;\" pSortableColumn=\"manufacturerName\">{{'masterEquipment.Brand'|translate}}<p-sortIcon field=\"manufacturerName\"></p-sortIcon>\r\n                </th>\r\n                <th  style=\"width: 10%;\" pSortableColumn=\"modelNumber\">{{'masterEquipment.modelNumber'|translate}}<p-sortIcon field=\"modelNumber\"></p-sortIcon>\r\n                </th>\r\n                <th  style=\"width: 8%;\" pSortableColumn=\"originCode\">{{'masterEquipment.originCode'|translate}}<p-sortIcon field=\"originCode\"></p-sortIcon>\r\n                </th>\r\n                <th style=\"width: 10%;\">{{'Actions.Action'|translate}}</th>\r\n            </tr>\r\n            <tr>\r\n                <th>\r\n                    <input pInputText type=\"text\" (input)=\"dt.filter($event.target.value, 'masterCode', 'contains')\"\r\n                        [value]=\"dt.filters['masterCode']?.value\" placeholder=\"{{'search.Search'|translate}}\"\r\n                        class=\"p-column-filter form-control\" style=\"width: 50px;\">\r\n                </th>\r\n                <th>\r\n                    <input pInputText type=\"text\" (input)=\"dt.filter($event.target.value, 'upaCode', 'contains')\"\r\n                        [value]=\"dt.filters['upaCode']?.value\" placeholder=\"{{'search.Search'|translate}}\"\r\n                        class=\"p-column-filter form-control\" style=\"width: 50px;\">\r\n                </th>\r\n                <th >\r\n                    <input *ngIf=\"translate.currentLang==='En'\" pInputText type=\"text\" (input)=\"dt.filter($event.target.value, 'name', 'contains')\"\r\n                        [value]=\"dt.filters['name']?.value\" placeholder=\"{{'search.Search'|translate}}\"\r\n                        class=\"p-column-filter form-control\">\r\n                        <input *ngIf=\"translate.currentLang==='Ar'\" pInputText type=\"text\" (input)=\"dt.filter($event.target.value, 'nameAr', 'contains')\"\r\n                        [value]=\"dt.filters['nameAr']?.value\" placeholder=\"{{'search.Search'|translate}}\"\r\n                        class=\"p-column-filter form-control\">\r\n                </th>\r\n                <th>\r\n                    <!-- <input *ngIf=\"translate.currentLang==='En'\" pInputText type=\"text\" (input)=\"dt.filter($event.target.value, 'manufacturerName', 'contains')\"\r\n                        [value]=\"dt.filters['manufacturerName']?.value\" placeholder=\"Search\"\r\n                        class=\"p-column-filter form-control\">\r\n                        <input *ngIf=\"translate.currentLang==='Ar'\" pInputText type=\"text\" (input)=\"dt.filter($event.target.value, 'manufacturerNameAr', 'contains')\"\r\n                        [value]=\"dt.filters['manufacturerNameAr']?.value\" placeholder=\"Search\"\r\n                        class=\"p-column-filter form-control\"> -->\r\n\r\n                        <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"manufacturerList\"\r\n                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerName\"\r\n                        optionValue=\"manufacturerName\" [showClear]=\"true\" appendTo=\"body\"\r\n                        (onChange)=\"dt.filter($event.value,'manufacturerName','equals')\"\r\n                        [filterBy]=\"dt.filters['manufacturerName']?.value\" styleClass=\"ui-column-filter\"\r\n                        class=\"filterDropdwon\"></p-dropdown>\r\n\r\n\r\n\r\n                        <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"manufacturerList\"\r\n                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerNameAr\"\r\n                        optionValue=\"manufacturerNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                        (onChange)=\"dt.filter($event.value,'manufacturerNameAr','equals')\"\r\n                        [filterBy]=\"dt.filters['manufacturerNameAr']?.value\" styleClass=\"ui-column-filter\"\r\n                        class=\"filterDropdwon\"></p-dropdown>\r\n                        \r\n                </th>\r\n                <th>\r\n                    <input pInputText type=\"text\" (input)=\"dt.filter($event.target.value, 'modelNumber', 'contains')\"\r\n                            [value]=\"dt.filters['modelNumber']?.value\" placeholder=\"{{'search.Search'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                </th>\r\n                <th style=\"width: 10%;\">\r\n                    <input pInputText type=\"text\" (input)=\"dt.filter($event.target.value, 'originCode', 'contains')\"\r\n                            [value]=\"dt.filters['originCode']?.value\" placeholder=\"{{'search.Search'|translate}}\"\r\n                            class=\"p-column-filter form-control\" style=\"width: 50px;\">\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-masterEquipment>\r\n            <tr>\r\n                <td  style=\"text-align: inherit;\">\r\n                    {{masterEquipment.masterCode}}\r\n                </td>\r\n                <td  style=\"text-align: inherit;\">\r\n                    {{masterEquipment.upaCode}}\r\n                </td>\r\n                <td  style=\"text-align: inherit;\">\r\n                    {{translate.currentLang == \"En\" ? masterEquipment.name:masterEquipment.nameAr}}\r\n\r\n                </td>\r\n                <td  style=\"text-align: inherit;\">\r\n                    {{translate.currentLang == \"En\" ? masterEquipment.manufacturerName:masterEquipment.manufacturerNameAr}}\r\n                </td>\r\n                <td  style=\"text-align: inherit;\">\r\n                    {{masterEquipment.modelNumber}}\r\n                </td>\r\n                <td  style=\"text-align: inherit;\">\r\n                    {{masterEquipment.originCode}}\r\n                </td>\r\n                <td  style=\"text-align: inherit;\">\r\n                    <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-info edit\" style=\"margin: 0px 5px;\"\r\n                        (click)=\"openNew(masterEquipment)\" pTooltip=\"edit an Equipment\" tooltipPosition=\"top\"></button>\r\n\r\n                    <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\" \r\n                        (click)=\"confirmDelete(masterEquipment.id,masterEquipment.name)\" pTooltip=\"delete an Equipment\"\r\n                        tooltipPosition=\"bottom\"></button>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"summary\">\r\n            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                {{'In total there are.In total there are'| translate}}{{MasterEquipments ? MasterEquipments.length : 0 }} {{'Sidebar.MasterEquipment' | translate}}.\r\n            </div>\r\n        </ng-template>\r\n    </p-table>\r\n    <p-paginator [rows]=\"10\" [totalRecords]=\"count\" (onPageChange)=\"clicktbl($event)\"></p-paginator>\r\n</div>\r\n</div></div></div></div>\r\n\r\n\r\n\r\n\r\n\r\n<p-dialog [(visible)]=\"msterEquipmentDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <h3 class=\"title\">{{'masterEquipment.EditEquipmentinmaster'|translate}}</h3>\r\n            </div>\r\n\r\n        </div>\r\n            <form (ngSubmit)=\"EditMasterEquipForm.valid && updateMasterEquipment()\" #EditMasterEquipForm=\"ngForm\">\r\n                <p-tabView [activeIndex]=\"index\" (onChange)=\"handleChange($event)\" >\r\n                    <p-tabPanel header=\"{{'equipment.Details' | translate}}\">\r\n                        <fieldset class=\"tab\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6 form-group\">\r\n                                    <label for=\"Code\">{{'masterEquipment.masterCode'|translate}}</label>\r\n\r\n                                    <input type=\"text\" class=\"form-control\" id=\"Code\" name=\"Code\" #Code=\"ngModel\"\r\n                                        pTooltip=\"Enter a code\" tooltipPosition=\"bottom\"\r\n                                        [(ngModel)]=\"masterEquipmentObj.masterCode\"\r\n                                        [class.is-invalid]=\"Code.touched && Code.errors || EditMasterEquipForm.submitted\"\r\n                                        [class.is-valid]=\"Code.valid && EditMasterEquipForm.submitted\" required>\r\n                                    <div\r\n                                        *ngIf=\"(Code.touched || EditMasterEquipForm.submitted) && Code.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            {{'ecricodes.Required'|translate}}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6 form-group\">\r\n                                    <label for=\"upa\">{{'masterEquipment.upaCode'|translate}}</label>\r\n\r\n                                    <input type=\"text\" class=\"form-control\" id=\"upa\" name=\"upa\" #upa=\"ngModel\"\r\n                                        pTooltip=\"Enter a UPA code\" tooltipPosition=\"bottom\"\r\n                                        [(ngModel)]=\"masterEquipmentObj.upaCode\" >\r\n   \r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <label for=\"name\">{{'masterEquipment.Name'|translate}}</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"name\" name=\"EnName\"\r\n                                        [(ngModel)]=\"masterEquipmentObj.name\" #EnName=\"ngModel\"\r\n                                        [class.is-invalid]=\"EnName.touched && EnName.errors || EditMasterEquipForm.submitted\"\r\n                                        [class.is-valid]=\"EnName.valid && EditMasterEquipForm.submitted\"\r\n                                        pTooltip=\"Enter a Name\" tooltipPosition=\"bottom\" required>\r\n                                    <div\r\n                                        *ngIf=\"(EnName.touched || EditMasterEquipForm.submitted) && EnName.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            {{'ecricodes.Required'|translate}}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <label for=\"name\">{{'masterEquipment.NameAr'|translate}}</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"ArName\" name=\"ArName\" #ArName=\"ngModel\"\r\n                                        [(ngModel)]=\"masterEquipmentObj.nameAr\" pTooltip=\"Enter a Name in Arabic\"\r\n                                        tooltipPosition=\"bottom\"\r\n                                        [class.is-invalid]=\"ArName?.touched && ArName.errors || EditMasterEquipForm.submitted\"\r\n                                        [class.is-valid]=\"ArName?.valid && EditMasterEquipForm.submitted\">\r\n                                    <div\r\n                                        *ngIf=\"(ArName?.touched || EditMasterEquipForm.submitted) && ArName.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            {{'ecricodes.Required'|translate}}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6 form-group\">\r\n                                    <label for=\"category\">{{'equipment.Category'| translate}}</label>\r\n                                    <select class=\"form-control\" id=\"category\" name=\"category\" #category=\"ngModel\"\r\n                                        [(ngModel)]=\"masterEquipmentObj.equipmentCategoryId\"\r\n                                        (change)=\"fillSubCategory(masterEquipment.equipmentCategoryId)\" \r\n                                        pTooltip=\"Please,Select Category\" tooltipPosition=\"bottom\">\r\n                                        <option selected value=\"0\">--select--</option>\r\n                                        <option *ngFor=\"let cat of categoriesList\" [value]=\"cat.id\">\r\n                                            {{translate.currentLang == \"En\" ? cat.categoryName:cat.categoryNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                 \r\n                                </div>\r\n                                <div class=\"col-md-6 form-group\">\r\n                                    <label for=\"subCategory\">{{'equipment.SubCategory'| translate}}</label>\r\n                                    <select class=\"form-control\" id=\"subCategory\" name=\"subCategory\"\r\n                                        #subCategory=\"ngModel\"\r\n                                        \r\n                                        [(ngModel)]=\"masterEquipmentObj.equipmentSubCategoryId\" \r\n                                        pTooltip=\"Select A SubCategory\" tooltipPosition=\"bottom\">\r\n                                        <option selected value=\"0\">--select--</option>\r\n                                        <option *ngFor=\"let s of subCategoriesList\" [value]=\"s.id\">\r\n                                            {{translate.currentLang == \"En\" ? s.subCategoryName:s.subCategoryNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                  \r\n                                </div>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\"\r\n                                [hidden]=\"isNextvalid\">{{'General.Next'| translate}}</button>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\"\r\n                                [hidden]=\"isPrevvalid\">{{'General.Previous'| translate}}</button>\r\n                            <br><br>\r\n                        </fieldset>\r\n                    </p-tabPanel>\r\n                    <p-tabPanel header=\"{{'equipment.IndustryDetails' | translate}}\">\r\n                        <fieldset class=\"tab\">\r\n                            <legend>{{'equipment.IndustryDetails' | translate}}</legend>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6 form-group\">\r\n                                    <label for=\"manufacturer\">{{'equipment.Manufacturer'| translate}}</label>\r\n\r\n                                    <select class=\"form-control\" id=\"manufacturer\" #manufacturer=\"ngModel\"\r\n                                        name=\"manufacturer\" [(ngModel)]=\"masterEquipmentObj.manufacturerId\"\r\n                                        pTooltip=\"Select A Brand\" tooltipPosition=\"bottom\">\r\n                                        <option  value=\"0\">--select--</option>\r\n                                        <option *ngFor=\"let m of manufacturerList\" [value]=\"m.id\">\r\n                                            {{translate.currentLang == \"En\" ? m.manufacturerName:m.manufacturerNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                     \r\n                                    <label for=\"origin\">{{'equipment.Origin'| translate}}</label>\r\n                                    <select class=\"form-control\" id=\"origin\" #origin=\"ngModel\" name=\"origin\"\r\n                                        [(ngModel)]=\"masterEquipmentObj.originId\"\r\n                                        pTooltip=\"Select An Origin\" tooltipPosition=\"bottom\">\r\n                                        <option selected value=\"0\">--select--</option>\r\n                                        <option *ngFor=\"let o of originsList\" [value]=\"o.id\">{{o.originCode}}</option>\r\n                                    </select>\r\n                        \r\n                                    <label for=\"ExpectedLifeTime\">{{'equipment.expectedtimelife'| translate}}</label>\r\n                                    <input type=\"number\" pInputText id=\"ExpectedLifeTime\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" class=\"form-control\"\r\n                                        [(ngModel)]=\"masterEquipmentObj.expectedLifeTime\"\r\n                                        pTooltip=\"Enter An ExpectedLifeTime\" tooltipPosition=\"bottom\" />\r\n\r\n                                    <label for=\"modelNumber\">{{'equipment.modelNumber'| translate}}</label>\r\n                                    <input type=\"text\" pInputText id=\"modelNumber\" class=\"form-control\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"masterEquipmentObj.modelNumber\"\r\n                                        pTooltip=\"Enter A modelNumber\" tooltipPosition=\"bottom\" />\r\n      \r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <label for=\"priority\">{{'equipment.EquipmentPriority'|translate}}</label>\r\n                                    <div>\r\n                                        <ul class=\"list-group\" pTooltip=\"Select A priority\" tooltipPosition=\"bottom\">\r\n                                            <li class=\"list-group-item\" *ngFor=\"let item of priorityList; let i= index\">\r\n                                                <input type=\"radio\" [(ngModel)]=\"masterEquipmentObj.priorityId\"\r\n                                                    name=\"priority{{i}}\" id=\"priority{{i}}\" group=\"prt\" #priority=\"ngModel\"\r\n                                                    [value]=\"item.id\" />\r\n                                                {{translate.currentLang == \"En\" ?\r\n                                                item.priorityLevel:item.priorityLevelAr}}\r\n\r\n                                            </li>\r\n                                        </ul>\r\n                                       \r\n                                    </div>\r\n\r\n                                    <br/>\r\n                                    <label for=\"versionNumber\">{{'equipment.versionNumber'| translate}}</label>\r\n                                    <input type=\"text\" pInputText id=\"versionNumber\" class=\"form-control\"\r\n                                        [ngModelOptions]=\"{standalone: true}\"\r\n                                        [(ngModel)]=\"masterEquipmentObj.versionNumber\" pTooltip=\"Enter A Version Number\"\r\n                                        tooltipPosition=\"bottom\" />\r\n                                </div>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\"\r\n                                [hidden]=\"isNextvalid\">{{'General.Next'| translate}}</button>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\"\r\n                                [hidden]=\"isPrevvalid\">{{'General.Previous'| translate}}</button>\r\n                        </fieldset>\r\n                    </p-tabPanel>\r\n                    <p-tabPanel header=\"{{'Actions.Attachments' |translate}}\">\r\n\r\n                        <fieldset class=\"tab\">\r\n                            <legend>{{'Actions.Attachments' |translate}}</legend>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12\">\r\n                                    <p-fileUpload url=\"http://biomedicalupd-001-site1.itempurl.com/api/MasterEquipmentAttachment/Masterupload/\"\r\n                                        multiple=\"multiple\"\r\n                                        accept=\".xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf\"\r\n                                        maxFileSize=\"1000000000\" value=\"{Attachs}\">\r\n                                    </p-fileUpload>\r\n                                    <ul class=\"ulStyle\">\r\n                                        <div *ngFor=\"let file of Attachs\">\r\n                                            <li *ngIf=\"(file.fileName).includes('svg')||(file.fileName).includes('png')||\r\n                                                                           (file.fileName).includes('jpg')\">\r\n                                                <span><img\r\n                                                        src=\"http://biomedicalupd-001-site1.itempurl.com/{{file.fileName}}\"\r\n                                                        class=\"ng-star-inserted\" width=\"50\" [hidden]=\"isvisible\"></span>\r\n                                                &nbsp; &nbsp; &nbsp;\r\n                                                <button icon=\"pi pi-times\" pbutton=\"\" type=\"button\"\r\n                                                    ng-reflect-icon=\"pi pi-times\"\r\n                                                    class=\"p-button p-component p-button-icon-only\"\r\n                                                    (click)=\"RemoveAttach(file.id)\" [hidden]=\"isbtnvisible\">\r\n                                                    <span class=\"p-button-icon pi pi-times\" aria-hidden=\"true\"></span>\r\n                                                    <span aria-hidden=\"true\" class=\"p-button-label\">&nbsp;&nbsp;</span>\r\n                                                </button>\r\n                                            </li>\r\n                                            <li\r\n                                                *ngIf=\"(file.fileName).includes('xls')||(file.fileName).includes('xlsx')||\r\n                                                                        (file.fileName).includes('doc')||(file.fileName).includes('docx')||\r\n                                                                        (file.fileName).includes('ppt')||(file.fileName).includes('pptx')||\r\n                                                                        (file.fileName).includes('txt')||(file.fileName).includes('pdf')\">\r\n                                                <span class=\"ng-star-inserted\" [hidden]=\"isvisible\">\r\n                                                    {{file.fileName.substring(17)}}\r\n                                                </span>\r\n                                                &nbsp; &nbsp;\r\n                                                <button icon=\"pi pi-times\" pbutton=\"\" type=\"button\"\r\n                                                    ng-reflect-icon=\"pi pi-times\"\r\n                                                    class=\"p-button p-component p-button-icon-only\"\r\n                                                    (click)=\"RemoveAttach(file.id)\" [hidden]=\"isbtnvisible\">\r\n                                                    <span class=\"p-button-icon pi pi-times\" aria-hidden=\"true\"></span>\r\n                                                    <span aria-hidden=\"true\" class=\"p-button-label\">&amp;nbsp;</span>\r\n                                                </button>\r\n                                            </li>\r\n                                        </div>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <br>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-2\">\r\n                                    <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                                        (click)=\"hideDialog()\" type=\"button\" value=\"cancel\"\r\n                                        class=\"btn btn-info\"></button>\r\n                                </div>\r\n                                <div class=\"col-lg-2\">\r\n                                    <button pButton pRipple label=\"{{'Actions.Save' |translate}}\" icon=\"pi pi-check\"\r\n                                        value=\"save\" type=\"submit\" class=\"btn btn-info\"></button>\r\n                                </div>\r\n                            </div>\r\n                            <br>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\"\r\n                                [hidden]=\"isNextvalid\">Next</button>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\"\r\n                                [hidden]=\"isPrevvalid\">previous</button>\r\n\r\n                            <br><br><br>\r\n                        </fieldset>\r\n                    </p-tabPanel>\r\n\r\n                </p-tabView>\r\n            </form>    \r\n    </ng-template>\r\n\r\n \r\n</p-dialog>\r\n<p-dialog [(visible)]=\"errorDisplay\" [style]=\"{width: '300px'}\">\r\n    <p-header  style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n   <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{errorMessage}}</span>\r\n</p-dialog>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { MasterEquipment } from 'src/app/Shared/Models/MasterEquipment';\r\nimport { MasterequipmentService } from 'src/app/Shared/services/masterequipment.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmationService, Message, MessageService } from 'primeng/api';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { Category } from 'src/app/Shared/Models/Category';\r\nimport { SubCategory } from 'src/app/Shared/Models/SubCategory';\r\nimport { Priority } from 'src/app/Shared/Models/Priority';\r\nimport { Manufacturer } from 'src/app/Shared/Models/Manufacturer';\r\nimport { Origin } from 'src/app/Shared/Models/Origin';\r\nimport { MasterEquipmentAttachments } from 'src/app/Shared/Models/MasterEquipmentAttachments';\r\nimport { style } from '@angular/animations';\r\nimport { Paging } from 'src/app/Shared/Models/Paging';\r\n\r\n@Component({\r\n  selector: 'app-master-equipment-list',\r\n  templateUrl: './master-equipment-list.component.html',\r\n  styleUrls: ['./master-equipment-list.component.scss']\r\n})\r\nexport class MasterEquipmentListComponent implements OnInit {\r\n  MasterEquipments: MasterEquipment[];\r\n  masterEquipmentObj: MasterEquipment;\r\n  msterEquipmentDialog: boolean;\r\n  submitted: boolean;\r\n  msgs: Message[] = [];\r\n  categoriesList: Category[];\r\n  subCategoriesList: SubCategory[];\r\n  index: number = 0;\r\n  isNextvalid: boolean = false;\r\n  isPrevvalid: boolean = true;\r\n  priorityList: Priority[];\r\n  manufacturerList: Manufacturer[];\r\n  originsList: Origin[]\r\n\r\n  errorMessage: string = \"\";\r\n  errorDisplay: boolean = false;\r\n  Attachs: MasterEquipmentAttachments[];\r\n  isvisible: boolean = false;\r\n  isbtnvisible: boolean = false;\r\n  EquipAttachs: MasterEquipmentAttachments[];\r\n  IDs: number[] = [];\r\n  masterAttachDel: MasterEquipmentAttachments[];\r\n  msgappear:boolean=false;\r\n  page:Paging;\r\n  event:any;\r\n  count:number;\r\n  // manufacturerList: Manufacturer[];\r\n\r\n\r\n\r\n\r\n\r\n  constructor(private masterEquipmentService: MasterequipmentService,\r\n    private translate: TranslateService,\r\n    private router: Router,\r\n    private confirmationService: ConfirmationService,\r\n    private sharedService: SharedService,\r\n    private messageservice:MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.page={\r\n      pagenumber:1,\r\n      pagesize:10\r\n    }\r\n  this.masterEquipmentService.getcount().subscribe(data=>\r\n    {\r\n      this.count=data\r\n    })\r\n    this.masterEquipmentService.getAllwithpaging(this.page).subscribe(data=>{\r\n      this.MasterEquipments=data;      \r\n    })\r\n  }\r\n  getAll() {\r\n    this.masterEquipmentService.getAll().subscribe(data => { this.MasterEquipments = data});\r\n    this.sharedService.getAllmanufacturer().subscribe(data => { this.manufacturerList = data });\r\n  }\r\n  hideDialog() {\r\n    this.msterEquipmentDialog = false;\r\n    this.submitted = false;\r\n    this.router.navigate(['/home/MasterEquipmentList/'])\r\n  }\r\n  openNew(m) {\r\n    this.sharedService.getAllCategories().subscribe(data => { this.categoriesList = data });\r\n    this.sharedService.getAllpriorities().subscribe(data => { this.priorityList = data });\r\n    this.sharedService.getAllmanufacturer().subscribe(data => { this.manufacturerList = data });\r\n    this.sharedService.getAllOrigins().subscribe(data => { this.originsList = data });\r\n    this.getAttachs(m.id);\r\n    this.msterEquipmentDialog = true\r\n    this.submitted = false;\r\n    this.masterEquipmentObj = m\r\n  }\r\n  openEmptyDialog() {\r\n    this.msterEquipmentDialog = true\r\n    this.submitted = false;\r\n  }\r\n  updateMasterEquipment() {\r\n    this.submitted = true;\r\n    this.msterEquipmentDialog = true;\r\n\r\n    if (this.masterEquipmentObj.equipmentCategoryId == 0) {\r\n      this.errorDisplay = true;\r\n      if (this.translate.currentLang == 'En') {\r\n\r\n        this.errorMessage = \"Please select category\";\r\n      }\r\n      if (this.translate.currentLang == 'Ar') {\r\n        this.errorMessage = \"اختر التصنيف\";\r\n      }\r\n      return false;\r\n    }\r\n\r\n\r\n    if (this.masterEquipmentObj.manufacturerId == 0) {\r\n      this.errorDisplay = true;\r\n      if (this.translate.currentLang == 'En') {\r\n\r\n        this.errorMessage = \"Please select brand\";\r\n      }\r\n      if (this.translate.currentLang == 'Ar') {\r\n        this.errorMessage = \"اختر ماركة\";\r\n      }\r\n      return false;\r\n    }\r\n\r\n\r\n    if (this.masterEquipmentObj.originId == 0) {\r\n      this.errorDisplay = true;\r\n      if (this.translate.currentLang == 'En') {\r\n\r\n        this.errorMessage = \"Please select origin\";\r\n      }\r\n      if (this.translate.currentLang == 'Ar') {\r\n        this.errorMessage = \"اختر بلد المنشأ\";\r\n      }\r\n      return false;\r\n    }\r\n\r\n    if (this.masterEquipmentObj.priorityId == 0) {\r\n      this.errorDisplay = true;\r\n      if (this.translate.currentLang == 'En') {\r\n\r\n        this.errorMessage = \"Please select priority\";\r\n      }\r\n      if (this.translate.currentLang == 'Ar') {\r\n        this.errorMessage = \"اختر المستوى\";\r\n      }\r\n      return false;\r\n    }\r\n\r\n    if (this.masterEquipmentObj.nameAr == \"\") {\r\n      this.errorDisplay = true;\r\n      if (this.translate.currentLang == 'En') {\r\n\r\n        this.errorMessage = \"Please enter arabic name\";\r\n      }\r\n      if (this.translate.currentLang == 'Ar') {\r\n        this.errorMessage = \"ادخل الاسم باالعربي\";\r\n      }\r\n      return false;\r\n    }\r\n\r\n\r\n    if (this.masterEquipmentObj.name == \"\") {\r\n      this.errorDisplay = true;\r\n      if (this.translate.currentLang == 'En') {\r\n\r\n        this.errorMessage = \"Please enter name\";\r\n      }\r\n      if (this.translate.currentLang == 'Ar') {\r\n        this.errorMessage = \"ادخل اسم الجهاز\";\r\n      }\r\n      return false;\r\n    }\r\n\r\n    if (this.masterEquipmentObj.masterCode == \"\") {\r\n      this.errorDisplay = true;\r\n      if (this.translate.currentLang == 'En') {\r\n\r\n        this.errorMessage = \"Please enter code\";\r\n      }\r\n      if (this.translate.currentLang == 'Ar') {\r\n        this.errorMessage = \"ادخل اسم الكود\";\r\n      }\r\n      return false;\r\n    }\r\n    else {\r\n      this.masterEquipmentService.getAllAttachWithNoMasterEquipment().subscribe(data => {\r\n        this.EquipAttachs = data;\r\n        this.EquipAttachs.forEach(element => {\r\n          this.IDs.push(element.id);\r\n        });\r\n        this.masterEquipmentObj.AttachmentIDs = this.IDs;\r\n        this.masterEquipmentService.update(this.masterEquipmentObj.id, this.masterEquipmentObj).subscribe(\r\n          data => {\r\n            data = data\r\n            this.hideDialog()\r\n          }\r\n          , error => {\r\n            this.errorDisplay = true;\r\n            if (this.translate.currentLang == 'En') {\r\n              if (error.error.status == 'code') {\r\n                this.errorMessage = error.error.message;\r\n              }\r\n              if (error.error.status == 'name') {\r\n                this.errorMessage = error.error.message;\r\n              }\r\n              if (error.error.status == 'nameAr') {\r\n                this.errorMessage = error.error.message;\r\n              }\r\n            } if (this.translate.currentLang == 'Ar') {\r\n              if (error.error.status == 'code') {\r\n                this.errorMessage = error.error.messageAr;\r\n              }\r\n              if (error.error.status == 'name') {\r\n                this.errorMessage = error.error.messageAr;\r\n              }\r\n              if (error.error.status == 'nameAr') {\r\n                this.errorMessage = error.error.messageAr;\r\n              }\r\n            }\r\n            return false;\r\n          });\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n  deleteMsterEquipment(mEquipmentId) {\r\n    this.masterEquipmentService.getAllAttachForEquipment(mEquipmentId).subscribe(data => {\r\n      this.masterAttachDel = data,\r\n        this.masterAttachDel.forEach(element => {\r\n        this.RemoveAttach(element.id);\r\n      });\r\n    });\r\n\r\n    this.masterEquipmentService.Delete(mEquipmentId).subscribe(\r\n      data => { this.getAll() }\r\n    );\r\n  }\r\n\r\n  confirmDelete(MEId, MEName) {\r\n    if(this.translate.currentLang == 'En')\r\n   { \r\n    this.confirmationService.confirm(\r\n      {     \r\n       message: 'Do you want to delete ' + MEName + 'from master equipments',\r\n       header: 'Delete Confirmation',\r\n       icon: 'pi pi-info-circle',\r\n       accept: () => {\r\n         this.deleteMsterEquipment(MEId)\r\n         this.messageservice.add({ severity: 'info', detail: 'Record deleted' });\r\n       },\r\n       reject: () => {\r\n         this.messageservice.add({ severity: 'info', detail: 'Delete rejected' });\r\n       },\r\n       acceptLabel:\"yes\",\r\n       rejectLabel:\"No\"\r\n     });\r\n  }\r\n  else if(this.translate.currentLang == 'Ar')\r\n   { \r\n     this.confirmationService.confirm({     \r\n      message: 'هل انت متأكد من مسح' + MEName + 'من القائمه الرئيسيه',\r\n      header: 'تاكيد عملية المسح',\r\n      icon: 'pi pi-info-circle',\r\n      \r\n      accept: () => {\r\n        this.deleteMsterEquipment(MEId)\r\n        this.messageservice.add({ severity: 'info', detail: 'تم المسح' });\r\n\r\n      },\r\n      reject: () => {\r\n        this.messageservice.add({ severity: 'info', detail: 'رفض عمليه المسح' });\r\n      },\r\n      acceptLabel:\"نعم\",\r\n      rejectLabel:\"لا\",\r\n    });\r\n  }\r\n  }\r\n  getAttachs(equipId) {\r\n    this.masterEquipmentService.getAllAttachForEquipment(equipId).subscribe(data => {\r\n      this.Attachs = data,\r\n        this.Attachs.forEach(el => {\r\n        });\r\n    })\r\n  }\r\n  handleChange(e) {\r\n    this.index = e.index;\r\n    if (this.index === 2) {\r\n      this.isNextvalid = true;\r\n      this.isPrevvalid = false;\r\n    }\r\n    else if (this.index === 0) {\r\n      this.isNextvalid = false;\r\n      this.isPrevvalid = true;\r\n    }\r\n  }\r\n  Next() {\r\n    this.index++;\r\n    if (this.index === 2) {\r\n      this.isNextvalid = true;\r\n      this.isPrevvalid = false;\r\n    }\r\n  }\r\n  Previous() {\r\n    this.index--;\r\n    if (this.index === 0) {\r\n      this.isNextvalid = false;\r\n      this.isPrevvalid = true;\r\n    }\r\n\r\n  }\r\n  fillSubCategory(id: number) {\r\n    this.sharedService.getAllSubCategories(id).subscribe(data => { this.subCategoriesList = data; });\r\n  }\r\n  RemoveAttach(id: number) {\r\n    this.masterEquipmentService.DeleteAttachment(id).subscribe(data => { });\r\n    this.isvisible = true;\r\n    this.isbtnvisible = true;\r\n  }\r\n  clicktbl(event)\r\n  {\r\n     this.page.pagenumber=event.page+1;\r\n     this.page.pagesize=event.rows;\r\n    this.masterEquipmentService.getAllwithpaging(this.page).subscribe(data=>{\r\n      this.MasterEquipments=data;\r\n    })\r\n  }\r\n}\r\n","<p-dialog [(visible)]=\"WrokOrderDialog\" [style]=\"{width: '900px'}\" [modal]=\"true\" styleClass=\"p-fluid\" (onHide)=\"hideDialog()\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <h3 class=\"title\">{{'workOrder.AddWorkOrder'|translate}}</h3>\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n        <form (ngSubmit)=\"AddWorkOrderForm.valid && saveWorkOrder(workOrder)\" #AddWorkOrderForm=\"ngForm\">\r\n            <p-tabView [activeIndex]=\"index\" (onChange)=\"handleChange($event)\">\r\n                <p-tabPanel header=\"{{'workOrder.Details'|translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"Date\">{{'workOrder.Date'|translate}}</label>\r\n                                <input type=\"date\" pInputText id=\"Date\" class=\"form-control\" #date=\"ngModel\" name=\"Date\"\r\n                                    [(ngModel)]=\"maintenance.workOrderDate\" \r\n                                    [class.is-invalid]=\"date.touched && date.errors || AddWorkOrderForm.submitted\" \r\n                                    [class.is-valid]=\"date.valid && AddWorkOrderForm.submitted\" required/>\r\n                                    <div *ngIf=\"(date.touched || AddWorkOrderForm.submitted) && date.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            Date is required                               \r\n                                        </span>\r\n                                   </div>\r\n                            </div>\r\n                        \r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"priority\">{{'workOrder.Status'|translate}}</label>   \r\n                                <div>\r\n                                    <div>\r\n                                        <ul class=\"list-group\">\r\n                                            <li class=\"list-group-item\" *ngFor=\"let item of statusList\">\r\n                                                <input type=\"radio\" [(ngModel)]=\"workOrder.RequestStatusId\"\r\n                                                    name=\"status\" id=\"status\" #status=\"ngModel\" [value]=\"item.id\" \r\n                                                    [class.is-invalid]=\"status.touched && status.errors || AddWorkOrderForm.submitted\" \r\n                                                    [class.is-valid]=\"status.valid && AddWorkOrderForm.submitted \" required/>\r\n                                                {{item.status}}\r\n                                                <!-- <div *ngIf=\"(status.touched || AddWorkOrderForm.submitted) && status.errors?.required\">\r\n                                                    <span class=\"text-danger\">        \r\n                                                        status is required                               \r\n                                                    </span>\r\n                                               </div> -->\r\n                                            </li>\r\n                                        </ul>\r\n                                        \r\n                                    </div>\r\n                                  \r\n                                </div>                            \r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"priority\">{{'workOrder.Priority'|translate}}</label>\r\n                                <div>\r\n                                    <ul class=\"list-group\">\r\n                                        <li class=\"list-group-item\" *ngFor=\"let item of priorityList\">\r\n                                            <input type=\"radio\" [(ngModel)]=\"workOrder.priorityId\"\r\n                                                name=\"Priority\" id=\"Priority\" #Priority=\"ngModel\" [value]=\"item.id\" \r\n                                                [class.is-invalid]=\"Priority.touched && Priority.errors || AddWorkOrderForm.submitted\" \r\n                                                [class.is-valid]=\"Priority.valid && AddWorkOrderForm.submitted\" required/>\r\n                                            {{item.priorityLevel}}\r\n                                            <!-- <div *ngIf=\"(Priority.touched || AddWorkOrderForm.submitted) && Priority.errors?.required\">\r\n                                                <span class=\"text-danger\">        \r\n                                                    Priority is required                               \r\n                                                </span>\r\n                                           </div> -->\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\" [hidden]=\"isNextvalid\">Next</button>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\" [hidden]=\"isPrevvalid\">previous</button>\r\n                            \r\n                            <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n                \r\n                <p-tabPanel header=\"{{'workOrder.Maintenance'|translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"Problem\">{{'workOrder.Problem'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"Problem\" class=\"form-control\" name=\"Problem\"\r\n                                    [(ngModel)]=\"maintenance.Problem\" #problem=\"ngModel\"\r\n                                    [class.is-invalid]=\"problem.touched && problem.errors || AddWorkOrderForm.submitted\" \r\n                                    [class.is-valid]=\"problem.valid && AddWorkOrderForm.submitted\" required/>\r\n                                    <div *ngIf=\"(problem.touched || AddWorkOrderForm.submitted) && problem.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            problem is required                               \r\n                                        </span>\r\n                                   </div>\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"PartCost\">{{'workOrder.PartCost'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"PartCost\" class=\"form-control\" name=\"PartCost\"\r\n                                    [(ngModel)]=\"maintenance.PartCost\" #PartCost=\"ngModel\"\r\n                                    [class.is-invalid]=\"PartCost.touched && PartCost.errors || AddWorkOrderForm.submitted\" \r\n                                    [class.is-valid]=\"PartCost.valid && AddWorkOrderForm.submitted\" required/>\r\n                                    <div *ngIf=\"(PartCost.touched || AddWorkOrderForm.submitted) && PartCost.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            PartCost is required                               \r\n                                        </span>\r\n                                   </div>\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"LaborCost\">{{'workOrder.LaborCost'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"LaborCost\" class=\"form-control\" name=\"LaborCost\"\r\n                                    #LaborCost=\"ngModel\" [(ngModel)]=\"maintenance.LaborCost\"\r\n                                    [class.is-invalid]=\"LaborCost.touched && LaborCost.errors || AddWorkOrderForm.submitted\" \r\n                                    [class.is-valid]=\"LaborCost.valid && AddWorkOrderForm.submitted\" required/>\r\n                                    <div *ngIf=\"(LaborCost.touched || AddWorkOrderForm.submitted) && LaborCost.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            LaborCost is required                               \r\n                                        </span>\r\n                                   </div>\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\">previous</button>\r\n                        <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n                <p-tabPanel header=\"{{'workOrder.SparePart'|translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"Code\">{{'workOrder.Code'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"Code\" class=\"form-control\" \r\n                                    #Code=\"ngModel\" [(ngModel)]=\"sparepart.SparePartCode\" name=\"Code\"\r\n                                    [class.is-invalid]=\"Code.touched && Code.errors || AddWorkOrderForm.submitted\" \r\n                                    [class.is-valid]=\"Code.valid && AddWorkOrderForm.submitted\" required/>\r\n                                    <div *ngIf=\"(Code.touched || AddWorkOrderForm.submitted) && Code.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            Code is required                               \r\n                                        </span>\r\n                                   </div>\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"Name\">{{'workOrder.Name'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"Name\" class=\"form-control\" name=\"Name\"\r\n                                    #sparePartName=\"ngModel\" [(ngModel)]=\"sparepart.SparePartName\"\r\n                                    [class.is-invalid]=\"sparePartName.touched && sparePartName.errors || AddWorkOrderForm.submitted\" \r\n                                    [class.is-valid]=\"sparePartName.valid && AddWorkOrderForm.submitted\" required/>\r\n                                    <div *ngIf=\"(sparePartName.touched || AddWorkOrderForm.submitted) && sparePartName.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            English Name is required                               \r\n                                        </span>\r\n                                   </div>\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"NameAr\">{{'workOrder.NameAr'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"NameAr\" class=\"form-control\" name=\"NameAr\"\r\n                                    #NameAr=\"ngModel\" [(ngModel)]=\"sparepart.SparePartNameAr\"\r\n                                    [class.is-invalid]=\"NameAr.touched && NameAr.errors || AddWorkOrderForm.submitted\" \r\n                                    [class.is-valid]=\"NameAr.valid && AddWorkOrderForm.submitted\" required/>\r\n                                    <div *ngIf=\"(NameAr.touched || AddWorkOrderForm.submitted) && NameAr.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            Arabic Name is required                               \r\n                                        </span>\r\n                                   </div>\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\">previous</button>\r\n                        <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n                \r\n                <p-tabPanel header=\"{{'workOrder.Labor'|translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div>\r\n                                    <input type=\"radio\" name=\"Id\" id=\"EmployeeId\" (click)=\"getAllEmployees()\"/>\r\n                                    {{'workOrder.Employee'|translate}}\r\n                                </div>\r\n                                <br>\r\n                                <div>                                     \r\n                                    <select class=\"form-control\" id=\"EmployeeId\" name=\"EmployeeId\" #EmployeeId=\"ngModel\"\r\n                                    [(ngModel)]=\"workOrder.employeeId\" #EmployeeName=\"ngModel\">\r\n                                        <option selected disabled>--select--</option>\r\n                                        <option *ngFor=\"let e of employees\" [value]=\"e.id\">                                        \r\n                                            {{e.employeeName}}                                       \r\n                                        </option>\r\n                                    </select>\r\n                                    <div *ngIf=\"(EmployeeName.touched || AddWorkOrderForm.submitted) && EmployeeName.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            Employee Name is required                               \r\n                                        </span>\r\n                                   </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div>\r\n                                    <input type=\"radio\" name=\"Id\" id=\"VendorId\" (click)=\"getAllVendors()\"/>\r\n                                    {{'workOrder.Vendor'|translate}}\r\n                                </div>\r\n                                <br>\r\n                                <div>                                     \r\n                                    <select class=\"form-control\" id=\"VendorId\" name=\"VendorId\" #VendorId=\"ngModel\"\r\n                                    [(ngModel)]=\"workOrder.vendorId\" #VendorName=\"ngModel\">\r\n                                        <option selected disabled>--select--</option>\r\n                                        <option *ngFor=\"let v of vendor\" [value]=\"v.id\">                                        \r\n                                            {{v.vendorName}}                                       \r\n                                        </option>\r\n                                    </select>\r\n                                    <div *ngIf=\"(VendorName.touched || AddWorkOrderForm.submitted \r\n                                                && (EmployeeName.touched || AddWorkOrderForm.submitted)) \r\n                                                && (VendorName.errors && EmployeeName.errors) ?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            Vendor Name is required                               \r\n                                        </span>\r\n                                   </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\">previous</button>\r\n                        <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n                <p-tabPanel header=\"{{'Actions.Attachments' |translate}}\">\r\n\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <p-fileUpload (onUpload)=\"upload($event)\" name=\"demo[]\"\r\n                                    url=\"http://localhost:51368/api/ImgUpload/\" multiple=\"multiple\"\r\n                                    accept=\".xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf\" maxFileSize=\"1000000\">                                                                      \r\n                                </p-fileUpload>\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-2\">\r\n                                <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\" \r\n                                class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>\r\n                            </div>\r\n                            <div class=\"col-lg-2\">\r\n                                <button pButton pRipple label=\"{{'Actions.Save' |translate}}\" icon=\"pi pi-check\" \r\n                                class=\"btn btn-info\" type=\"submit\" value=\"save\"></button>\r\n                            </div>\r\n                      </div>\r\n                      <br>\r\n                      <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\" [hidden]=\"isNextvalid\">Next</button>\r\n                      <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\" [hidden]=\"isPrevvalid\">previous</button>\r\n                      <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n            </p-tabView>\r\n        </form>\r\n    </ng-template>\r\n</p-dialog> \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Employee } from 'src/app/Shared/Models/Employee';\r\nimport { Miantenance } from 'src/app/Shared/Models/Miantenance';\r\nimport { SparePart } from 'src/app/Shared/Models/SparePart';\r\nimport { Status } from 'src/app/Shared/Models/Status';\r\nimport { Vendor } from 'src/app/Shared/Models/Vendor';\r\nimport { WorkOrder } from 'src/app/Shared/Models/WorkOrder';\r\nimport { EmployeeService } from 'src/app/Shared/services/employee.service';\r\nimport { VendorService } from 'src/app/Shared/services/vendor.service';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { WorkOrderService } from 'src/app/Shared/services/work-order.service';\r\nimport { Priority } from 'src/app/Shared/Models/Priority';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RequestStatus } from 'src/app/Shared/Models/RequestStatus';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\nimport { User } from 'src/app/Shared/Models/User';\r\n@Component({\r\n  selector: 'app-add-work-order',\r\n  templateUrl: './add-work-order.component.html',\r\n  styleUrls: ['./add-work-order.component.css']\r\n})\r\nexport class AddWorkOrderComponent implements OnInit {\r\n  WrokOrderDialog: boolean;\r\n  submitted: boolean;\r\n  maintenance: Miantenance;\r\n  workOrder: WorkOrder;\r\n  sparepart: SparePart;\r\n  employees: Employee[];\r\n  vendor: Vendor[];\r\n  uploadedFiles: any[] = [];\r\n  statusList: RequestStatus[];\r\n  priorityList: Priority[];\r\n  RequestID: Number;\r\n  index:number=0;\r\n  isNextvalid:boolean=false;\r\n  isPrevvalid:boolean=true;\r\n  workOrderDialog: boolean;\r\n  users:User[];\r\n  constructor(private employeeService: EmployeeService,\r\n    private vendorService: VendorService,\r\n    private sharedService: SharedService,\r\n    private workOrderService: WorkOrderService,\r\n    private router: Router,\r\n    private activeRoute: ActivatedRoute,\r\n    private translate:TranslateService,\r\n    private userService:UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.RequestID = this.activeRoute.snapshot.params['id'];\r\n    this.maintenance = {\r\n      id: 0,\r\n      problem: '',\r\n      partCost: 0.00,\r\n      laborCost: 0.00\r\n    };\r\n    this.sparepart = {\r\n      id: 0,\r\n      sparePartName: '',\r\n      sparePartNameAr: '',\r\n      sparePartCode: ''\r\n    };\r\n    this.workOrder = {\r\n      id: 0,\r\n      workOrderDate: new Date,\r\n      priorityId: 1,\r\n      userId: '',\r\n      vendorId: 0,\r\n      requestStatusId: 1,\r\n      ServiceRequestId: this.activeRoute.snapshot.params['id'],\r\n      maintenanceId: 0,\r\n      sparePartId: 0,\r\n      EquipmentId:0,\r\n      StatusName:'',\r\n      StatusNameAr:'',\r\n      EquipmentName:'',\r\n      EquipmentNameAr:''\r\n    };\r\n    this.openNew();\r\n  }\r\n  openNew() {\r\n    //console.log(\"addNew\");\r\n    this.WrokOrderDialog = true;\r\n    this.submitted = false;\r\n    this.workOrderService.createNewStatus().subscribe(data=>{console.log(data);\r\n    this.workOrderService.GetAllRequestStatus().subscribe\r\n    (data => { this.statusList = data,console.log(\"created\",this.statusList) })});\r\n    this.sharedService.getAllpriorities().subscribe(data => { this.priorityList = data });    \r\n  }\r\n  saveWorkOrder() {\r\n    this.submitted = true;\r\n    this.AddMaintenance();\r\n    // this.AddWorkOrder();\r\n    this.router.navigate(['/home/getRequests/']);\r\n  }\r\n  Addworkorder() {\r\n    //console.log(\"IIID\",this.workOrder.ServiceRequestId);\r\n    // this.workOrderService.AddWorkOrder(this.workOrder).subscribe(data => { console.log(\"WorkOrder\", data) });\r\n  }\r\n  AddMaintenance() {\r\n    this.sharedService.AddMaintenance(this.maintenance)\r\n      .subscribe(data => { this.maintenance = data, console.log(\"maintenance\", data) \r\n      this.workOrder.maintenanceId = this.maintenance.id;\r\n      this.sharedService.AddSparePart(this.sparepart).subscribe(data=>{this.sparepart=data\r\n      this.workOrder.sparePartId=this.sparepart.id\r\n       this.workOrderService.AddWorkOrder(this.workOrder).subscribe(data => { console.log(\"WorkOrder\", data) });\r\n    });\r\n      \r\n      });\r\n    //  this.Addworkorder();\r\n  }\r\n  hideDialog() {\r\n    this.workOrderDialog = false;\r\n    this.submitted = false;\r\n    this.router.navigate(['/home/getRequests/']);\r\n  }\r\n  getAllUsers() {\r\n    this.userService.getUsers().subscribe(data => { this.users = data \r\n    this.vendor = [];\r\n    this.workOrder.vendorId=0;\r\n  });\r\n  }\r\n  getAllVendors() {\r\n    this.vendorService.getAllVendors().subscribe(data => { this.vendor = data; console.log(\"vendors\", this.vendor) \r\n    this.users = [];\r\n    this.workOrder.userId='';\r\n  });\r\n}\r\n\r\n  onDrop(event: any) {\r\n    // console.log(event);\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    // your code goes here after droping files or any\r\n  }\r\n  onDragOver(evt) {\r\n    //console.log(evt);\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n  }\r\n  onDragLeave(evt) {\r\n    console.log(evt);\r\n\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n  }\r\n\r\n  upload(event) {\r\n    for (let file of event.files) {\r\n      console.log(event)\r\n      this.uploadedFiles.push(file);\r\n    }\r\n  }\r\n  Next()\r\n  {\r\n     this.index++;\r\n     if(this.index==4)\r\n     {\r\n       this.isNextvalid=true;\r\n       this.isPrevvalid=false;\r\n     }\r\n    console.log(\"indexNext\",this.index);\r\n  }\r\n   Previous()\r\n   {\r\n      this.index--;\r\n      if(this.index==0)\r\n      {\r\n        this.isNextvalid=false;\r\n        this.isPrevvalid=true;    \r\n      }    \r\n      console.log(\"indexPrev1\",this.index);\r\n   }\r\n   handleChange(e) {\r\n     this.index = e.index;\r\n     if(this.index==4)\r\n     {\r\n       this.isNextvalid=true;\r\n       this.isPrevvalid=false;\r\n     }\r\n     else if(this.index==0)\r\n     {\r\n       this.isNextvalid=false;\r\n       this.isPrevvalid=true;\r\n       console.log(\"Zeeero\",this.index);\r\n   }\r\n  }\r\n}\r\n","<p-dialog [(visible)]=\"WrokOrderDialog\" [style]=\"{width: '900px'}\" [modal]=\"true\" styleClass=\"p-fluid\" (onHide)=\"hideDialog()\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <h3 class=\"title\">{{'workOrder.AddWorkOrder'|translate}}</h3>\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n        <form (ngSubmit)=\"AddWorkOrderForPreventiveForm.valid && saveWorkOrder(workOrder)\" #AddWorkOrderForPreventiveForm=\"ngForm\">\r\n            <p-tabView [activeIndex]=\"index\" (onChange)=\"handleChange($event)\">\r\n                <p-tabPanel header=\"{{'workOrder.Details'|translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"Date\">{{'workOrder.Date'|translate}}</label>\r\n                                <input type=\"date\" pInputText id=\"Date\" class=\"form-control\" name=\"Date\"\r\n                                    #date=\"ngModel\" [(ngModel)]=\"maintenance.workOrderDate\" \r\n                                    [class.is-invalid]=\"date.touched && date.errors || AddWorkOrderForPreventiveForm.submitted\" \r\n                                    [class.is-valid]=\"date.valid && AddWorkOrderForPreventiveForm.submitted\" required/>\r\n                                    <div *ngIf=\"(date.touched || AddWorkOrderForPreventiveForm.submitted) && date.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            Date is required                               \r\n                                        </span>\r\n                                   </div>\r\n                            </div>\r\n                        \r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"priority\">{{'workOrder.Status'|translate}}</label>   \r\n                                <div>\r\n                                    <div>\r\n                                        <ul class=\"list-group\" pTooltip=\"select an status\" tooltipPosition=\"bottom\">\r\n                                            \r\n                                            <li class=\"list-group-item\" *ngFor=\"let item of statusList\">\r\n                                                <input type=\"radio\" [(ngModel)]=\"workOrder.RequestStatusId\"\r\n                                                    name=\"status\" id=\"status\" #status=\"ngModel\" [value]=\"item.id\" \r\n                                                    [class.is-invalid]=\"status.touched && status.errors || AddWorkOrderForPreventiveForm.submitted\" \r\n                                                    [class.is-valid]=\"status.valid && AddWorkOrderForPreventiveForm.submitted \" required/>\r\n                                                {{translate.currentLang == \"En\" ? item.status:item.statusAr}}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>                            \r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"priority\">{{'workOrder.Priority'|translate}}</label>\r\n                                <div>\r\n                                    <ul class=\"list-group\"  pTooltip=\"select a Priority\" tooltipPosition=\"bottom\">\r\n                                        <li class=\"list-group-item\" *ngFor=\"let item of priorityList\">\r\n                                            <input type=\"radio\" [(ngModel)]=\"workOrder.priorityId\"\r\n                                                name=\"Priority\" id=\"Priority\" #Priority=\"ngModel\" [value]=\"item.id\" \r\n                                                [class.is-invalid]=\"Priority.touched && Priority.errors || AddWorkOrderForPreventiveForm.submitted\" \r\n                                                [class.is-valid]=\"Priority.valid && AddWorkOrderForPreventiveForm.submitted\" required/>\r\n                                            {{translate.currentLang == \"En\" ? item.priorityLevel:item.priorityLevelAr}}\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">   \r\n                                <label for=\"Equipment\">{{'workOrder.Equipment'|translate}}</label>                                  \r\n                                <select class=\"form-control\" id=\"EquipmentId\" name=\"Equipment\" #Equipment=\"ngModel\"\r\n                                    [(ngModel)]=\"workOrder.equipmentId\" \r\n                                    pTooltip=\"select an equipment\" tooltipPosition=\"bottom\"\r\n                                    [class.is-invalid]=\"Equipment.touched && Equipment.errors || AddWorkOrderForPreventiveForm.submitted\" \r\n                                    [class.is-valid]=\"Equipment.valid && AddWorkOrderForPreventiveForm.submitted\" required>\r\n                                    <option selected disabled>--select--</option>\r\n                                    <option *ngFor=\"let e of equipmentList\" [value]=\"e.id\">                                        \r\n                                        {{translate.currentLang == \"En\" ? e.equipmentName:e.equipmentNameAr}}\r\n                                    </option>\r\n                                </select>\r\n                                <div *ngIf=\"(Equipment.touched || AddWorkOrderForPreventiveForm.submitted) && Equipment.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        Equipment is required                               \r\n                                    </span>\r\n                               </div>\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\" [hidden]=\"isNextvalid\">Next</button>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\" [hidden]=\"isPrevvalid\">previous</button>\r\n                            \r\n                        <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n                \r\n                <p-tabPanel header=\"{{'workOrder.Maintenance'|translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"Problem\">{{'workOrder.Problem'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"Problem\" class=\"form-control\" name=\"Problem\"\r\n                                     #problem=\"ngModel\" [(ngModel)]=\"maintenance.Problem\"\r\n                                     pTooltip=\"enter the problem\" tooltipPosition=\"bottom\"\r\n                                    [class.is-invalid]=\"problem.touched && problem.errors || AddWorkOrderForPreventiveForm.submitted\" \r\n                                    [class.is-valid]=\"problem.valid && AddWorkOrderForPreventiveForm.submitted\" required/>\r\n                                    <div *ngIf=\"(problem.touched || AddWorkOrderForPreventiveForm.submitted) && problem.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            problem is required                               \r\n                                        </span>\r\n                                   </div>\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"PartCost\">{{'workOrder.PartCost'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"PartCost\" class=\"form-control\" name=\"PartCost\"\r\n                                    #PartCost=\"ngModel\" [(ngModel)]=\"maintenance.PartCost\"\r\n                                    pTooltip=\"enter a partcost\" tooltipPosition=\"bottom\"\r\n                                    [class.is-invalid]=\"PartCost.touched && PartCost.errors || AddWorkOrderForPreventiveForm.submitted\" \r\n                                    [class.is-valid]=\"PartCost.valid && AddWorkOrderForPreventiveForm.submitted\" required/>\r\n                                    <div *ngIf=\"(PartCost.touched || AddWorkOrderForPreventiveForm.submitted) && PartCost.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            PartCost is required                               \r\n                                        </span>\r\n                                   </div>\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"LaborCost\">{{'workOrder.LaborCost'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"LaborCost\" class=\"form-control\" name=\"LaborCost\"\r\n                                    #LaborCost=\"ngModel\" [(ngModel)]=\"maintenance.LaborCost\"\r\n                                    pTooltip=\"enter a LaborCost\" tooltipPosition=\"bottom\"\r\n                                    [class.is-invalid]=\"LaborCost.touched && LaborCost.errors || AddWorkOrderForPreventiveForm.submitted\" \r\n                                    [class.is-valid]=\"LaborCost.valid && AddWorkOrderForPreventiveForm.submitted\" required/>\r\n                                    <div *ngIf=\"(LaborCost.touched || AddWorkOrderForPreventiveForm.submitted) && LaborCost.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            LaborCost is required                               \r\n                                        </span>\r\n                                   </div>\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\">previous</button>\r\n                        <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n                <p-tabPanel header=\"{{'workOrder.SparePart'|translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"Code\">{{'workOrder.Code'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"Code\" class=\"form-control\" name=\"Code\"\r\n                                    #Code=\"ngModel\" [(ngModel)]=\"sparepart.SparePartCode\"\r\n                                    pTooltip=\"enter a SparePartCode\" tooltipPosition=\"bottom\"\r\n                                    [class.is-invalid]=\"Code.touched && Code.errors || AddWorkOrderForPreventiveForm.submitted\" \r\n                                    [class.is-valid]=\"Code.valid && AddWorkOrderForPreventiveForm.submitted\" required/>\r\n                                    <div *ngIf=\"(Code.touched || AddWorkOrderForPreventiveForm.submitted) && Code.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            Code is required                               \r\n                                        </span>\r\n                                   </div>\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"Name\">{{'workOrder.Name'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"Name\" class=\"form-control\" name=\"Name\"\r\n                                    #sparePartName=\"ngModel\" [(ngModel)]=\"sparepart.SparePartName\"\r\n                                    pTooltip=\"select an sparePartName\" tooltipPosition=\"bottom\"\r\n                                    [class.is-invalid]=\"sparePartName.touched && sparePartName.errors || AddWorkOrderForPreventiveForm.submitted\" \r\n                                    [class.is-valid]=\"sparePartName.valid && AddWorkOrderForPreventiveForm.submitted\" required/>\r\n                                    <div *ngIf=\"(sparePartName.touched || AddWorkOrderForPreventiveForm.submitted) && sparePartName.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            English Name is required                               \r\n                                        </span>\r\n                                   </div>\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"NameAr\">{{'workOrder.NameAr'|translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"NameAr\" class=\"form-control\" name=\"NameAr\"\r\n                                    #NameAr=\"ngModel\" [(ngModel)]=\"sparepart.SparePartNameAr\"\r\n                                    pTooltip=\"enter a sparePartName in arabic\" tooltipPosition=\"bottom\"\r\n                                    [class.is-invalid]=\"NameAr.touched && NameAr.errors || AddWorkOrderForPreventiveForm.submitted\" \r\n                                    [class.is-valid]=\"NameAr.valid && AddWorkOrderForPreventiveForm.submitted\" required/>\r\n                                    <div *ngIf=\"(NameAr.touched || AddWorkOrderForPreventiveForm.submitted) && NameAr.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            Arabic Name is required                               \r\n                                        </span>\r\n                                   </div>\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\">previous</button>\r\n                        <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n                \r\n                <p-tabPanel header=\"{{'workOrder.Labor'|translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div>\r\n                                    <input type=\"radio\" name=\"Id\" id=\"EmployeeId\" (click)=\"getAllEmployees()\"/>\r\n                                    {{'workOrder.Employee'|translate}}\r\n                                </div>\r\n                                <br>\r\n                                <div>                                     \r\n                                    <select class=\"form-control\" id=\"EmployeeId\" name=\"EmployeeId\" \r\n                                    [(ngModel)]=\"workOrder.EmployeeId\" #EmployeeName=\"ngModel\"\r\n                                    [class.is-invalid]=\"(EmployeeName.touched && EmployeeName.errors)\r\n                                                        &&(VendorName.touched && VendorName.errors) \r\n                                                        || AddWorkOrderForPreventiveForm.submitted\" \r\n                                                        pTooltip=\"select an employee\" tooltipPosition=\"bottom\"\r\n                                    [class.is-valid]=\"(EmployeeName.valid || VendorName.valid)&& AddWorkOrderForPreventiveForm.submitted\" required>\r\n                                        <option selected disabled>--select--</option>\r\n                                        <option *ngFor=\"let e of employees\" [value]=\"e.id\">                                        \r\n                                        {{translate.currentLang == \"En\" ? e.employeeName:e.employeeNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div *ngIf=\"(EmployeeName.touched || AddWorkOrderForPreventiveForm.submitted) && EmployeeName.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            Employee Name is required                               \r\n                                        </span>\r\n                                   </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div>\r\n                                    <input type=\"radio\" name=\"Id\" id=\"VendorId\" (click)=\"getAllVendors()\"/>\r\n                                    {{'workOrder.Vendor'|translate}}\r\n                                </div>\r\n                                <br>\r\n                                <div>                                     \r\n                                    <select class=\"form-control\" id=\"VendorId\" name=\"VendorId\" \r\n                                    [(ngModel)]=\"workOrder.VendorId\" #VendorName=\"ngModel\"\r\n                                    >\r\n                                        <option selected disabled>--select--</option>\r\n                                        <option *ngFor=\"let v of vendor\" [value]=\"v.id\">                                         \r\n                                        {{translate.currentLang == \"En\" ? v.vendorName:v.vendorNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <!-- [class.is-invalid]=\"(VendorName.touched && VendorName.errors) \r\n                                                        && (EmployeeName.touched && EmployeeName.errors) \r\n                                                        && AddWorkOrderForPreventiveForm.submitted\" \r\n                                    [class.is-valid]=\"(VendorName.valid || EmployeeName.valid) \" required -->\r\n                                    <!-- <div *ngIf=\"(VendorName.touched || AddWorkOrderForPreventiveForm.submitted \r\n                                                && (EmployeeName.touched || AddWorkOrderForPreventiveForm.submitted)) \r\n                                                && (VendorName.errors && EmployeeName.errors) ?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            Vendor Name is required                               \r\n                                        </span>\r\n                                   </div> -->\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\" >Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\">previous</button>\r\n                        <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n                <p-tabPanel header=\"{{'Actions.Attachments' |translate}}\">\r\n\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <p-fileUpload (onUpload)=\"upload($event)\" name=\"demo[]\"\r\n                                    url=\"http://localhost:51368/api/ImgUpload/\" multiple=\"multiple\"\r\n                                    accept=\".xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf\" maxFileSize=\"1000000\">                                                                      \r\n                                </p-fileUpload>\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-2\">\r\n                                <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\" \r\n                                class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>\r\n                            </div>\r\n                            <div class=\"col-lg-2\">\r\n                                <button pButton pRipple label=\"{{'Actions.Save' |translate}}\" icon=\"pi pi-check\" \r\n                                class=\"btn btn-info\" value=\"save\" type=\"submit\"></button>\r\n                            </div>\r\n                      </div>\r\n                      <br>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\" [hidden]=\"isNextvalid\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\" [hidden]=\"isPrevvalid\">previous</button>\r\n                        <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n            </p-tabView>\r\n        </form>\r\n    </ng-template>\r\n</p-dialog> \r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Employee } from 'src/app/Shared/Models/Employee';\r\nimport { Miantenance } from 'src/app/Shared/Models/Miantenance';\r\nimport { SparePart } from 'src/app/Shared/Models/SparePart';\r\nimport { Status } from 'src/app/Shared/Models/Status';\r\nimport { Vendor } from 'src/app/Shared/Models/Vendor';\r\nimport { WorkOrder } from 'src/app/Shared/Models/WorkOrder';\r\nimport { EmployeeService } from 'src/app/Shared/services/employee.service';\r\nimport { VendorService } from 'src/app/Shared/services/vendor.service';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { WorkOrderService } from 'src/app/Shared/services/work-order.service';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\nimport { Priority } from 'src/app/Shared/Models/Priority';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RequestStatus } from 'src/app/Shared/Models/RequestStatus';\r\nimport { Equipment } from 'src/app/Shared/Models/Equipment';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\nimport { User } from 'src/app/Shared/Models/User';\r\n@Component({\r\n  selector: 'app-add-work-order-without-request',\r\n  templateUrl: './add-work-order-without-request.component.html',\r\n  styleUrls: ['./add-work-order-without-request.component.css']\r\n})\r\nexport class AddWorkOrderWithoutRequestComponent implements OnInit {\r\n  WrokOrderDialog: boolean;\r\n  submitted: boolean;\r\n  maintenance: Miantenance;\r\n  workOrder: WorkOrder;\r\n  sparepart: SparePart;\r\n  employees: Employee[];\r\n  vendor: Vendor[];\r\n  uploadedFiles: any[] = [];\r\n  statusList: RequestStatus[];\r\n  priorityList: Priority[];\r\n  RequestID: Number;\r\n  equipmentList:Equipment[];\r\n  index:number=0;\r\n  isNextvalid:boolean=false;\r\n  isPrevvalid:boolean=true;\r\n  users:User[]\r\n  constructor(private employeeService: EmployeeService,\r\n    private vendorService: VendorService,\r\n    private sharedService: SharedService,\r\n    private workOrderService: WorkOrderService,\r\n    private router: Router,\r\n    private activeRoute: ActivatedRoute,\r\n    private equipmentService:EquipmentService,\r\n    private translate:TranslateService,\r\n    private userService:UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.RequestID = this.activeRoute.snapshot.params['id'];\r\n    this.maintenance = {\r\n      id: 0,\r\n      problem: '',\r\n      partCost: 0.00,\r\n      laborCost: 0.00\r\n    };\r\n    this.sparepart = {\r\n      id: 0,\r\n      sparePartName: '',\r\n      sparePartNameAr: '',\r\n      sparePartCode: ''\r\n    };\r\n    this.workOrder = {\r\n      id: 0,\r\n      workOrderDate: new Date,\r\n      priorityId: 0,\r\n      userId: '',\r\n      vendorId: 0,\r\n      requestStatusId: 0,\r\n      ServiceRequestId: this.activeRoute.snapshot.params['id'],\r\n      maintenanceId: 0,\r\n      sparePartId: 0,\r\n      EquipmentId:0,\r\n      StatusName:'',\r\n      StatusNameAr:'',\r\n      EquipmentName:'',\r\n      EquipmentNameAr:''\r\n    };\r\n    this.openNew();\r\n  }\r\n  openNew() {\r\n    console.log(\"addNew\");\r\n    this.WrokOrderDialog = true\r\n    this.submitted = false;\r\n    this.workOrderService.createNewStatus().subscribe(data=>{console.log(data);\r\n    this.workOrderService.GetAllRequestStatus().subscribe\r\n    (data => { this.statusList = data,console.log(\"created\",this.statusList) })});\r\n    this.sharedService.getAllpriorities().subscribe(data => { this.priorityList = data });\r\n    this.getAllEquipments();    \r\n  }\r\n  saveWorkOrder() {\r\n    this.submitted = true;\r\n    this.AddMaintenance();\r\n    this.router.navigate(['/home/WorkOrderList/']);\r\n  }\r\n\r\n  hideDialog(){\r\n    this.WrokOrderDialog = false\r\n    this.submitted = false;\r\n    this.router.navigate(['/home/WorkOrderList/']);\r\n  }\r\n  \r\n\r\n\r\n  AddMaintenance() {\r\n    this.sharedService.AddMaintenance(this.maintenance)\r\n      .subscribe(data => { this.maintenance = data, console.log(\"maintenance\", data) \r\n      this.workOrder.maintenanceId = this.maintenance.id;\r\n      this.sharedService.AddSparePart(this.sparepart).subscribe(data=>{this.sparepart=data\r\n      this.workOrder.sparePartId=this.sparepart.id\r\n      this.workOrderService.AddOrderWithoutRequest(this.workOrder).subscribe(data => { console.log(\"WorkOrder\", data) });\r\n    });\r\n      \r\n});\r\n    //  this.Addworkorder();\r\n  }\r\n  getAllUsers() {\r\n    this.userService.getUsers().subscribe(data => { this.users = data });\r\n    this.vendor = [];\r\n  }\r\n  getAllVendors() {\r\n    this.vendorService.getAllVendors().subscribe(data => { this.vendor = data; console.log(\"vendors\", this.vendor) });\r\n    this.users = [];\r\n  }\r\ngetAllEquipments()\r\n{\r\n  this.equipmentService.getAllEquipments().subscribe(data=>{this.equipmentList=data})\r\n}\r\n  onDrop(event: any) {\r\n    // console.log(event);\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    // your code goes here after droping files or any\r\n  }\r\n  onDragOver(evt) {\r\n    //console.log(evt);\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n  }\r\n  onDragLeave(evt) {\r\n    console.log(evt);\r\n\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n  }\r\n\r\n  upload(event) {\r\n    for (let file of event.files) {\r\n      console.log(event)\r\n      this.uploadedFiles.push(file);\r\n    }\r\n  }\r\n  Next()\r\n  {\r\n     this.index++;\r\n     if(this.index==4)\r\n     {\r\n       this.isNextvalid=true;\r\n       this.isPrevvalid=false;\r\n     }\r\n    console.log(\"indexNext\",this.index);\r\n  }\r\n   Previous()\r\n   {\r\n      this.index--;\r\n      if(this.index==0)\r\n      {\r\n        this.isNextvalid=false;\r\n        this.isPrevvalid=true;    \r\n      }   \r\n      console.log(\"indexPrev1\",this.index);\r\n   }\r\n   handleChange(e) {\r\n     this.index = e.index;\r\n     if(this.index==4)\r\n     {\r\n       this.isNextvalid=true;\r\n       this.isPrevvalid=false;\r\n     }\r\n     else if(this.index==0)\r\n     {\r\n       this.isNextvalid=false;\r\n       this.isPrevvalid=true;\r\n       console.log(\"Zeeero\",this.index);\r\n     }\r\n   \r\n     console.log(\"index from onchange tab\",this.index);\r\n   }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SparePart } from '../Models/SparePart';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SparePartsService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n  httpHeader={headers: new HttpHeaders({\r\n    'content-type':'application/json',\r\n    'Accept': '*/*'\r\n  })};\r\n  getAllSpareParts():Observable<SparePart[]>\r\n  {\r\n    return this.httpClient.get<SparePart[]>(`${environment.GetAllSpareParts}`,this.httpHeader);\r\n  }\r\n\r\n  addSparePart(newSparePart: SparePart):Observable<SparePart>\r\n  {\r\n    return this.httpClient.post<SparePart>(`${environment.AddSparePart}`,newSparePart,this.httpHeader);\r\n  }\r\n  deleteSparePart(id: any): Observable <SparePart>{\r\n    return this.httpClient.delete<SparePart> (`${environment.DeleteSparePart}${id}`,this.httpHeader) ;\r\n}\r\n updateSparePart(id:Number,sparePart:SparePart):Observable<any>{\r\n  return this.httpClient.put<any> (`${environment.UpdateSparePart}${id}`,sparePart,this.httpHeader) ;\r\n }\r\n\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { EquipmentCoverage } from '../Models/Equipment-Coverage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EquipmentCoverageService {\r\n  httpHeader={headers: new HttpHeaders({\r\n    'content-type':'application/json',\r\n    'Accept': '*/*'\r\n  })};\r\n  constructor(private httpClient: HttpClient) { }\r\n  getAllEquipmentCoverage():Observable<EquipmentCoverage[]>\r\n  {\r\n    return this.httpClient.get<EquipmentCoverage[]>(`${environment.GetAllEquipmentCoverages}`,this.httpHeader);\r\n  }\r\n\r\n  addNewEquipmentCoverage(newEquipmentCoverage: EquipmentCoverage):Observable<EquipmentCoverage>\r\n  {\r\n    return this.httpClient.post<EquipmentCoverage>(`${environment.AddEquipmentCoverage}`,newEquipmentCoverage,this.httpHeader);\r\n  }\r\n  deleteEquipmentCoverage(id: any): Observable <EquipmentCoverage>{\r\n    return this.httpClient.delete<EquipmentCoverage> (`${environment.DeleteEquipmentCoverage}${id}`,this.httpHeader) ;\r\n}\r\n updateEquipmentCoverage(id:Number,equipmentCoverage:EquipmentCoverage):Observable<any>{\r\n  return this.httpClient.put<any> (`${environment.UpdateEquipmentCoverage}${id}`,equipmentCoverage,this.httpHeader) ;\r\n }\r\n\r\n\r\n}\r\n","<!-- <div class=\"card\">\r\n        <p-toolbar styleClass=\"p-mb-4\">\r\n            <h3>Equipment Maintenance Contract</h3>\r\n            <ng-template pTemplate=\"left\">\r\n                <button type=\"button\" pButton pRipple icon=\"pi pi-file-pdf\" (click)=\"exportPdf()\"\r\n                    class=\"p-button-warning download\" pTooltip=\"PDF\" tooltipPosition=\"bottom\"></button>\r\n            </ng-template>\r\n\r\n        </p-toolbar>\r\n    </div> -->\r\n<p-dialog [(visible)]=\"contractDialog\" (onHide)=\"hideDialog()\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <p-toolbar styleClass=\"p-mb-4\">\r\n                    <h3 class=\"title\">{{'contract.AddNewContract' | translate}}</h3>\r\n                    <ng-template pTemplate=\"left\">\r\n                        <button type=\"button\" pButton pRipple icon=\"pi pi-file-pdf\" (click)=\"exportPdf()\"\r\n                            class=\"p-button-warning download\" pTooltip=\"PDF\" tooltipPosition=\"bottom\"></button>\r\n                    </ng-template>\r\n\r\n                </p-toolbar>\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n        <form (ngSubmit)=\"AddContractForm.valid && saveContract()\" #AddContractForm=\"ngForm\">\r\n            <p-tabView [activeIndex]=\"index\" (onChange)=\"handleChange($event)\">\r\n                <p-tabPanel header=\"{{'contract.Details' | translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <legend>{{'contract.Details'| translate}}</legend>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"subject\">{{'contract.subject'| translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"subject\" class=\"form-control\"\r\n                                    name=\"subject\" [(ngModel)]=\"contractObj.subject\" #subject=\"ngModel\"\r\n                                    [class.is-invalid]=\"subject.touched && subject.errors || AddContractForm.submitted\"\r\n                                    [class.is-valid]=\"subject.valid && AddContractForm.submitted\" required/>\r\n                                    <div *ngIf=\"(subject.touched || AddContractForm.submitted) && subject.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            subject is required                               \r\n                                        </span>\r\n                                    </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"date\">{{'contract.StartDate'|translate}}</label>\r\n                                <input type=\"date\" class=\"form-control\" id=\"date\" name=\"date\" #date=\"ngModel\"\r\n                                    placeholder=\"Start Date\" [(ngModel)]=\"contractObj.startDate\"\r\n                                    [class.is-invalid]=\"date.touched && date.errors || AddContractForm.submitted\"\r\n                                    [class.is-valid]=\"date.valid && AddContractForm.submitted\" required>\r\n                                    <div *ngIf=\"(date.touched || AddContractForm.submitted) && date.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            Start date is required                               \r\n                                        </span>\r\n                                    </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"date\">{{'contract.EndDate'|translate}}</label>\r\n                                <input type=\"date\" class=\"form-control\" id=\"date\" name=\"Date\" #Date=\"ngModel\"\r\n                                    placeholder=\"End Date\" [(ngModel)]=\"contractObj.endDate\"\r\n                                    [class.is-invalid]=\"Date.touched && Date.errors || AddContractForm.submitted\"\r\n                                    [class.is-valid]=\"Date.valid && AddContractForm.submitted\" required>\r\n                                    <div *ngIf=\"(Date.touched || AddContractForm.submitted) && Date.errors?.required\">\r\n                                        <span class=\"text-danger\">        \r\n                                            End date is required                               \r\n                                        </span>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"healthName\">{{'equipment.healthCareUnit'|translate}}</label>\r\n                                <select class=\"form-control\" id=\"healthName\" name=\"healthName\" #healthName=\"ngModel\"\r\n                                    [(ngModel)]=\"contractObj.healthCareUnitId\"\r\n                                    [class.is-invalid]=\"healthName.touched && healthName.errors || AddContractForm.submitted\"\r\n                                    [class.is-valid]=\"healthName.valid && AddContractForm.submitted\" required>\r\n                                    <option selected>--select--</option>\r\n                                    <option *ngFor=\"let h of healthCareUnitsList\" [value]=\"h.id\">\r\n                                        {{translate.currentLang == \"En\" ? h.healthCareUnitName:h.healthCareUnitNameAr}}\r\n                                    </option>\r\n                                </select>\r\n                                <div *ngIf=\"(healthName.touched || AddContractForm.submitted) && healthName.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        Health name is required                               \r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"manufacturer\">{{'equipment.Manufacturer'| translate}}</label>\r\n\r\n                                <select class=\"form-control\" id=\"manufacturer\" #manufacturer=\"ngModel\"\r\n                                    name=\"manufacturer\" [(ngModel)]=\"contractObj.manufacturerId\"\r\n                                    [class.is-invalid]=\"manufacturer.touched && manufacturer.errors || AddContractForm.submitted\"\r\n                                    [class.is-valid]=\"manufacturer.valid && AddContractForm.submitted\" required>\r\n                                    <option selected>--select--</option>\r\n                                    <option *ngFor=\"let m of manufacturerList\" [value]=\"m.id\">\r\n                                        {{translate.currentLang == \"En\" ? m.manufacturerName:m.manufacturerNameAr}}\r\n                                    </option>\r\n                                </select>\r\n                                <div *ngIf=\"(manufacturer.touched || AddContractForm.submitted) && manufacturer.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        Manufacturer name is required                               \r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"supplier\">{{'equipment.Supplier'|translate}}</label>\r\n                                <select type=\"text\" id=\"supplier\" class=\"form-control\"\r\n                                    name=\"supplier\" #supplier=\"ngModel\" [(ngModel)]=\"contractObj.supplierId\"\r\n                                    [class.is-invalid]=\"supplier.touched && supplier.errors || AddContractForm.submitted\"\r\n                                    [class.is-valid]=\"supplier.valid && AddContractForm.submitted\" required>\r\n                                    <option selected>--select--</option>\r\n                                    <option *ngFor=\"let s of suppliersList\" [value]=\"s.id\">{{s.supplierName}}\r\n                                    </option>\r\n                                </select>\r\n                                <div *ngIf=\"(supplier.touched || AddContractForm.submitted) && supplier.errors?.required\">\r\n                                    <span class=\"text-danger\">        \r\n                                        Supplier name is required                               \r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-9\">\r\n                                <label for=\"Description\">{{'equipment.Description'| translate}}</label>\r\n                                <textarea class=\"form-control\" id=\"Description\" type=\"text\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"contractObj.description\" required></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\" [hidden]=\"isNextvalid\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\" [hidden]=\"isPrevvalid\">previous</button>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n    \r\n\r\n                <p-tabPanel header=\"{{'Actions.Attachments' |translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <legend>{{'Actions.Attachments' |translate}}</legend>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <p-fileUpload (onUpload)=\"upload($event)\" name=\"demo[]\"\r\n                                    url=\"http://localhost:51368/api/ImgUpload/\" multiple=\"multiple\"\r\n                                    accept=\".xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf\" maxFileSize=\"1000000\">\r\n                                </p-fileUpload>\r\n                            </div>\r\n                        </div>\r\n                        <br><br>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-2\">\r\n                                <button pButton pRipple label=\"Cancel\" icon=\"pi pi-times\" class=\"btn btn-info\"\r\n                                    (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>\r\n                            </div>\r\n                            <div class=\"col-lg-2\">\r\n                                <button pButton pRipple label=\"Save\" icon=\"pi pi-check\" class=\"btn btn-info\"\r\n                                        value=\"save\" type=\"submit\"></button>\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\" [hidden]=\"isNextvalid\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\" [hidden]=\"isPrevvalid\">previous</button>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n            </p-tabView>\r\n\r\n\r\n        </form>\r\n    </ng-template>\r\n\r\n</p-dialog>\r\n\r\n\r\n<!-- <p-dialog [(visible)]=\"eqCovrageDialog\" (onHide)=\"hideDialog()\" [style]=\"{width: '1024px'}\" [modal]=\"true\"\r\nstyleClass=\"p-fluid\">\r\n<ng-template pTemplate=\"content\">\r\n    <div>\r\n        <div class=\"header\">\r\n            <p-toolbar styleClass=\"p-mb-4\">\r\n                <h3 class=\"title\">{{'contract.AddNewEquipmentContract' | translate}}</h3>\r\n                <ng-template pTemplate=\"left\">\r\n                    <button type=\"button\" pButton pRipple icon=\"pi pi-file-pdf\" (click)=\"exportPdf()\"\r\n                        class=\"p-button-warning download\" pTooltip=\"PDF\" tooltipPosition=\"bottom\"></button>\r\n                </ng-template>\r\n\r\n            </p-toolbar>\r\n        </div>\r\n        <div>\r\n        </div>\r\n    </div>\r\n    <form (ngSubmit)=\"AddEqCoverageForm.valid && saveObject(equipmentCoverage)\" #AddEqCoverageForm=\"ngForm\">\r\n        <p-tabView>\r\n          \r\n\r\n            <p-tabPanel header=\"{{'equipmentCoverage.EqDetails' | translate}}\">\r\n                <fieldset class=\"tab\">\r\n                    <legend>{{'contract.Details'| translate}}</legend>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-3\">\r\n                            <label for=\"subject\">{{'contract.subject'|translate}}</label>\r\n                            <select class=\"form-control\" id=\"subject\" name=\"subject\" #subject=\"ngModel\"\r\n                                [(ngModel)]=\"eqCoverage.contractId\" [ngModelOptions]=\"{standalone: true}\"\r\n                                (click)=\"getAllContract()\">\r\n                                <option selected>--select--</option>\r\n                                <option *ngFor=\"let c of contractsList\" [value]=\"c.contractId\">\r\n                                    {{c.subject}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"col-md-3\">\r\n                            <p-multiSelect [options]=\"equipmentList\" optionValue=\"id\"\r\n                                [(ngModel)]=\"eqCoverage.equipmentsIDs\" [ngModelOptions]=\"{standalone: true}\"\r\n                                defaultLabel=\"Select an Equipment\" optionLabel=\"equipmentName\"></p-multiSelect>\r\n                        </div>\r\n                        <div class=\"col-md-3\">\r\n                            <label for=\"responseTime\">{{'contract.responseTime'| translate}}</label>\r\n                            <input type=\"number\" id=\"responseTime\" class=\"form-control\"\r\n                                placeholder=\"response Time\" required [ngModelOptions]=\"{standalone: true}\"\r\n                                [(ngModel)]=\"eqCoverage.responseTime\" autofocus />\r\n                        </div>\r\n\r\n                        <div class=\"col-md-3\">\r\n                            <label for=\"noOfvisits\">{{'contract.noOfvisits'|translate}}</label>\r\n                            <input type=\"number\" class=\"form-control\" id=\"numberOfVisits\"\r\n                                placeholder=\"No.Ofvisits\" [ngModelOptions]=\"{standalone: true}\"\r\n                                [(ngModel)]=\"eqCoverage.numberOfVisits\" required autofocus>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-3\">\r\n                            <label class=\"spare\" for=\"sparePart\">{{'contract.sparePart'|translate}}\r\n                                <input type=\"checkbox\" name=\"sparePart\" id=\"sparePart\" /></label>\r\n\r\n                        </div>\r\n                        <div class=\"col-md-3\">\r\n                            <label for=\"name\">{{'contract.subject'|translate}}</label>\r\n                            <select class=\"form-control\" id=\"sparePart\" name=\"sparePart\" #sparePart=\"ngModel\"\r\n                                [(ngModel)]=\"eqCoverage.sparePartId\">\r\n                                <option selected>--select--</option>\r\n                                <option *ngFor=\"let s of sparePartsList\" [value]=\"s.id\">\r\n                                    {{s.sparePartName}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-8\">\r\n                            <label for=\"Description\">{{'equipment.Description'| translate}}</label>\r\n                            <textarea class=\"form-control\" id=\"Description\" type=\"text\"\r\n                                [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"eqCoverage.description\"\r\n                                required autofocus></textarea>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n            </p-tabPanel>\r\n\r\n\r\n            <p-tabPanel header=\"{{'Actions.Attachments' |translate}}\">\r\n                <fieldset class=\"tab\">\r\n                    <legend>{{'Actions.Attachments' |translate}}</legend>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <p-fileUpload (onUpload)=\"upload($event)\" name=\"demo[]\"\r\n                                url=\"http://localhost:51368/api/ImgUpload/\" multiple=\"multiple\"\r\n                                accept=\".xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf\"\r\n                                maxFileSize=\"1000000\">\r\n                            </p-fileUpload>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <ng-template pTemplate=\"footer\">\r\n                                <button pButton pRipple label=\"Cancel\" icon=\"pi pi-times\" class=\"p-button-text\"\r\n                                    (click)=\"hideDialog()\" value=\"cancel\"></button>\r\n                                <button pButton pRipple label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\"\r\n                                    value=\"save\" type=\"submit\"></button>\r\n                            </ng-template>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n            </p-tabPanel>\r\n\r\n        </p-tabView>\r\n\r\n\r\n    </form>\r\n</ng-template>\r\n\r\n</p-dialog> -->","import { Component, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms'\r\nimport pdfMake from \"pdfmake/build/pdfmake\";\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts.js\";\r\nimport { MasterEquipment } from 'src/app/Shared/Models/MasterEquipment';\r\nimport { MasterequipmentService } from 'src/app/Shared/services/masterequipment.service';\r\nimport { Contract } from 'src/app/Shared/Models/Contract'\r\nimport { Manufacturer } from 'src/app/Shared/Models/Manufacturer';\r\nimport { Supplier } from 'src/app/Shared/Models/Supplier';\r\nimport { HealthCareUnit } from 'src/app/Shared/Models/HealthCareUnit';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { EquipmentCoverage } from 'src/app/Shared/Models/Equipment-Coverage';\r\nimport { ContractService } from 'src/app/Shared/services/contract.service';\r\nimport { SparePartsService } from 'src/app/Shared/services/spare-parts.service';\r\nimport { EquipmentCoverageService } from 'src/app/Shared/services/equipment-coverage.service';\r\nimport { SparePart } from 'src/app/Shared/Models/SparePart';\r\nimport { Equipment } from 'src/app/Shared/Models/Equipment';\r\nimport { EquipmentMainteneceComponent } from '../equipment-maintenece/equipment-maintenece.component';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\nimport { Router } from '@angular/router';\r\n\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\n@Component({\r\n  selector: 'app-sla',\r\n  templateUrl: './sla.component.html',\r\n  styleUrls: ['./sla.component.css']\r\n})\r\n\r\nexport class SlaComponent implements OnInit {\r\n  header: string = 'Service Level Agreement'\r\n  MasterEquipments: MasterEquipment[];\r\n  contractObj: Contract;\r\n  uploadedFiles: any[] = [];\r\n  manufacturerList: Manufacturer[];\r\n  suppliersList: Supplier[];\r\n  healthCareUnitsList: HealthCareUnit[];\r\n  eqCoverage: EquipmentCoverage;\r\n  contractsList: Contract[];\r\n  lstIDS=[]\r\n  sparePartsList: SparePart[];\r\n  equipmentList:Equipment[];\r\n  selectedEquipments:Equipment[];\r\n  contractDialog:boolean;\r\n  eqCovrageDialog:boolean;\r\n  index:number=0;\r\n  isNextvalid:boolean=false;\r\n  isPrevvalid:boolean=true;\r\n  constructor(private masterEquipmentService: MasterequipmentService,\r\n    private sharedService: SharedService,\r\n    private translate: TranslateService,\r\n    private contractService: ContractService,\r\n    private sparePartService: SparePartsService,\r\n    private equipmentCoverageService:EquipmentCoverageService,\r\n    private equipmentService:EquipmentService,\r\n    private router:Router\r\n    ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.contractObj = {\r\n      id: 0,\r\n      endDate: new Date,\r\n      subject: '',\r\n      healthCareUnitId: 0,\r\n      startDate: new Date,\r\n      supplierId: 0,\r\n      supplierName:'',\r\n      supplierNameAr:'',\r\n      contents:'',\r\n      number:0,\r\n      equipmentIDs:[]\r\n    }\r\n    this.eqCoverage = {\r\n      equipmentCoverageId: 0,\r\n      contractId: 0,\r\n      description: '',\r\n      descriptionAr: '',\r\n      equipmentsIDs: [],\r\n      numberOfVisits: 0,\r\n      responseTime: 0,\r\n      sparePartId: 0\r\n    }\r\n\r\n    this.eqCovrageDialog=false\r\n    this.sharedService.getAllmanufacturer().subscribe(data => { this.manufacturerList = data });\r\n    this.sharedService.getAllSuppliers().subscribe(data => { this.suppliersList = data });\r\n    this.sharedService.getAllunits().subscribe(data => { this.healthCareUnitsList = data });\r\n    this.masterEquipmentService.getAll().subscribe(data => { this.MasterEquipments = data });\r\n    this.contractService.getAllContracts().subscribe(data => { this.contractsList = data, console.log(\"contract\", this.contractsList)  });\r\n    this.sparePartService.getAllSpareParts().subscribe(data => { this.sparePartsList = data, \r\n      console.log(\"SPAREpART\", this.sparePartsList) \r\n    })\r\n    this.equipmentService.getAllEquipments().subscribe(data=>{this.equipmentList=data})\r\n    this.openNew();\r\n  }\r\n  //  exportPdf(){\r\n  //    console.log(\"download\")\r\n  //  }\r\n  \r\n\r\n  exportPdf(action = 'open') {\r\n    let docDefinition = {\r\n      header: this.header,\r\n      content: [\r\n        // Previous Configuration  \r\n        {\r\n          text: 'S.L.A',\r\n          fontSize: 16,\r\n          alignment: 'center',\r\n          color: '#047886'\r\n        }\r\n        , {\r\n          ul: [\r\n            'This contract agreement for Equipment Maintenance services between _____________ (hereafter referred to as Client and ______________ (hereafter referred to as \"Contractor\") is made and entered into upon the following date: ____/____/____.<br> The following equipment shall be maintained:<br>',\r\n            'The Client owns or has legal control of the above mentioned equipment and it is hereby incorporated into this    Maintenance Agreement by reference.  Under this agreement the Client would like the Equipment to be maintained in good working order. Such   required     level of maintenance services will include periodic inspections that are routine along with scheduled  repairs and the replacement of parts on an as needed basis. Emergency repairs will also be made when necessary whenever the Equipment becomes inoperable unexpectedly. The Contractor is in the business of providing equipment maintenance services, and hereby agrees to provide the following maintenance services to Client:',\r\n\r\n          ],\r\n\r\n        },\r\n        {\r\n          text: 'Equipment Schedules',\r\n          fontSize: 16,\r\n          alignment: 'left',\r\n\r\n        },\r\n        {\r\n          text: 'All of the Equipment described above shall be inspected and repaired on a regular basis, as suggested by the Equipments maintenance manual supplied by the manufacturer for each specific piece of equipment.',\r\n          fontSize: 14,\r\n          alignment: 'left',\r\n          color: '#495057'\r\n        },\r\n        {\r\n          text: 'Speed of Response',\r\n          fontSize: 16,\r\n          alignment: 'left',\r\n\r\n        },\r\n        {\r\n          text: 'The Contractor shall respond to any of Clients requests for Emergency repairs  within _____ hours of receiving a request from Client.',\r\n          fontSize: 14,\r\n          alignment: 'left',\r\n          color: '#495057'\r\n        },\r\n        {\r\n          text: 'Trust',\r\n          fontSize: 16,\r\n          alignment: 'left',\r\n\r\n        },\r\n        {\r\n          text: 'Contractor shall make sure that all services that are provided under the terms of this agreement are to be performed by properly trained and certified individuals. The before mentioned employees shall be Certified by an accredited school or official manufacturer training program.',\r\n          fontSize: 14,\r\n          alignment: 'left',\r\n          color: '#495057'\r\n        },\r\n        {\r\n          text: 'Techniciens Qualifications',\r\n          fontSize: 16,\r\n          alignment: 'left',\r\n\r\n        },\r\n        {\r\n          text: 'Contractor also certifies that all employees that will be maintaining Clients Equipment are legally eligible to work in the United States and that the Contractor is in compliance with all Federal and State wage and employment laws and with any additional applicable laws and regulations that are required administer the above mentioned services to the Client.',\r\n          fontSize: 14,\r\n          alignment: 'left',\r\n          color: '#495057'\r\n        },\r\n      ],\r\n\r\n\r\n    };\r\n    if (action === 'download') {\r\n      pdfMake.createPdf(docDefinition).download();\r\n    } else if (action === 'print') {\r\n      pdfMake.createPdf(docDefinition).print();\r\n    } else {\r\n      pdfMake.createPdf(docDefinition).open();\r\n    } \r\n  }\r\n\r\n  upload(event) {\r\n    for (let file of event.files) {\r\n      console.log(event)\r\n      this.uploadedFiles.push(file);\r\n    }\r\n  }\r\n  saveObject() {\r\n    this.saveEquipmentCoverage();\r\n  }\r\n  saveEquipmentCoverage(){\r\n    this.equipmentCoverageService.addNewEquipmentCoverage(this.eqCoverage).subscribe(data=>{this.eqCoverage=data,console.log(this.eqCoverage)})\r\n    console.log(\"lstIDS\",this.lstIDS)\r\n  }\r\n  saveContract(){\r\n    this.contractService.addNewContract(this.contractObj).subscribe(data=>{this.contractObj=data,console.log(\"contract\",this.contractObj)})  \r\n  //   this.router.navigateByUrl('/home/sla/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate(['/home/contractsList/']);\r\n  // });\r\n  }\r\n  getAllContract(){\r\n    this.contractService.getAllContracts().subscribe(data => { this.contractsList = data, console.log(\"contract\", this.contractsList)  });\r\n\r\n  }\r\n  openNew(){\r\n    this.contractDialog=true\r\n  }\r\n\r\n  hideDialog()\r\n  {\r\n    this.contractDialog=false;\r\n    this.router.navigate(['/home/contractsList/'])\r\n  }\r\n  addEqcoverage(){\r\n    this.eqCovrageDialog=true\r\n  }\r\n  Next()\r\n {\r\n    this.index++;\r\n    if(this.index===1)\r\n    {\r\n      this.isNextvalid=true;\r\n      this.isPrevvalid=false;\r\n    }\r\n }\r\n  Previous()\r\n  {\r\n     this.index--;\r\n     if(this.index===0)\r\n     {\r\n       this.isNextvalid=false;\r\n       this.isPrevvalid=true;    \r\n     }        \r\n  }\r\n  handleChange(e) {\r\n    this.index = e.index;\r\n    if(this.index===1)\r\n    {\r\n      this.isNextvalid=true;\r\n      this.isPrevvalid=false;\r\n    }\r\n    else if(this.index===0)\r\n    {\r\n      this.isNextvalid=false;\r\n      this.isPrevvalid=true;\r\n    }\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { EquipmentCoverage } from 'src/app/Shared/Models/Equipment-Coverage';\r\nimport { EquipmentCoverageService } from 'src/app/Shared/services/equipment-coverage.service';\r\n\r\n@Component({\r\n  selector: 'app-equipment-maintenece',\r\n  templateUrl: './equipment-maintenece.component.html',\r\n  styleUrls: ['./equipment-maintenece.component.css']\r\n})\r\nexport class EquipmentMainteneceComponent implements OnInit {\r\n  eqCoverage:EquipmentCoverage\r\n  contractDialog:boolean\r\n  constructor(private equipmentCoverageService:EquipmentCoverageService) { }\r\n  ngOnInit() {\r\n    this.eqCoverage = {\r\n      equipmentCoverageId: 0,\r\n      contractId: 0,\r\n      description: '',\r\n      descriptionAr: '',\r\n      equipmentsIDs: [],\r\n      numberOfVisits: 0,\r\n      responseTime: 0,\r\n      sparePartId: 0\r\n    }\r\n    this.contractDialog=true\r\n  }\r\nhideDialog(){\r\nthis.contractDialog=false\r\n}\r\n\r\nsaveObject() {\r\n  this.saveEquipmentCoverage();\r\n}\r\nsaveEquipmentCoverage(){\r\n  this.equipmentCoverageService.addNewEquipmentCoverage(this.eqCoverage).subscribe(data=>{this.eqCoverage=data,console.log(this.eqCoverage)})\r\n\r\n}\r\n}\r\n","<div class=\"card\">\r\n    <span [ngStyle]=\"{'color':'red'}\">{{error}}</span>\r\n    <!-- <span [ngStyle]=\"{'color':'green'}\">{{message}}</span> -->\r\n    <!-- <span [ngStyle]=\"{'color':'message'===null?:'red'}\">{{error}}</span> -->\r\n    <!-- <span [ngStyle]=\"{'color':'red'}\">{{error}}</span> -->\r\n    <p-card header=\"BEMS\" subheader=\"Welcome\" [style]=\"{width: '50rem'}\" styleClass=\"p-card-shadow\">\r\n      \r\n        <form (ngSubmit)=\"ForgetPasswordForm.valid && confirm()\" #ForgetPasswordForm=\"ngForm\">\r\n            <div class=\"row\">\r\n                <div class=\" col-md-7 inputs\">\r\n                    <div class=\"p-field  col-md-9 item\">\r\n                        <label for=\"email\">Email</label>\r\n                        <input type=\"text\" pInputText id=\"email\" [ngModelOptions]=\"{standalone: true}\"\r\n                            class=\"form-control\" [(ngModel)]=\"user.email\" required autofocus #email=\"ngModel\" pattern=\"^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\"/>\r\n                            <span class=\"text-danger\"\r\n                             *ngIf=\"(email.touched || ForgetPasswordForm.submitted) && email.errors?.required\">\r\n                                email is required\r\n                            </span>\r\n                            <span class=\"text-danger\"\r\n                             *ngIf=\"(email.touched || ForgetPasswordForm.submitted) && email.dirty && email.errors\">\r\n                                email is not correct\r\n                            </span>\r\n                    </div>\r\n                    <br>\r\n                    <div class=\"p-field col-md-9 item\">\r\n                        <input type=\"submit\" value=\"Submit\"  class=\"form-control btn btn-primary\" required autofocus />\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-5\">\r\n                    <img claSS=\"img\" src=\"./../assets/images/medical2.jpg\"  />\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    </p-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\n@Component({\r\n  selector: 'app-forget-password',\r\n  templateUrl: './forget-password.component.html',\r\n  styleUrls: ['./forget-password.component.css']\r\n})\r\nexport class ForgetPasswordComponent implements OnInit {\r\n\r\n  constructor(private userService: UserService, private router: Router) { }\r\n  user: User;\r\n  userReturned: User;\r\n  message: string;\r\n  Color: string;\r\n  error: string;\r\n  ngOnInit(): void {\r\n    this.user = {\r\n      id: '',\r\n      userName: '',\r\n      userNameAr: '',\r\n      email: '',\r\n      password: '',\r\n      roleName: '',\r\n      healthdirId: 0,\r\n      suborganizationId: 0,\r\n      token: '',\r\n      healthDistrictId: 0,\r\n      healthCareUnitId: 0,\r\n      organizationId: 0,\r\n      organizationName:'',\r\n      supplierId:0\r\n    }\r\n  }\r\n  confirm() {\r\n    this.userService.forgetPassword(this.user.email).subscribe(\r\n      data => {\r\n        this.router.navigate(['/login'])\r\n        //  this.message=\"please check you mail to reset password\";\r\n      },\r\n      error => {\r\n        //  this.user=null;\r\n        this.error = error.error.message;\r\n        //this.router.navigate(['/forgetPassword']);\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ResetPassword } from 'src/app/Shared/Models/ResetPassword';\r\nimport {UserService} from 'src/app/Shared/services/user.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  private token:string;\r\n  private email:string;\r\n  error:string;\r\n  constructor(private userService:UserService,private route:ActivatedRoute,\r\n    private router:Router) { }\r\n  resetPasswordModel:ResetPassword;\r\n  ngOnInit(): void {\r\n    this.resetPasswordModel={\r\n      Password:'',\r\n      ConfirmPassword:'',\r\n      Token:'',\r\n      Email:''\r\n    }\r\n    this.token = this.route.snapshot.queryParams['token'];\r\n    this.email = this.route.snapshot.queryParams['email'];\r\n    this.resetPasswordModel.Email=this.email;\r\n    this.resetPasswordModel.Token=this.token;\r\n    console.log(\"email1\",this.email);\r\n    console.log(\"email2\",this.resetPasswordModel.Email);\r\n  }\r\n  reset()\r\n  {\r\n    this.userService.resetPassword(this.resetPasswordModel).subscribe(data=>{console.log(\"reset\",data)\r\n    if(data!=null)\r\n    {\r\n      this.router.navigate(['/login']);\r\n    }\r\n     else\r\n     {\r\n      this.router.navigate(['/resetPassword']);\r\n      this.error=\"failed to change password, please try again\";\r\n     }\r\n    });\r\n  }\r\n}\r\n","<div class=\"card\">\r\n    <p-card header=\"BEMS\" subheader=\"Welcome\" [style]=\"{width: '50rem'}\" styleClass=\"p-card-shadow\">\r\n        <span style=\"color: red;\">{{error}}</span>\r\n        <form>\r\n            <div class=\"row\">\r\n                <div class=\" col-md-7 inputs\">\r\n\r\n                    <div class=\"p-field  col-md-9 item\">\r\n                        <label for=\"Password\">Password</label>\r\n                        <input type=\"password\" pInputText id=\"Password\" [ngModelOptions]=\"{standalone: true}\"\r\n                            class=\"form-control\" [(ngModel)]=\"resetPasswordModel.Password\" required autofocus />\r\n                    </div>\r\n                   \r\n                    <div class=\"p-field col-md-9 item\">\r\n                        <label for=\"ConfirmPassword\">ConfirmPassword</label>\r\n                        <input type=\"password\" pInputText id=\"ConfirmPassword\" [ngModelOptions]=\"{standalone: true}\"\r\n                            class=\"form-control\" [(ngModel)]=\"resetPasswordModel.ConfirmPassword\" required autofocus />\r\n                    </div>\r\n                    <!-- <input type=\"hidden\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"resetPasswordModel.Email\">\r\n                    <input type=\"hidden\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"resetPasswordModel.Token\"> -->\r\n                    <br />                      \r\n                    <br>\r\n                    <div class=\"p-field col-md-9 item\">\r\n                        <input type=\"submit\" value=\"Reset\"  class=\"form-control btn btn-primary\" (click)=\"reset()\" required autofocus />\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </form>\r\n    </p-card>\r\n</div>\r\n","<!-- <div class=\"container-fluid\"> -->\r\n    <div class=\"card\">\r\n        <p-toolbar styleClass=\"p-mb-4\">\r\n            <ng-template pTemplate=\"left\">\r\n                <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary p-button-rounded p-mr-2\"\r\n                    routerLink=\"/home/sla\" pTooltip=\"add a contract\" tooltipPosition=\"right\"></button>\r\n\r\n\r\n            </ng-template>\r\n\r\n\r\n        </p-toolbar>\r\n\r\n        <p-table #dt [value]=\"contracts\" [rows]=\"10\" [paginator]=\"true\" [(selection)]=\"selectedContracts\"\r\n        styleClass=\"p-datatable-responsive-demo\"\r\n            [rowHover]=\"true\" dataKey=\"id\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            [showCurrentPageReport]=\"true\" [globalFilterFields]=\"['subject']\">\r\n            <ng-template pTemplate=\"caption\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    <h5 class=\"p-m-0\">{{'contract.ManageContracts' |translate}}</h5>\r\n\r\n                    <span class=\"p-input-icon-right\">\r\n                        <i class=\"pi pi-search\"></i>\r\n                        <input pInputText type=\"text\" class=\"form-control\"\r\n                            (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                            placeholder=\"{{'search.Search'|translate}}...\" />\r\n                    </span>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n\r\n                    <th pSortableColumn=\"subject\">{{'contract.subject'|translate}} <p-sortIcon field=\"subject\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n\r\n                    <th>{{'Actions.Action'|translate}}</th>\r\n                </tr>\r\n                <tr>\r\n\r\n                    <th>\r\n                        <input pInputText type=\"text\" (input)=\"dt.filter($event.target.value, 'subject', 'contains')\"\r\n                            [value]=\"dt.filters['subject']?.value\" placeholder=\"{{'search.SearchbyName'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n\r\n\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-contract>\r\n                <tr>\r\n                    <td>\r\n                        {{translate.currentLang == \"En\" ? contract.subject:contract.subject}}\r\n                    </td>\r\n\r\n                    <td>\r\n                        <button pButton class=\"p-button-rounded p-button-info\" (click)=\"addEqContract()\" label=\"AddEq\"\r\n                            pTooltip=\"add an Equipment Contract\" tooltipPosition=\"top\"></button>\r\n                        <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-info edit\"\r\n                            (click)=\"openNew(contract)\" pTooltip=\"Edit a Contract\" tooltipPosition=\"top\"></button>\r\n                        <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\"\r\n                            (click)=\"deleteContract(contract.contractId)\" pTooltip=\"delete a Contract\"\r\n                            tooltipPosition=\"top\"></button>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"summary\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    In total there are {{contracts ? contracts.length : 0 }} contracts.\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n    <p-dialog [(visible)]=\"contractDialog\" (onHide)=\"hideDialog()\" [style]=\"{width: '1024px'}\" [modal]=\"true\"\r\n        styleClass=\"p-fluid\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <p-toolbar styleClass=\"p-mb-4\">\r\n                        <h3 class=\"title\">{{'contract.EditNewContract' | translate}}</h3>\r\n                        <ng-template pTemplate=\"left\">\r\n                            <button type=\"button\" pButton pRipple icon=\"pi pi-file-pdf\" (click)=\"exportPdf()\"\r\n                                class=\"p-button-warning download\" pTooltip=\"PDF\" tooltipPosition=\"bottom\"></button>\r\n                        </ng-template>\r\n\r\n                    </p-toolbar>\r\n                </div>\r\n                <div>\r\n                </div>\r\n            </div>\r\n            <form (ngSubmit)=\"AddContractForm.valid && saveObject(contractObj)\" #AddContractForm=\"ngForm\">\r\n                <p-tabView>\r\n                    <p-tabPanel header=\"{{'contract.Details' | translate}}\">\r\n                        <fieldset class=\"tab\">\r\n                            <legend>{{'contract.Details'| translate}}</legend>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"subject\">{{'contract.subject'| translate}}</label>\r\n                                    <input type=\"text\" pInputText id=\"subject\" class=\"form-control\" #subject=\"ngModel\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"contractObj.subject\"\r\n                                        autofocus [class.is-invalid]=\"subject.touched && subject.errors\"\r\n                                        pTooltip=\"Enter a subject\" tooltipPosition=\"bottom\"\r\n                                        [class.is-valid]=\"subject.valid && AddContractForm.submitted\" />\r\n                                    <span class=\"text-danger\"\r\n                                        *ngIf=\"(subject.touched || AddContractForm.submitted) && subject.errors?.required\">\r\n                                        subject is required\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"startDate\">{{'contract.StartDate'|translate}}</label>\r\n                                    <input type=\"date\" name=\"startDate\" class=\"form-control\" id=\"startDate\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" placeholder=\"Start Date\"\r\n                                        [(ngModel)]=\"contractObj.startDate\" required autofocus\r\n                                        [class.is-invalid]=\"startDate.touched && startDate.errors\"\r\n                                        [class.is-valid]=\"startDate.valid && AddContractForm.submitted\"\r\n                                        #startDate=\"ngModel\">\r\n                                    <div\r\n                                        *ngIf=\"(startDate.touched || AddContractForm.submitted) && startDate.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            Installation Date is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"endDate\">{{'contract.EndDate'|translate}}</label>\r\n                                    <input type=\"date\" name=\"endDate\" class=\"form-control\" id=\"endDate\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" placeholder=\"End Date\"\r\n                                        [(ngModel)]=\"contractObj.endDate\" required autofocus\r\n                                        [class.is-invalid]=\"endDate.touched && endDate.errors\"\r\n                                        [class.is-valid]=\"endDate.valid && AddContractForm.submitted\"\r\n                                        #endDate=\"ngModel\">\r\n                                    <span class=\"text-danger\"\r\n                                        *ngIf=\"(endDate.touched || AddContractForm.submitted) && endDate.errors?.required\">\r\n                                        endDate is required\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-3 form-group\">\r\n                                    <label for=\"healthName\">{{'equipment.healthCareUnit'|translate}}</label>\r\n                                    <select class=\"form-control\" id=\"healthName\" name=\"healthName\" #healthName=\"ngModel\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"contractObj.healthCareUnit\"\r\n                                        [class.is-invalid]=\"healthName.touched && healthName.errors\"\r\n                                        [class.is-valid]=\"healthName.valid && AddContractForm.submitted\"\r\n                                        pTooltip=\"select a healthCareUnit\" tooltipPosition=\"bottom\">\r\n                                        <option selected>--select--</option>\r\n                                        <option *ngFor=\"let h of healthCareUnitsList\" [value]=\"h.id\">\r\n                                            {{translate.currentLang == \"En\" ?\r\n                                            h.healthCareUnitName:h.healthCareUnitNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div>\r\n\r\n                                        <span class=\"text-danger\"\r\n                                            *ngIf=\"(healthName.touched || AddContractForm.submitted) && healthName.errors?.required\">\r\n                                            healthCareUnitName is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-md-3 form-group\">\r\n                                    <label for=\"manufacturer\">{{'equipment.Manufacturer'| translate}}</label>\r\n\r\n                                    <select class=\"form-control\" id=\"manufacturer\" #manufacturer=\"ngModel\"\r\n                                        name=\"manufacturer\" [(ngModel)]=\"contractObj.manufacturerId\"\r\n                                        [class.is-invalid]=\"manufacturer.touched && manufacturer.errors\"\r\n                                        pTooltip=\"select a manufacturer\" tooltipPosition=\"bottom\"\r\n                                        [class.is-valid]=\"manufacturer.valid && AddContractForm.submitted\">\r\n                                        <span class=\"text-danger\"\r\n                                            *ngIf=\"(manufacturer.touched || AddContractForm.submitted) && manufacturer.errors?.required\">\r\n                                            manufacturer is required\r\n                                        </span>\r\n                                        <option selected>--select--</option>\r\n                                        <option *ngFor=\"let m of manufacturerList\" [value]=\"m.id\">\r\n                                            {{translate.currentLang == \"En\" ? m.manufacturerName:m.manufacturerNameAr}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"supplier\">{{'equipment.Supplier'|translate}}</label>\r\n                                    <select type=\"text\" id=\"supplier\" class=\"form-control\" pTooltip=\"Enter a Name\"\r\n                                        tooltipPosition=\"bottom\" [ngModelOptions]=\"{standalone: true}\" name=\"supplier\"\r\n                                        [(ngModel)]=\"contractObj.supplierId\" #supplierId=\"ngModel\">\r\n                                        <option selected>--select--</option>\r\n                                        <option *ngFor=\"let s of suppliersList\" [value]=\"s.id\">{{s.supplierName}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-9\">\r\n                                    <label for=\"Description\">{{'equipment.Description'| translate}}</label>\r\n                                    <textarea class=\"form-control\" id=\"Description\" type=\"text\"\r\n                                        pTooltip=\"Enter a Description\" tooltipPosition=\"bottom\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"contractObj.description\"\r\n                                        required autofocus></textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12\">\r\n\r\n                                <ng-template pTemplate=\"footer\">\r\n\r\n                                    <button pButton pRipple label=\"{{'Actions.Save' |translate}}\" icon=\"pi pi-check\"\r\n                                        class=\"p-button-text\" (click)=\"updateContract()\" value=\"save\"></button>\r\n                                </ng-template>\r\n                            </div>\r\n                        </fieldset>\r\n                    </p-tabPanel>\r\n\r\n\r\n                    <p-tabPanel header=\"{{'Actions.Attachments' |translate}}\">\r\n                        <fieldset class=\"tab\">\r\n                            <legend>{{'Actions.Attachments' |translate}}</legend>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12\">\r\n                                    <p-fileUpload (onUpload)=\"upload($event)\" name=\"demo[]\"\r\n                                        url=\"http://localhost:51368/api/ImgUpload/\" multiple=\"multiple\"\r\n                                        accept=\".xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf\"\r\n                                        maxFileSize=\"1000000\">\r\n                                    </p-fileUpload>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-2\">\r\n                                    <button pButton pRipple label=\"{{'Actions.Cancel' |translate}}\" icon=\"pi pi-times\"\r\n                                        class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\"\r\n                                        type=\"button\"></button>\r\n                                </div>\r\n                                <div class=\"col-lg-2\">\r\n                                    <button pButton pRipple label=\"{{'Actions.Save' |translate}}\" icon=\"pi pi-check\"\r\n                                        value=\"save\" type=\"submit\" class=\"btn btn-info\"></button>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"row\">\r\n                                <div class=\"col-md-12\">\r\n                                    <ng-template pTemplate=\"footer\">\r\n                                        \r\n                                        \r\n                                    </ng-template>\r\n                                </div>\r\n                            </div> -->\r\n                        </fieldset>\r\n                    </p-tabPanel>\r\n\r\n                </p-tabView>\r\n\r\n\r\n            </form>\r\n        </ng-template>\r\n\r\n    </p-dialog>\r\n\r\n    <p-dialog [(visible)]=\"eqCovrageDialog\" (onHide)=\"hideDialog()\" [style]=\"{width: '1024px'}\" [modal]=\"true\"\r\n        styleClass=\"p-fluid\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <p-toolbar styleClass=\"p-mb-4\">\r\n                        <h3 class=\"title\">{{'contract.AddNewEquipmentContract' | translate}}</h3>\r\n                        <ng-template pTemplate=\"left\">\r\n                            <button type=\"button\" pButton pRipple icon=\"pi pi-file-pdf\" (click)=\"exportPdf()\"\r\n                                class=\"p-button-warning download\" pTooltip=\"PDF\" tooltipPosition=\"bottom\"></button>\r\n                        </ng-template>\r\n\r\n                    </p-toolbar>\r\n                </div>\r\n                <div>\r\n                </div>\r\n            </div>\r\n            <form (ngSubmit)=\"AddEqCoverageForm.valid && saveObject(equipmentCoverage)\" #AddEqCoverageForm=\"ngForm\">\r\n                <p-tabView [activeIndex]=\"index\" (onChange)=\"handleChange($event)\">\r\n\r\n\r\n                    <p-tabPanel header=\"{{'equipmentCoverage.EqDetails' | translate}}\">\r\n                        <fieldset class=\"tab\">\r\n                            <legend>{{'contract.Details'| translate}}</legend>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-3 form-group\">\r\n                                    <label for=\"subject\">{{'contract.subject'|translate}}</label>\r\n                                    <select class=\"form-control\" id=\"subject\" name=\"subject\" #subject=\"ngModel\"\r\n                                        [(ngModel)]=\"eqCoverage.contractId\" (click)=\"getAllContract()\"\r\n                                        pTooltip=\"select a contract\" tooltipPosition=\"bottom\"\r\n                                        [class.is-invalid]=\"subject.touched && subject.errors || AddEqCoverageForm.submitted\"\r\n                                        [class.is-valid]=\"subject.valid && AddEqCoverageForm.submitted\" required>\r\n                                        <option selected>--select--</option>\r\n                                        <option *ngFor=\"let c of contractsList\" [value]=\"c.contractId\">\r\n                                            {{c.subject}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div\r\n                                        *ngIf=\"(subject.touched || AddEqCoverageForm.submitted) && subject.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            subject is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3 form-group\">\r\n                                    <label for=\"equipments\">{{'contract.Equipments'| translate}}</label>\r\n                                    <p-multiSelect [options]=\"equipmentList\" optionValue=\"id\" #equipmentName=\"ngModel\"\r\n                                        [(ngModel)]=\"eqCoverage.equipmentsIDs\" name=\"equipmentName\"\r\n                                        pTooltip=\"select an equipment\" tooltipPosition=\"bottom\"\r\n                                        defaultLabel=\"Select an Equipment\" optionLabel=\"equipmentName\" required>\r\n                                    </p-multiSelect>\r\n                                    <div\r\n                                        *ngIf=\"(equipmentName.touched || AddEqCoverageForm.submitted) && equipmentName.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            Equipment name is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"responseTime\">{{'contract.responseTime'| translate}}</label>\r\n                                    <input type=\"number\" id=\"responseTime\" class=\"form-control\" name=\"responseTime\"\r\n                                        #responseTime=\"ngModel\" [(ngModel)]=\"eqCoverage.ResponseTime\"\r\n                                        pTooltip=\"Enter a responseTime\" tooltipPosition=\"bottom\"\r\n                                        [class.is-invalid]=\"responseTime.touched && responseTime.errors || AddEqCoverageForm.submitted\"\r\n                                        [class.is-valid]=\"responseTime.valid && AddEqCoverageForm.submitted\" required />\r\n                                    <div\r\n                                        *ngIf=\"(responseTime.touched || AddEqCoverageForm.submitted) && responseTime.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            response Time is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"noOfvisits\">{{'contract.noOfvisits'|translate}}</label>\r\n                                    <input type=\"number\" class=\"form-control\" id=\"numberOfVisits\"\r\n                                        pTooltip=\"Enter a number of visits\" tooltipPosition=\"bottom\"\r\n                                        name=\"numberOfVisits\" #numberOfVisits=\"ngModel\"\r\n                                        [(ngModel)]=\"eqCoverage.NumberOfVisits\"\r\n                                        [class.is-invalid]=\"numberOfVisits.touched && numberOfVisits.errors || AddEqCoverageForm.submitted\"\r\n                                        [class.is-valid]=\"numberOfVisits.valid && AddEqCoverageForm.submitted\" required>\r\n                                    <div\r\n                                        *ngIf=\"(numberOfVisits.touched || AddEqCoverageForm.submitted) && numberOfVisits.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            number Of Visits is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-3\">\r\n                                    <label class=\"spare\" for=\"sparePart\">{{'contract.sparePart'|translate}}\r\n                                        <input type=\"checkbox\" name=\"sparePart\" id=\"sparePart\" />\r\n                                    </label>\r\n\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"name\">{{'contract.subject'|translate}}</label>\r\n                                    <select class=\"form-control\" id=\"sparePart\" name=\"sparePart\" #sparePart=\"ngModel\"\r\n                                        [(ngModel)]=\"eqCoverage.SparePartId\"\r\n                                        [class.is-invalid]=\"sparePart.touched && sparePart.errors || AddEqCoverageForm.submitted\"\r\n                                        [class.is-valid]=\"sparePart.valid && AddEqCoverageForm.submitted\"\r\n                                        pTooltip=\"Enter a sparePart\" tooltipPosition=\"bottom\" required>\r\n                                        <option selected>--select--</option>\r\n                                        <option *ngFor=\"let s of sparePartsList\" [value]=\"s.id\">\r\n                                            {{s.sparePartName}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div\r\n                                        *ngIf=\"(sparePart.touched || AddEqCoverageForm.submitted) && sparePart.errors?.required\">\r\n                                        <span class=\"text-danger\">\r\n                                            SparePart is required\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-8\">\r\n                                    <label for=\"Description\">{{'equipment.Description'| translate}}</label>\r\n                                    <textarea class=\"form-control\" id=\"Description\" type=\"text\"\r\n                                        pTooltip=\"Enter a Description\" tooltipPosition=\"bottom\"\r\n                                        [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"eqCoverage.description\"\r\n                                        required autofocus></textarea>\r\n                                </div>\r\n                            </div>\r\n                            <br>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\"\r\n                                [hidden]=\"isNextvalid\">Next</button>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\"\r\n                                [hidden]=\"isPrevvalid\">previous</button>\r\n                            <br><br><br>\r\n                        </fieldset>\r\n                    </p-tabPanel>\r\n\r\n\r\n                    <p-tabPanel header=\"{{'Actions.Attachments' |translate}}\">\r\n                        <fieldset class=\"tab\">\r\n                            <legend>{{'Actions.Attachments' |translate}}</legend>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12\">\r\n                                    <p-fileUpload (onUpload)=\"upload($event)\" name=\"demo[]\"\r\n                                        url=\"http://localhost:51368/api/ImgUpload/\" multiple=\"multiple\"\r\n                                        accept=\".xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf\"\r\n                                        maxFileSize=\"1000000\">\r\n                                    </p-fileUpload>\r\n                                </div>\r\n                            </div>\r\n                            <br>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-2\">\r\n                                    <button pButton pRipple label=\"Cancel\" icon=\"pi pi-times\" class=\"btn btn-info\"\r\n                                        (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>\r\n                                </div>\r\n                                <div class=\"col-lg-2\">\r\n                                    <button pButton pRipple label=\"Save\" icon=\"pi pi-check\" class=\"btn btn-info\"\r\n                                        value=\"save\" type=\"submit\"></button>\r\n                                </div>\r\n                            </div>\r\n                            <br>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\"\r\n                                [hidden]=\"isNextvalid\">Next</button>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\"\r\n                                [hidden]=\"isPrevvalid\">previous</button>\r\n                            <br><br><br>\r\n\r\n                            <!-- <div class=\"row\">\r\n                                <div class=\"col-md-12\">\r\n                                    <ng-template pTemplate=\"footer\">\r\n                                        \r\n                                        \r\n                                    </ng-template>\r\n                                </div>\r\n                            </div> -->\r\n                        </fieldset>\r\n                    </p-tabPanel>\r\n\r\n                </p-tabView>\r\n\r\n\r\n            </form>\r\n        </ng-template>\r\n\r\n    </p-dialog>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nimport { Contract } from 'src/app/Shared/Models/Contract';\r\nimport { Equipment } from 'src/app/Shared/Models/Equipment';\r\nimport { EquipmentCoverage } from 'src/app/Shared/Models/Equipment-Coverage';\r\nimport { HealthCareUnit } from 'src/app/Shared/Models/HealthCareUnit';\r\nimport { Manufacturer } from 'src/app/Shared/Models/Manufacturer';\r\nimport { SparePart } from 'src/app/Shared/Models/SparePart';\r\nimport { Supplier } from 'src/app/Shared/Models/Supplier';\r\nimport { ContractService } from 'src/app/Shared/services/contract.service';\r\nimport { EquipmentCoverageService } from 'src/app/Shared/services/equipment-coverage.service';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { SparePartsService } from 'src/app/Shared/services/spare-parts.service';\r\n\r\n@Component({\r\n  selector: 'app-contracts-list',\r\n  templateUrl: './contracts-list.component.html',\r\n  styleUrls: ['./contracts-list.component.scss']\r\n})\r\nexport class ContractsListComponent implements OnInit,OnDestroy {\r\n  contractObj: Contract;\r\n  contracts: Contract[];\r\n  selectedContracts: Contract[];\r\n  contractDialog: boolean;\r\n  eqCoverage: EquipmentCoverage;\r\n  manufacturerList: Manufacturer[]\r\n  suppliersList: Supplier[]\r\n  healthCareUnitsList: HealthCareUnit[]\r\n  sparePartsList: SparePart[]\r\n  equipmentList: Equipment[]\r\n  submitted: boolean;\r\n  eqCovrageDialog:boolean\r\n  contractsList: Contract[];\r\n  contractsObgs:any;\r\n  lstIDS=[];\r\n  index:number=0;\r\n  isNextvalid:boolean=false;\r\n  isPrevvalid:boolean=true;\r\n\r\n  constructor(private contractService: ContractService,\r\n    private translate: TranslateService,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private sparePartService: SparePartsService,\r\n   private equipmentCoverageService:EquipmentCoverageService,\r\n    private equipmentService: EquipmentService) { }\r\n  ngOnDestroy(): void {\r\n    this.contractsObgs.unsubscribe()\r\n    console.log(\"unsub\")\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.contractObj = {\r\n      id: 0,\r\n      contents: '',\r\n      endDate: new Date,\r\n      healthCareUnitId: 0,\r\n      startDate: new Date,\r\n      subject: '',\r\n      supplierId: 0,\r\n      supplierName:'',\r\n      supplierNameAr:'',\r\n      number:0,\r\n      equipmentIDs:[]\r\n    }\r\n    this.eqCoverage = {\r\n      equipmentCoverageId: 0,\r\n      contractId: 0,\r\n      description: '',\r\n      descriptionAr: '',\r\n      equipmentsIDs: [],\r\n      numberOfVisits: 0,\r\n      responseTime: 0,\r\n      sparePartId: 0\r\n    }\r\n   this.contractsObgs  =this.contractService.getAllContracts().subscribe(data => { this.contracts = data })\r\n    this.sharedService.getAllmanufacturer().subscribe(data => { this.manufacturerList = data });\r\n    this.sharedService.getAllSuppliers().subscribe(data => { this.suppliersList = data });\r\n    this.sharedService.getAllunits().subscribe(data => { this.healthCareUnitsList = data });\r\n    this.sparePartService.getAllSpareParts().subscribe(data => {\r\n      this.sparePartsList = data,\r\n      console.log(\"SPAREpART\", this.sparePartsList)\r\n    })\r\n    this.equipmentService.getAllEquipments().subscribe(data => { this.equipmentList = data })\r\n  }\r\n\r\n  deleteContract(contractId) {\r\n    this.contractService.deleteContract(contractId).subscribe(data => { this.contractObj = data, this.getAllContract(),console.log(this.contractObj, \"deleted\") })\r\n \r\n\r\n  }\r\n  openNew(conObj, EqCoverageObg) {\r\n\r\n    this.contractObj = conObj\r\n    this.eqCoverage = EqCoverageObg\r\n    console.log(this.contractObj, this.eqCoverage, \"objs\")\r\n\r\n    this.contractDialog = true;\r\n    this.submitted = false;\r\n  }\r\n  hideDialog() {\r\n    this.contractDialog = false;\r\n  \r\n  }\r\n  updateContract() {\r\n    this.submitted = true;\r\n    this.contractDialog = false\r\n    this.contractService.updateContract(this.contractObj.id, this.contractObj).subscribe(data => {this.hideDialog(), console.log(this.contractObj) })\r\n  \r\n  }\r\n  saveObject() {\r\n    this.saveEquipmentCoverage();\r\n  }\r\n  saveEquipmentCoverage(){\r\n    this.equipmentCoverageService.addNewEquipmentCoverage(this.eqCoverage).subscribe(data=>{this.eqCoverage=data,console.log(this.eqCoverage)})\r\n    console.log(\"lstIDS\",this.lstIDS)\r\n  }\r\n  addEqContract(){\r\n    this.eqCovrageDialog = true\r\n  }\r\n  getAllContract(){\r\n    this.contractService.getAllContracts().subscribe(data => { this.contractsList = data, console.log(\"contract\", this.contractsList)  });\r\n  }\r\n  Next()\r\n  {\r\n     this.index++;\r\n     if(this.index==1)\r\n     {\r\n       this.isNextvalid=true;\r\n       this.isPrevvalid=false;\r\n     }\r\n    else\r\n    {\r\n      this.isNextvalid=false;\r\n      this.isPrevvalid=false;\r\n    }\r\n    console.log(\"indexNext\",this.index);\r\n  }\r\n   Previous()\r\n   {\r\n      this.index--;\r\n      if(this.index==0)\r\n      {\r\n        this.isNextvalid=false;\r\n        this.isPrevvalid=true;    \r\n      }   \r\n      else\r\n      {\r\n        this.isNextvalid=false;\r\n        this.isPrevvalid=false;\r\n      } \r\n      console.log(\"indexPrev1\",this.index);\r\n   }\r\n   handleChange(e) {\r\n     this.index = e.index;\r\n     if(this.index==1)\r\n     {\r\n       this.isNextvalid=true;\r\n       this.isPrevvalid=false;\r\n     }\r\n     else if(this.index==0)\r\n     {\r\n       this.isNextvalid=false;\r\n       this.isPrevvalid=true;\r\n       console.log(\"Zeeero\",this.index);\r\n     }\r\n    else\r\n    { this.isNextvalid=false;\r\n      this.isPrevvalid=false;\r\n    }\r\n     console.log(\"index from onchange tab\",this.index);\r\n   }\r\n}\r\n","\r\n    <!-- <p-messages [value]=\"msgs\"></p-messages> -->\r\n    <p-toast posinset=\"top-right\"></p-toast>\r\n\r\n    \r\n    <div class=\"container-fluid\">\r\n\r\n        <div class=\"card\" >\r\n            <div class=\"card-body\" >\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-11\">       <h5>{{'healthUnit.ManageUnits' |translate}}</h5></div>\r\n                    <div class=\"col-md-1\" style=\"text-align: right;\">     \r\n                        <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary  p-button-rounded p-mr-2 new\"\r\n                        routerLink=\"/home/addUnit\" pTooltip=\"Add a New HealthCareUnit\" tooltipPosition=\"right\"></button>\r\n                    </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\"><br/></div></div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\"> \r\n    <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n    <p-table #dt [value]=\"healthUnits\" [rows]=\"10\" styleClass=\"p-datatable-striped\"  [paginator]=\"false\"\r\n        [(selection)]=\"selectedUnits\" [rowHover]=\"true\" dataKey=\"id\" \r\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [showCurrentPageReport]=\"true\"\r\n        [globalFilterFields]=\"['healthCareUnitCode','healthCareUnitName','healthCareUnitNameAr','organizationName','organizationNameAr','healthDirectoryName','healthDirectoryNameAr','healthDistrictName','healthDistrictNameAr']\">\r\n        <ng-template pTemplate=\"caption\">\r\n            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n           \r\n\r\n                <span class=\"p-input-icon-right\">\r\n                    <i class=\"pi pi-search\"></i>\r\n                    <input pInputText type=\"text\" class=\"form-control\"\r\n                        (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                        placeholder=\"{{'search.Search'|translate}}...\" />\r\n                </span>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th pSortableColumn=\"healthCareUnitCode\"  style=\"width: 10%;\">{{'healthCareUnit.Code'|translate}} <p-sortIcon\r\n                        field=\"healthCareUnitCode\"></p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"namenn1\" style=\"width: 30%;\">{{'healthCareUnit.Name'|translate}} <p-sortIcon field=\"healthCareUnitName\">\r\n                </p-sortIcon>\r\n            </th>\r\n                <th pSortableColumn=\"organizationName\">{{'healthCareUnit.organization'|translate}} <p-sortIcon\r\n                        field=\"organizationName\"></p-sortIcon>\r\n                </th>\r\n                 <th pSortableColumn=\"healthDirectoryName\">{{'healthCareUnit.governorate'|translate}} <p-sortIcon\r\n                        field=\"healthDirectoryName\"></p-sortIcon>\r\n                </th> \r\n                <th pSortableColumn=\"healthDistrictName\">{{'healthCareUnit.district'|translate}} <p-sortIcon field=\"healthDistrictName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n         \r\n                <!-- <th pSortableColumn=\"director\">{{'healthCareUnit.director'|translate}} <p-sortIcon field=\"Director\">\r\n                    </p-sortIcon>\r\n                </th> -->\r\n                <th style=\"width: 10%;\">{{'Actions.Action'|translate}}</th>\r\n            </tr>\r\n            <tr>\r\n                <th>\r\n                    <input pInputText type=\"text\"\r\n                        (input)=\"dt.filter($event.target.value, 'healthCareUnitCode', 'contains')\"\r\n                        [value]=\"dt.filters['healthCareUnitCode']?.value\"\r\n                        placeholder=\"{{'search.Search'|translate}}\" class=\"p-column-filter form-control\">\r\n                </th>\r\n                <th>\r\n                    <input *ngIf=\"translate.currentLang==='En'\" pInputText type=\"text\"\r\n                    (input)=\"dt.filter($event.target.value, 'healthCareUnitName', 'equals')\"\r\n                    [value]=\"dt.filters['healthCareUnitName']?.value\"\r\n                    placeholder=\"{{'search.Search'|translate}}\" class=\"p-column-filter form-control\">\r\n                    <input *ngIf=\"translate.currentLang==='Ar'\" pInputText type=\"text\"\r\n                    (input)=\"dt.filter($event.target.value, 'healthCareUnitNameAr', 'equals')\"\r\n                    [value]=\"dt.filters['healthCareUnitNameAr']?.value\"\r\n                    placeholder=\"{{'search.Search'|translate}}\" class=\"p-column-filter form-control\">\r\n                </th>\r\n                <th>\r\n                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"organizationList\" \r\n                    placeholder=\"{{'search.Search'|translate}}\" \r\n                    [showClear]=\"true\" appendTo=\"body\" optionLabel=\"name\"\r\n                    optionValue=\"name\"\r\n                    (onChange)=\"dt.filter($event.value,'organizationName','equals')\"\r\n                    [filterBy]=\"dt.filters['organizationName']?.value\" \r\n                    styleClass=\"ui-column-filter\">\r\n                    </p-dropdown>\r\n                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"organizationList\" \r\n                    placeholder=\"{{'search.Search'|translate}}\" \r\n                    [showClear]=\"true\" appendTo=\"body\" optionLabel=\"nameAr\"\r\n                    optionValue=\"nameAr\"\r\n                    (onChange)=\"dt.filter($event.value,'organizationNameAr','equals')\"\r\n                    [filterBy]=\"dt.filters['organizationNameAr']?.value\" \r\n                      styleClass=\"ui-column-filter\" >\r\n                    </p-dropdown>\r\n                </th>\r\n                <th>\r\n                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"healthDirectories\" \r\n                    placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthDirectoryName\"  optionValue=\"healthDirectoryName\"\r\n                    [showClear]=\"true\" appendTo=\"body\"\r\n                    (onChange)=\"dt.filter($event.value,'healthDirectoryName','equals');fillDistrict($event.value)\"\r\n                    [filterBy]=\"dt.filters['healthDirectoryName']?.value\" \r\n                      styleClass=\"ui-column-filter\">\r\n                    </p-dropdown>\r\n                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"healthDirectories\" \r\n                    placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthDirectoryNameAr\"  optionValue=\"healthDirectoryNameAr\"\r\n                    [showClear]=\"true\" appendTo=\"body\"\r\n                    (onChange)=\"dt.filter($event.value,'healthDirectoryNameAr','equals');fillDistrict($event.value)\"\r\n                    [filterBy]=\"dt.filters['healthDirectoryNameAr']?.value\" \r\n                      styleClass=\"ui-column-filter\" >\r\n                    </p-dropdown>\r\n                </th>\r\n                <th>\r\n                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"HealthDistrictsList\" \r\n                    placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthDistrictName\"  optionValue=\"healthDistrictName\"\r\n                    [showClear]=\"true\" appendTo=\"body\"\r\n                    (onChange)=\"dt.filter($event.value,'healthDistrictName','equals')\"\r\n                    [filterBy]=\"dt.filters['healthDistrictName']?.value\" \r\n                    styleClass=\"ui-column-filter\" class=\"filterDropdwon\"></p-dropdown>\r\n                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"HealthDistrictsList\" \r\n                    placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthDistrictNameAr\"  optionValue=\"healthDistrictNameAr\"\r\n                    [showClear]=\"true\" appendTo=\"body\"\r\n                    (onChange)=\"dt.filter($event.value,'healthDistrictNameAr','equals')\"\r\n                    [filterBy]=\"dt.filters['healthDistrictNameAr']?.value\" \r\n                    styleClass=\"ui-column-filter\"></p-dropdown>\r\n                </th>\r\n               \r\n                <!-- <th>\r\n                    <input pInputText type=\"text\"\r\n                    (input)=\"dt.filter($event.target.value, 'Director', 'contains')\"\r\n                    [value]=\"dt.filters['Director']?.value\"\r\n                    placeholder=\"search\" class=\"p-column-filter form-control FilterSearch\">\r\n                </th> -->\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-unit>\r\n            <tr>\r\n                <td>\r\n                    {{unit.healthCareUnitCode}}\r\n                </td>\r\n                <td>\r\n                    {{translate.currentLang == \"En\" ? unit.healthCareUnitName:unit.healthCareUnitNameAr}}\r\n                </td>\r\n\r\n                <td>\r\n                    {{translate.currentLang == \"En\" ? unit.organizationName:unit.organizationNameAr}}\r\n                    <!-- {{unit.organizationName}} -->\r\n                </td>\r\n\r\n                <td>\r\n                    {{translate.currentLang == \"En\" ? unit.healthDirectoryName:unit.healthDirectoryNameAr}}\r\n                </td>\r\n\r\n                <td>\r\n                    {{translate.currentLang == \"En\" ? unit.healthDistrictName:unit.healthDistrictNameAr}}\r\n                </td>\r\n\r\n         \r\n                <!-- <td>\r\n                    {{unit.director}}\r\n                </td> -->\r\n\r\n                <td>\r\n                    <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-info edit\"\r\n                        (click)=\"openNew(unit)\" pTooltip=\"edit a unit\" tooltipPosition=\"top\"></button>\r\n                    <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\"\r\n                        (click)=\"confirmDelete(unit.id)\" pTooltip=\"delete a unit\" tooltipPosition=\"top\"></button>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"summary\">\r\n            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                {{'In total there are.In total there are'| translate}} {{healthUnits ? healthUnits.length : 0 }} {{\"Sidebar.healthUnitsList\"| translate}}.\r\n            </div>\r\n        </ng-template>\r\n    </p-table>\r\n    <p-paginator [rows]=\"10\" [totalRecords]=\"count\" (onPageChange)=\"clicktbl($event)\"></p-paginator>\r\n\r\n</div></div></div></div></div>\r\n<!--------------------------------------edit--------------------------------------->\r\n<p-dialog [(visible)]=\"healthUnitDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <h3 class=\"title\"><legend>{{'healthUnit.healthCareUnits'|translate}}</legend></h3>\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n        <form (ngSubmit)=\"editUnitForm.valid && updateUnit()\" #editUnitForm=\"ngForm\">\r\n            <p-tabView [activeIndex]=\"index\" (onChange)=\"handleChange($event)\">\r\n                <p-tabPanel header=\"{{'equipment.Details' | translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        \r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"name\">{{'healthCareUnit.Name'|translate}}</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\"\r\n                                    pTooltip=\"Enter A Unit Name\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"healthUnitobj.healthCareUnitName\" #healthCareUnitName=\"ngModel\"\r\n                                    [class.is-invalid]=\"healthCareUnitName.touched && healthCareUnitName.errors || editUnitForm.submitted\"\r\n                                    [class.is-valid]=\"healthCareUnitName.valid && editUnitForm.submitted\" required>\r\n                                <div\r\n                                    *ngIf=\"(healthCareUnitName.touched || editUnitForm.submitted) && healthCareUnitName.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        name is required\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"nameAr\">{{'healthCareUnit.NameAr'|translate}}</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"nameAr\" name=\"nameAr\"\r\n                                    pTooltip=\"Enter A Unit Name in arabic\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"healthUnitobj.healthCareUnitNameAr\" #healthCareUnitNameAr=\"ngModel\"\r\n                                    [class.is-invalid]=\"healthCareUnitNameAr.touched && healthCareUnitNameAr.errors || editUnitForm.submitted\"\r\n                                    [class.is-valid]=\" healthCareUnitNameAr.valid && editUnitForm.submitted\" required>\r\n                                <div\r\n                                    *ngIf=\"(healthCareUnitNameAr.touched || editUnitForm.submitted) && healthCareUnitNameAr.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        nameAr is required\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"code\">{{'healthCareUnit.Code'|translate}}</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"code\" name=\"code\"\r\n                                    pTooltip=\"Enter A Unit code\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"healthUnitobj.healthCareUnitCode\" #healthCareUnitcode=\"ngModel\"\r\n                                    [class.is-invalid]=\"healthCareUnitcode.touched && healthCareUnitcode.errors || editUnitForm.submitted\"\r\n                                    [class.is-valid]=\"healthCareUnitcode.valid && editUnitForm.submitted\" required>\r\n                                <div\r\n                                    *ngIf=\"(healthCareUnitcode.touched || editUnitForm.submitted) && healthCareUnitcode.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        Code is required\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"directoryName\">{{'healthCareUnit.governorate'|translate}}</label>\r\n                                <select class=\"form-control\" id=\"directoryName\" pTooltip=\"select A directory Name\"\r\n                                    tooltipPosition=\"bottom\" name=\"directoryName\" #directoryName=\"ngModel\"\r\n                                    [(ngModel)]=\"healthUnitobj.healthDirectoryId\" (change)=\"loadDistricts(healthUnitobj.healthDirectoryId)\"\r\n                                    [class.is-invalid]=\"directoryName.touched && directoryName.errors || editUnitForm.submitted\"\r\n                                    [class.is-valid]=\" directoryName.valid && editUnitForm.submitted\" required>\r\n                                    <option>{{'healthUnit.name'|translate}}</option>\r\n                                    <option *ngFor=\"let h of healthDirectories\" [value]=\"h.id\">\r\n                                        {{translate.currentLang == \"En\" ? h.healthDirectoryName:h.hhealthDirectoryNameAr}}\r\n                                    </option>\r\n                                </select>\r\n                                <div\r\n                                    *ngIf=\"(directoryName.touched || editUnitForm.submitted) && directoryName.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        nameAr is required\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"districtName\">{{'healthCareUnit.district'|translate}}</label>\r\n                                <select class=\"form-control\" id=\"districtName\" pTooltip=\"select A district Name\"\r\n                                    tooltipPosition=\"bottom\" name=\"districtName\" #districtName=\"ngModel\"\r\n                                    [(ngModel)]=\"healthUnitobj.healthDistrictId\"\r\n                                    [class.is-invalid]=\"districtName.touched && districtName.errors || editUnitForm.submitted\"\r\n                                    [class.is-valid]=\" districtName.valid && editUnitForm.submitted\" required>\r\n                                    <option>{{'healthUnit.name'|translate}}</option>\r\n                                    <option *ngFor=\"let h of healthDistricts\" [value]=\"h.id\">\r\n                                        {{translate.currentLang == \"En\" ? h.healthDistrictName:h.healthDistrictNameAr}}\r\n                                    </option>\r\n                                </select>\r\n                                <div\r\n                                    *ngIf=\"(districtName.touched || editUnitForm.submitted) && districtName.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        nameAr is required\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"organization\">{{'healthCareUnit.organization'|translate}}</label>\r\n                                <select class=\"form-control\" id=\"organization\" pTooltip=\"select A organization Name\"\r\n                                    tooltipPosition=\"bottom\" name=\"organization\" #organization=\"ngModel\"\r\n                                    [(ngModel)]=\"healthUnitobj.organizationId\"\r\n                                    [class.is-invalid]=\"organization.touched && organization.errors || editUnitForm.submitted\"\r\n                                    [class.is-valid]=\" organization.valid && editUnitForm.submitted\" required>\r\n                                    <option>{{'healthUnit.name'|translate}}</option>\r\n                                    <option *ngFor=\"let org of organizationList\" [value]=\"org.id\">\r\n                                        {{translate.currentLang == \"En\" ? org.name:org.nameAr}}\r\n                                    </option>\r\n                                </select>\r\n                                <div\r\n                                    *ngIf=\"(organization.touched || editUnitForm.submitted) && organization.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        nameAr is required\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div> \r\n                        <br>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\"\r\n                                [hidden]=\"isNextvalid\">Next</button>\r\n                            <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\"\r\n                                [hidden]=\"isPrevvalid\">previous</button>\r\n\r\n                            <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n                <p-tabPanel header=\"{{'healthCareUnit.MoreDetails' | translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"director\">{{'healthCareUnit.director'|translate}}</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"director\" name=\"director\"\r\n                                    pTooltip=\"Enter director Name\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"healthUnitobj.director\" #director=\"ngModel\">\r\n                                <!-- <div\r\n                                    *ngIf=\"(director.touched || editUnitForm.submitted) && director.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        Director name is required\r\n                                    </span>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Phone\">{{'healthCareUnit.Phone'|translate}}</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"Phone\" name=\"Phone\"\r\n                                    pTooltip=\"Enter Phone\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"healthUnitobj.phone\" #Phone=\"ngModel\">\r\n                                <!-- <div\r\n                                    *ngIf=\"(Phone.touched || editUnitForm.submitted) && Phone.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        Phone number is required\r\n                                    </span>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Mobile\">{{'healthCareUnit.Mobile'|translate}}</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"Mobile\" name=\"Mobile\"\r\n                                    pTooltip=\"Enter Mobile number\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"healthUnitobj.mobile\" #Mobile=\"ngModel\">\r\n                                <!-- <div\r\n                                    *ngIf=\"(Mobile.touched || editUnitForm.submitted) && Mobile.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        Mobile number is required\r\n                                    </span>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Adress\">{{'healthCareUnit.Adress'| translate}}</label>\r\n                                <textarea class=\"form-control\" id=\"Adress\" name=\"Adress\" type=\"text\"\r\n                                    [(ngModel)]=\"healthUnitobj.adress\"\r\n                                    pTooltip=\"Please,Select An equipmentDescription\"\r\n                                    tooltipPosition=\"bottom\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Email\">{{'healthCareUnit.Email'|translate}}</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"Email\" name=\"Email\"\r\n                                    pTooltip=\"Enter Email\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"healthUnitobj.email\" #Email=\"ngModel\">\r\n                                <!-- <div\r\n                                    *ngIf=\"(Email.touched || editUnitForm.submitted) && Email.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        Email is required\r\n                                    </span>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Long\">{{'healthCareUnit.Long'|translate}}</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"Long\" name=\"Long\"\r\n                                    pTooltip=\"Enter Long number\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"healthUnitobj.long\" #Long=\"ngModel\">\r\n                                <!-- <div\r\n                                    *ngIf=\"(Long.touched || editUnitForm.submitted) && Long.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        Long number is required\r\n                                    </span>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Lat\">{{'healthCareUnit.Lat'|translate}}</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"Lat\" name=\"Lat\"\r\n                                    pTooltip=\"Enter Lat number\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"healthUnitobj.lat\" #Lat=\"ngModel\">\r\n                                <!-- <div\r\n                                    *ngIf=\"(Lat.touched || editUnitForm.submitted) && Lat.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        Lat number is required\r\n                                    </span>\r\n                                </div> -->\r\n                            </div>\r\n                        </div>\r\n                        \r\n\r\n                        <br>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\"\r\n                            [hidden]=\"isNextvalid\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\"\r\n                            [hidden]=\"isPrevvalid\">previous</button>\r\n\r\n                        <br><br><br>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-3\">\r\n                                <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                                    class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                                <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\"\r\n                                    class=\"btn btn-info\" value=\"save\" type=\"submit\"></button>\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n            </p-tabView>\r\n            <p-dialog [(visible)]=\"errorDialog\" [style]=\"{width: '350px'}\">\r\n                <p-header style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n                <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{error}}</span>\r\n            </p-dialog>\r\n        </form>\r\n\r\n    </ng-template>\r\n\r\n\r\n</p-dialog>\r\n<!-- </div> -->","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\r\nimport { HealthCareUnit } from 'src/app/Shared/Models/HealthCareUnit';\r\nimport { HealthDistrict } from 'src/app/Shared/Models/HealthDistrict';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport {ConfirmationService,Message, MessageService} from 'primeng/api';\r\nimport { OrganizationService } from 'src/app/Shared/services/organization.service';\r\nimport { Organization } from 'src/app/Shared/Models/Organization';\r\nimport { healthDirectory } from 'src/app/Shared/Models/healthDirectory';\r\nimport { Paging } from 'src/app/Shared/Models/Paging';\r\n@Component({\r\n  selector: 'app-health-units-list',\r\n  templateUrl: './health-units-list.component.html',\r\n  styleUrls: ['./health-units-list.component.scss']\r\n})\r\nexport class HealthUnitsListComponent implements OnInit {\r\n  healthUnitobj:HealthCareUnit;\r\n  healthUnitDialog:boolean;\r\n  healthUnits:HealthCareUnit[];\r\n  selectedUnits:HealthCareUnit[];\r\n  healthDistricts:HealthDistrict[];\r\n  HealthDistrictsList:HealthDistrict[];\r\n  healthDirectories:healthDirectory[];\r\n  organizationList:Organization[];\r\n  organization:Organization;\r\n  unitId:number;\r\n  submitted:boolean;\r\n  msgs: Message[] = [];\r\n  index:number=0;\r\n  isNextvalid:boolean=false;\r\n  isPrevvalid:boolean=true;\r\n  selectedLang:string;\r\n  errorDialog: boolean;\r\n  error:string\r\n  count: number;\r\n  page: Paging;\r\n  constructor(private sharedService:SharedService,\r\n    private translate: TranslateService,\r\n    private router:Router,private confirmationService: ConfirmationService,\r\n    private organizationService:OrganizationService,private messageservice:MessageService\r\n    ) {\r\n      // this.translate.onLangChange.subscribe((event: LangChangeEvent) =>\r\n      // {\r\n      //   if(event.lang == 'Ar')\r\n      //   {\r\n      //     this.selectedLang='Ar';\r\n      //   } \r\n      //   else       \r\n      //   {\r\n      //     this.selectedLang='En';\r\n      //   }\r\n      // });\r\n     }\r\n\r\n  ngOnInit() {\r\n    this.healthUnitobj={\r\n      id:0,\r\n      healthCareUnitCode:'',\r\n      healthCareUnitName:'',\r\n      healthCareUnitNameAr:'',\r\n      healthDistrictId:0,\r\n      healthDirectoryId:0,\r\n      OrganizationId:0,\r\n      OrganizationName:'',\r\n      OrganizationNameAr:'',\r\n      healthDistrictName:'',\r\n      healthDistrictNameAr:'',\r\n      healthDirectoryName:'',\r\n      healthDirectoryNameAr:'',\r\n      Address:'',\r\n      Director:'',\r\n      Phone:'',\r\n      Mobile:'',\r\n      Email:'',\r\n      Long:0,\r\n      Lat:0\r\n    }\r\n    this.page={\r\n      pagenumber:1,\r\n      pagesize:10\r\n    }\r\n  //  this.getAll()\r\n  this.sharedService.getHospitalscount().subscribe(data=>\r\n    {\r\n      this.count=data\r\n      console.log(\"count\",this.count)\r\n    })\r\n    this.sharedService.getAllHospitalswithpaging(this.page).subscribe(data=>{\r\n      this.healthUnits=data;      \r\n    })\r\n\r\n    this.organizationService.getAllOrganization().subscribe(data=>{this.organizationList=data});\r\n    this.sharedService.getAllHealthDistrict().subscribe(data=>{this.healthDistricts=data}); \r\n    this.sharedService.getAllHealthDirectories().subscribe(data=>{this.healthDirectories=data});\r\n  }\r\n  getAll(){\r\n    this.sharedService.getAllunits().subscribe(data=>{this.healthUnits=data});\r\n\r\n  }\r\n  openNew(unit){\r\n    this.healthUnitDialog=true;\r\n    this.healthUnitobj=unit;\r\n    this.submitted=false\r\n  }\r\n  fillDistrict(name:string) {\r\n    this.sharedService.getDirectoryIdByname(name).subscribe(data=>{\r\n      this.sharedService.getAllHealthDistricts(data).subscribe(data => {\r\n        this.HealthDistrictsList = data\r\n      });\r\n    });\r\n   \r\n  }\r\n  deleteUnit(id){\r\n    this.sharedService.deleteHealthUnit(id).subscribe(data=>{console.log(data,\"deleted\"),this.getAll()})\r\n\r\n  }\r\n  confirmDelete(pId) {\r\n    if(this.translate.currentLang=='En')\r\n    {\r\n      this.confirmationService.confirm({\r\n        message: 'Do you want to delete this health care unit ?' ,\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        accept: () => {\r\n            this.deleteUnit(pId)\r\n            this.messageservice.add({ severity: 'info', detail: 'Record deleted' });\r\n            \r\n        },\r\n        reject: () => {\r\n          this.messageservice.add({ severity: 'info', detail: 'Delete rejected' });\r\n        }\r\n    });\r\n    }\r\n    else if(this.translate.currentLang=='Ar')\r\n    {\r\n      this.confirmationService.confirm({     \r\n        message: 'هل انت متأكد من مسح هذا العنصر من القائمة',\r\n        header: 'تاكيد عملية المسح',\r\n        icon: 'pi pi-info-circle',\r\n        \r\n        accept: () => {\r\n          this.deleteUnit(pId)\r\n            this.messageservice.add({ severity: 'info', detail: 'تم المسح' });\r\n    \r\n        },\r\n        reject: () => {\r\n            this.messageservice.add({ severity: 'info', detail: 'رفض عمليه المسح' });\r\n        },\r\n        acceptLabel:\"نعم\",\r\n        rejectLabel:\"لا\",\r\n      });\r\n    }\r\n    \r\n}\r\n\r\n  updateUnit(){\r\n    this.submitted=true\r\n   // this.healthUnitDialog=false;\r\n   this.sharedService.updateUnit(this.healthUnitobj.id,this.healthUnitobj).subscribe(data=>\r\n    {this.healthUnitobj=data;\r\n      this.hideDialog;\r\n      this.healthUnitDialog=false;\r\n\r\n  }, error=>{\r\n    this.errorDialog=true;\r\n    if (this.translate.currentLang == 'En') {\r\n      if (error.error.status == 'code') {\r\n        this.error = error.error.message;\r\n      }\r\n      if (error.error.status == 'name') {\r\n        this.error = error.error.message;\r\n      }\r\n      if (error.error.status == 'nameAr') {\r\n        this.error = error.error.message;\r\n      }\r\n    }  if (this.translate.currentLang == 'Ar')  {\r\n      if (error.error.status == 'code') {\r\n        this.error = error.error.messageAr;\r\n      }\r\n      if (error.error.status == 'name') {\r\n        this.error = error.error.messageAr;\r\n      }\r\n      if (error.error.status == 'nameAr') {\r\n        this.error = error.error.messageAr;\r\n      }\r\n    }\r\n    return false;\r\n\r\n  });\r\n  \r\n\r\n  }\r\n  hideDialog() {\r\n    this.healthUnitDialog = false;\r\n    this.submitted = false;\r\n   \r\n  }\r\n  loadDistricts(DirectoryId:number)\r\n  {\r\n    this.sharedService.getAllHealthDistricts(DirectoryId).subscribe(data => { this.healthDistricts = data,console.log(DirectoryId) });\r\n  }\r\n  onOrgChange(OrgId)\r\n  {\r\n    this.organizationService.getOrganization(OrgId).subscribe(data=>{this.organization=data});\r\n  }\r\n  Next()\r\n  {\r\n     this.index++;\r\n     if(this.index===1)\r\n     {\r\n       this.isNextvalid=true;\r\n       this.isPrevvalid=false;\r\n     }\r\n   // console.log(\"indexNext\",this.index);\r\n  }\r\n   Previous()\r\n   {\r\n      this.index--;\r\n      if(this.index===0)\r\n      {\r\n        this.isNextvalid=false;\r\n        this.isPrevvalid=true;    \r\n      }    \r\n   //   console.log(\"indexPrev1\",this.index);\r\n   }\r\n   handleChange(e) {\r\n     this.index = e.index;\r\n     if(this.index===1)\r\n     {\r\n       this.isNextvalid=true;\r\n       this.isPrevvalid=false;\r\n     }\r\n     else if(this.index===0)\r\n     {\r\n       this.isNextvalid=false;\r\n       this.isPrevvalid=true;\r\n     }\r\n       \r\n//     console.log(\"index from onchange tab\",this.index);\r\n   }\r\n\r\n   clicktbl(event)\r\n   {\r\n      this.page.pagenumber=event.page+1;\r\n      this.page.pagesize=event.rows;\r\n     this.sharedService.getAllHospitalswithpaging(this.page).subscribe(data=>{\r\n       this.healthUnits=data;\r\n     })\r\n   }\r\n}\r\n","<p-dialog [(visible)]=\"healthUnitDialog\" (onHide)=\"hideDialog()\" [style]=\"{width: '1024px'}\" [modal]=\"true\"\r\n    styleClass=\"p-fluid\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <h3 class=\"title\"><legend>{{'healthCareUnit.healthCareUnits'|translate}}</legend></h3>\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n        <form (ngSubmit)=\"AddUnitForm.valid && saveHealthUnit()\" #AddUnitForm=\"ngForm\">\r\n            <p-tabView [activeIndex]=\"index\" (onChange)=\"handleChange($event)\">\r\n                <p-tabPanel header=\"{{'equipment.Details' | translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        \r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"name\">{{'healthCareUnit.Name'|translate}}</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\"\r\n                                    pTooltip=\"Enter A Unit Name\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"healthUnitobj.healthCareUnitName\" #healthCareUnitName=\"ngModel\"\r\n                                    [class.is-invalid]=\"healthCareUnitName.touched && healthCareUnitName.errors || AddUnitForm.submitted\"\r\n                                    [class.is-valid]=\"healthCareUnitName.valid && AddUnitForm.submitted\" required>\r\n                                <div\r\n                                    *ngIf=\"(healthCareUnitName.touched || AddUnitForm.submitted) && healthCareUnitName.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        name is required\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"nameAr\">{{'healthCareUnit.NameAr'|translate}}</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"nameAr\" name=\"nameAr\"\r\n                                    pTooltip=\"Enter A Unit Name in arabic\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"healthUnitobj.healthCareUnitNameAr\" #healthCareUnitNameAr=\"ngModel\"\r\n                                    [class.is-invalid]=\"healthCareUnitNameAr.touched && healthCareUnitNameAr.errors || AddUnitForm.submitted\"\r\n                                    [class.is-valid]=\" healthCareUnitNameAr.valid && AddUnitForm.submitted\" required>\r\n                                <div\r\n                                    *ngIf=\"(healthCareUnitNameAr.touched || AddUnitForm.submitted) && healthCareUnitNameAr.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        nameAr is required\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"code\">{{'healthCareUnit.Code'|translate}}</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"code\" name=\"code\"\r\n                                    pTooltip=\"Enter A Unit code\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"healthUnitobj.healthCareUnitCode\" #healthCareUnitcode=\"ngModel\"\r\n                                    [class.is-invalid]=\"healthCareUnitcode.touched && healthCareUnitcode.errors || AddUnitForm.submitted\"\r\n                                    [class.is-valid]=\"healthCareUnitcode.valid && AddUnitForm.submitted\" required>\r\n                                <div\r\n                                    *ngIf=\"(healthCareUnitcode.touched || AddUnitForm.submitted) && healthCareUnitcode.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        Code is required\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"directoryName\">{{'healthCareUnit.governorate'|translate}}</label>\r\n                                <select class=\"form-control\" id=\"directoryName\" pTooltip=\"select A directory Name\"\r\n                                    tooltipPosition=\"bottom\" name=\"directoryName\" #directoryName=\"ngModel\"\r\n                                    [(ngModel)]=\"healthUnitobj.healthDirectoryId\" (change)=\"loadDistricts(healthUnitobj.healthDirectoryId)\"\r\n                                    [class.is-invalid]=\"directoryName.touched && directoryName.errors || AddUnitForm.submitted\"\r\n                                    [class.is-valid]=\" directoryName.valid && AddUnitForm.submitted\" required>\r\n                                    <option>{{'healthCareUnit.directory'|translate}}</option>\r\n                                    <option *ngFor=\"let h of healthDirectories\" [value]=\"h.id\">\r\n                                        {{translate.currentLang == \"En\" ? h.healthDirectoryName:h.hhealthDirectoryNameAr}}\r\n                                    </option>\r\n                                </select>\r\n                                <div\r\n                                    *ngIf=\"(directoryName.touched || AddUnitForm.submitted) && directoryName.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        nameAr is required\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"districtName\">{{'healthCareUnit.district'|translate}}</label>\r\n                                <select class=\"form-control\" id=\"districtName\" pTooltip=\"select A district Name\"\r\n                                    tooltipPosition=\"bottom\" name=\"districtName\" #districtName=\"ngModel\"\r\n                                    [(ngModel)]=\"healthUnitobj.healthDistrictId\"\r\n                                    [class.is-invalid]=\"districtName.touched && districtName.errors || AddUnitForm.submitted\"\r\n                                    [class.is-valid]=\" districtName.valid && AddUnitForm.submitted\" required>\r\n                                    <option>{{'healthCareUnit.district'|translate}}</option>\r\n                                    <option *ngFor=\"let h of healthDistricts\" [value]=\"h.id\">\r\n                                        {{translate.currentLang == \"En\" ? h.healthDistrictName:h.healthDistrictNameAr}}\r\n                                    </option>\r\n                                </select>\r\n                                <div\r\n                                    *ngIf=\"(districtName.touched || AddUnitForm.submitted) && districtName.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        nameAr is required\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"organization\">{{'healthCareUnit.organization'|translate}}</label>\r\n                                <select class=\"form-control\" id=\"organization\" pTooltip=\"select A organization Name\"\r\n                                    tooltipPosition=\"bottom\" name=\"organization\" #organization=\"ngModel\"\r\n                                    [(ngModel)]=\"healthUnitobj.OrganizationId\"\r\n                                    [class.is-invalid]=\"organization.touched && organization.errors || AddUnitForm.submitted\"\r\n                                    [class.is-valid]=\" organization.valid && AddUnitForm.submitted\" required>\r\n                                    <option>{{'healthUnit.organization'|translate}}</option>\r\n                                    <option *ngFor=\"let org of organizationList\" [value]=\"org.id\">\r\n                                        {{translate.currentLang == \"En\" ? org.name:org.nameAr}}\r\n                                    </option>\r\n                                </select>\r\n                                <div\r\n                                    *ngIf=\"(organization.touched || AddUnitForm.submitted) && organization.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        nameAr is required\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>  \r\n                        <br>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\"\r\n                            [hidden]=\"isNextvalid\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\"\r\n                            [hidden]=\"isPrevvalid\">previous</button>\r\n\r\n                        <br><br><br>                     \r\n                    </fieldset>\r\n                </p-tabPanel>\r\n                <!------------------------------------------------------------------------------------------>\r\n\r\n                <p-tabPanel header=\"{{'healthCareUnit.MoreDetails' | translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <!-- <legend>{{'healthCareUnit.healthCareUnits'|translate}}</legend> -->\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"director\">{{'healthCareUnit.director'|translate}}</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"director\" name=\"director\"\r\n                                    pTooltip=\"Enter director Name\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"healthUnitobj.Director\" #director=\"ngModel\">\r\n                                <!-- <div\r\n                                    *ngIf=\"(director.touched || AddUnitForm.submitted) && director.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        Director name is required\r\n                                    </span>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Phone\">{{'healthCareUnit.Phone'|translate}}</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"Phone\" name=\"Phone\"\r\n                                    pTooltip=\"Enter Phone\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"healthUnitobj.Phone\" #Phone=\"ngModel\"\r\n                                   >\r\n                                <!-- <div\r\n                                    *ngIf=\"(Phone.touched || AddUnitForm.submitted) && Phone.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        Phone number is required\r\n                                    </span>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Mobile\">{{'healthCareUnit.Mobile'|translate}}</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"Mobile\" name=\"Mobile\"\r\n                                    pTooltip=\"Enter Mobile number\" tooltipPosition=\"bottom\" \r\n                                    [(ngModel)]=\"healthUnitobj.Mobile\" #Mobile=\"ngModel\">\r\n                                <!-- <div\r\n                                    *ngIf=\"(Mobile.touched || AddUnitForm.submitted) && Mobile.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        Mobile number is required\r\n                                    </span>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Adress\">{{'healthCareUnit.Adress'| translate}}</label>\r\n                                <textarea class=\"form-control\" id=\"Adress\" type=\"text\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"healthUnitobj.Adress\"\r\n                                    pTooltip=\"Please,Select An equipmentDescription\"\r\n                                    tooltipPosition=\"bottom\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Email\">{{'healthCareUnit.Email'|translate}}</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"Email\" name=\"Email\"\r\n                                    pTooltip=\"Enter Email\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"healthUnitobj.Email\" #Email=\"ngModel\">\r\n                                <!-- <div\r\n                                    *ngIf=\"(Email.touched || AddUnitForm.submitted) && Email.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        Email is required\r\n                                    </span>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Long\">{{'healthCareUnit.Long'|translate}}</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"Long\" name=\"Long\"\r\n                                    pTooltip=\"Enter Long number\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"healthUnitobj.Long\" #Long=\"ngModel\">\r\n                                <!-- <div\r\n                                    *ngIf=\"(Long.touched || AddUnitForm.submitted) && Long.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        Long number is required\r\n                                    </span>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Lat\">{{'healthCareUnit.Lat'|translate}}</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"Lat\" name=\"Lat\"\r\n                                    pTooltip=\"Enter Lat number\" tooltipPosition=\"bottom\"\r\n                                    [(ngModel)]=\"healthUnitobj.Lat\" #Lat=\"ngModel\">\r\n                                <!-- <div\r\n                                    *ngIf=\"(Lat.touched || AddUnitForm.submitted) && Lat.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        Lat number is required\r\n                                    </span>\r\n                                </div> -->\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <br>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\"\r\n                        [hidden]=\"isNextvalid\">Next</button>\r\n                    <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\"\r\n                        [hidden]=\"isPrevvalid\">previous</button>\r\n\r\n                    <br><br><br>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-3\">\r\n                                <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                                    class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                                <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\"\r\n                                    class=\"btn btn-info\" value=\"save\" type=\"submit\"></button>\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n            </p-tabView>\r\n            <p-dialog [(visible)]=\"errorDialog\" [style]=\"{width: '350px'}\">\r\n                <p-header style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n                <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{error}}</span>\r\n            </p-dialog>\r\n        </form>\r\n\r\n    </ng-template>\r\n</p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { HealthCareUnit } from 'src/app/Shared/Models/HealthCareUnit';\r\nimport { healthDirectory } from 'src/app/Shared/Models/healthDirectory';\r\nimport { HealthDistrict } from 'src/app/Shared/Models/HealthDistrict';\r\nimport { Organization } from 'src/app/Shared/Models/Organization';\r\nimport { OrganizationService } from 'src/app/Shared/services/organization.service';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-newhealth-unit',\r\n  templateUrl: './newhealth-unit.component.html',\r\n  styleUrls: ['./newhealth-unit.component.css']\r\n})\r\nexport class NewhealthUnitComponent implements OnInit {\r\n  healthUnitDialog:boolean\r\n  submitted:boolean\r\n  healthUnitobj:HealthCareUnit\r\n  healthDistricts:HealthDistrict[];\r\n  organizationList:Organization[];\r\n  healthDirectories:healthDirectory[];\r\n  index:number=0;\r\n  isNextvalid:boolean=false;\r\n  isPrevvalid:boolean=true;\r\n  errorDialog: boolean;\r\n  error:string\r\n  constructor(private sharedService:SharedService,\r\n    private translate: TranslateService,\r\n    private router:Router,private organizationService:OrganizationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.healthUnitobj={\r\n      id:0,\r\n      healthCareUnitCode:'',\r\n      healthCareUnitName:'',\r\n      healthCareUnitNameAr:'',\r\n      healthDistrictId:0,\r\n      healthDirectoryId:0,\r\n      OrganizationId:0,\r\n      OrganizationName:'',\r\n      OrganizationNameAr:'',\r\n      healthDistrictName:'',\r\n      healthDistrictNameAr:'',\r\n      healthDirectoryName:'',\r\n      healthDirectoryNameAr:'',\r\n      Address:'',\r\n      Director:'',\r\n      Phone:'',\r\n      Mobile:'',\r\n      Email:'',\r\n      Long:0,\r\n      Lat:0\r\n    }\r\n   this.openNew()\r\n  }\r\n  openNew() {\r\n    this.healthUnitDialog = true\r\n    this.submitted = false;\r\n   // this.sharedService.getAllHealthDistrict().subscribe(data=>{this.healthDistricts=data});\r\n    this.sharedService.getAllHealthDirectories().subscribe(data=>{this.healthDirectories=data,console.log(\"Directories\",this.healthDirectories)});\r\n    this.organizationService.getAllOrganization().subscribe(data=>{this.organizationList=data});\r\n  }\r\n  saveHealthUnit(){\r\n    console.log(\"CareUnits\",this.healthUnitobj);\r\n    console.log(\"DirecIIID\",this.healthUnitobj.healthDirectoryId);\r\n    this.sharedService.addNewHealthCareUnit(this.healthUnitobj).subscribe(\r\n      data=>{console.log(data),this.router.navigate(['/home/healthUnitsList'])}, error=>{\r\n        this.errorDialog=true,\r\n        this.error=error.error.message;\r\n        \r\n      });\r\n    \r\n  }\r\n  hideDialog(){\r\n    this.healthUnitDialog = false\r\n    this.router.navigate(['/home/healthUnitsList'])\r\n  }\r\n  loadDistricts(DirectoryId:number)\r\n  {\r\n    this.sharedService.getAllHealthDistricts(DirectoryId).subscribe(data => { this.healthDistricts = data,console.log(DirectoryId) });\r\n  }\r\n  Next()\r\n {\r\n    this.index++;\r\n    if(this.index===1)\r\n    {\r\n      this.isNextvalid=true;\r\n      this.isPrevvalid=false;\r\n    }\r\n\r\n   console.log(\"indexNext\",this.index);\r\n }\r\n  Previous()\r\n  {\r\n     this.index--;\r\n     if(this.index===0)\r\n     {\r\n       this.isNextvalid=false;\r\n       this.isPrevvalid=true;    \r\n     }    \r\n     console.log(\"indexPrev1\",this.index);\r\n  }\r\n  handleChange(e) {\r\n    this.index = e.index;\r\n    if(this.index===1)\r\n    {\r\n      this.isNextvalid=true;\r\n      this.isPrevvalid=false;\r\n    }\r\n    else if(this.index===0)\r\n    {\r\n      this.isNextvalid=false;\r\n      this.isPrevvalid=true;\r\n    }\r\n      \r\n    console.log(\"index from onchange tab\",this.index);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Equipment } from 'src/app/Shared/Models/Equipment';\r\nimport { HealthCareUnit } from 'src/app/Shared/Models/HealthCareUnit';\r\nimport { Manufacturer } from 'src/app/Shared/Models/Manufacturer';\r\nimport { Supplier } from 'src/app/Shared/Models/Supplier';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\n\r\n// import { Chart } from 'chartjs'\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  basicData: any;\r\n  healthUnits: HealthCareUnit[]\r\n  basicOptions: any;\r\n  data: any;\r\n  equipments: Equipment[]\r\n  suppliers: Supplier[]\r\n  manufacturers: Manufacturer[]\r\n  equs: number\r\n  healthUnitsno: number\r\n  supliersNo: number\r\n  equipmentsNo: number\r\n  manufacturersNo: number\r\n  polar: any\r\n  constructor(private equipmentService: EquipmentService,\r\n    private sharedService: SharedService) { }\r\n  public chartOptions = {\r\n    scales: {\r\n      yAxes: [{\r\n        ticks: {\r\n          stepSize: 2,\r\n          beginAtZero: true\r\n        }\r\n      }]\r\n    }\r\n  }\r\n  ngOnInit() {\r\n    this.sharedService.getAllunits().subscribe(\r\n      data => { this.healthUnits = data, this.healthUnitsno = this.healthUnits.length })\r\n\r\n    this.sharedService.getAllSuppliers().subscribe(\r\n      data => { this.suppliers = data, this.supliersNo = this.suppliers.length })\r\n\r\n    this.sharedService.getAllmanufacturer().subscribe(\r\n      data => { this.manufacturers = data, this.manufacturersNo = this.manufacturers.length })\r\n\r\n\r\n\r\n    this.equs = 0\r\n    this.equipmentService.getAllEquipments().\r\n      subscribe(data => {\r\n        this.equipments = data, this.equs = this.equipments.length, this.data = {\r\n          labels: ['Equipments'],\r\n          datasets: [\r\n            {\r\n              data: [this.equs],\r\n\r\n              backgroundColor: [\r\n                \"#90cd93\",\r\n                \"#fdd87d\",\r\n                \"#61d5e4\"\r\n              ],\r\n              hoverBackgroundColor: [\r\n                \"#FF6384\",\r\n                \"#36A2EB\",\r\n                \"#FFCE56\"\r\n              ]\r\n            }],\r\n        }, this.basicData = {\r\n          labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n          datasets: [\r\n            {\r\n              label: 'request',\r\n              backgroundColor: '#91e2ed',\r\n              data: [65, 59, 80, 81, 56, 55, 40]\r\n            },\r\n            {\r\n              label: 'work order',\r\n              backgroundColor: '#42A5F5',\r\n              data: [28, 48, 40, 19, 86, 27, 90]\r\n            }\r\n          ]\r\n        }, this.polar = {\r\n          datasets: [{\r\n            data: [\r\n              11,\r\n              16,\r\n              7,\r\n              3,\r\n              14\r\n            ],\r\n            backgroundColor: [\r\n              \"#FF6384\",\r\n              \"#4BC0C0\",\r\n              \"#FFCE56\",\r\n              \"#E7E9ED\",\r\n              \"#36A2EB\"\r\n            ],\r\n            label: 'My dataset'\r\n          }],\r\n          labels: [\r\n            \"Red\",\r\n            \"Green\",\r\n            \"Yellow\",\r\n            \"Grey\",\r\n            \"Blue\"\r\n          ]\r\n        }, console.log(\"equipments\", this.equs)\r\n      });\r\n\r\n\r\n\r\n  }\r\n}","<div class=\"card\">\r\n    <p-toast posinset=\"top-right\"></p-toast>\r\n    <div class=\"card-body\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-11\">\r\n                <h5>{{\"ecricodes.Manage\"|translate}}</h5>\r\n            </div>\r\n            <div class=\"col-md-1\" style=\"text-align: right;\">\r\n                <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary p-button-rounded p-mr-1\"\r\n                    pTooltip=\"add a new Ecri Code\" tooltipPosition=\"right\" routerLink=\"/home/addecri\"></button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\"><br /></div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n                <p-table #dt [value]=\"codesList\" styleClass=\"p-datatable-responsive-demo\" [rows]=\"10\" [paginator]=\"true\"\r\n                    [(selection)]=\"selectedCodes\" [rowHover]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-striped\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    [showCurrentPageReport]=\"true\" [globalFilterFields]=\"['ecri_code','name','nameAr']\">\r\n                    <ng-template pTemplate=\"caption\">\r\n                        <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n\r\n                            <span class=\"p-input-icon-right\">\r\n                                <i class=\"pi pi-search\"></i>\r\n                                <input pInputText type=\"text\" class=\"form-control\" style=\"text-align: inherit;\"\r\n                                    (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                                    placeholder=\"{{'ecricodes.SearchbyName'|translate}}\" />\r\n                            </span>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"header\">\r\n                        <tr>\r\n                            <th pSortableColumn=\"ecri_code\">{{\"ecricodes.code\"|translate}} <p-sortIcon\r\n                                    field=\"ecri_code\"></p-sortIcon>\r\n                            </th>\r\n                            <th>{{'ecricodes.Name'|translate}}</th>\r\n                            <th style=\"width: 10%;\">{{\"Actions.Action\"|translate}}</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th style=\"text-align: inherit;\">\r\n                                <input pInputText type=\"text\"\r\n                                    (input)=\"dt.filter($event.target.value, 'ecri_code', 'contains')\"\r\n                                    [value]=\"dt.filters['ecri_code']?.value\"\r\n                                    placeholder=\"{{'ecricodes.SearchbyCode'|translate}}\"\r\n                                    class=\"p-column-filter form-control\">\r\n                            </th>\r\n\r\n\r\n                            <th style=\"text-align: inherit;\">\r\n                                <input pInputText type=\"text\" *ngIf=\"translate.currentLang==='Ar'\"\r\n                                    (input)=\"dt.filter($event.target.value, 'nameAr', 'contains')\"\r\n                                    [value]=\"dt.filters['nameAr']?.value\"\r\n                                    placeholder=\"{{'ecricodes.SearchbyName'|translate}}\"\r\n                                    class=\"p-column-filter form-control\">\r\n\r\n\r\n\r\n\r\n                                <input pInputText type=\"text\" *ngIf=\"translate.currentLang==='En'\"\r\n                                    (input)=\"dt.filter($event.target.value, 'name', 'contains')\"\r\n                                    [value]=\"dt.filters['name']?.value\"\r\n                                    placeholder=\"{{'ecricodes.SearchbyName'|translate}}\"\r\n                                    class=\"p-column-filter form-control\">\r\n                            </th>\r\n                            <th style=\"text-align: inherit;\"></th>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"body\" let-ecri>\r\n                        <tr>\r\n                            <td style=\"text-align: inherit;\">{{ecri.ecri_code}}</td>\r\n                            <td style=\"text-align: inherit;\">\r\n                                {{translate.currentLang == \"En\" ? ecri.name:ecri.nameAr}}\r\n                            </td>\r\n                            <td style=\"text-align: inherit;\">\r\n                                <button pButton pRipple icon=\"pi pi-pencil\" style=\"margin: 0px 3px;\"\r\n                                    class=\"p-button-rounded p-button-info edit\" (click)=\"openNew(ecri)\"\r\n                                    pTooltip=\"edit a ecriCode\" tooltipPosition=\"top\"></button>\r\n\r\n                                <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\"\r\n                                    (click)=\"confirmDelete(ecri.id)\" pTooltip=\"delete a ecriCode\"\r\n                                    tooltipPosition=\"top\"></button>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"summary\">\r\n                        <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                            {{'In total there are.In total there are'|translate}} {{codesList ? codesList.length : 0 }}\r\n                            {{\"Sidebar.ecrisList\"|\r\n                            translate}}.\r\n                        </div>\r\n                    </ng-template>\r\n                </p-table>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    </div>\r\n</div>\r\n<p-dialog [(visible)]=\"ecriCodeDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <h3 class=\"title\">{{\"ecricodes.Edit\"|translate}}</h3>\r\n            </div>\r\n        </div>\r\n        <form (ngSubmit)=\"EditEcriCodeForm.valid && updateEcriCode()\" #EditEcriCodeForm=\"ngForm\">\r\n\r\n            <fieldset class=\"tab\">\r\n                <input type=\"hidden\" [(ngModel)]=\"ecriObj.id\" [ngModelOptions]=\"{standalone: true}\" />\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"ecri_code\">{{'ecricodes.Code'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" pTooltip=\"Enter a ecriCode\" tooltipPosition=\"bottom\"\r\n                            id=\"ecri_code\" name=\"ecri_code\" #ecri_code=\"ngModel\" [(ngModel)]=\"ecriObj.ecri_code\"\r\n                            autofocus required [ngModelOptions]=\"{standalone: true}\"\r\n                            [class.is-invalid]=\"(ecri_code.touched && ecri_code.errors) || EditEcriCodeForm.submitted\"\r\n                            [class.is-valid]=\"ecri_code.valid && EditEcriCodeForm.submitted\">\r\n                        <div *ngIf=\"(ecri_code.touched || EditEcriCodeForm.submitted) && ecri_code.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                {{'ecricodes.Required'|translate}}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"name\">{{'ecricodes.Name'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" pTooltip=\"Enter a ECRI name\" tooltipPosition=\"bottom\"\r\n                            id=\"name\" name=\"name\" #name=\"ngModel\" [(ngModel)]=\"ecriObj.name\" autofocus required\r\n                            [ngModelOptions]=\"{standalone: true}\"\r\n                            [class.is-invalid]=\"(name.touched && name.errors) || EditEcriCodeForm.submitted\"\r\n                            [class.is-valid]=\"name.valid && EditEcriCodeForm.submitted\">\r\n                        <div *ngIf=\"(name.touched || EditEcriCodeForm.submitted) && name.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                {{'ecricodes.Required'|translate}}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"nameAr\">{{'ecricodes.NameAr'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" pTooltip=\"Enter a ECRI Arabic Name\"\r\n                            tooltipPosition=\"bottom\" id=\"nameAr\" name=\"nameAr\" #nameAr=\"ngModel\"\r\n                            [(ngModel)]=\"ecriObj.nameAr\" autofocus required [ngModelOptions]=\"{standalone: true}\"\r\n                            [class.is-invalid]=\"(nameAr?.touched && nameAr.errors) || EditEcriCodeForm.submitted\"\r\n                            [class.is-valid]=\"nameAr?.valid && EditEcriCodeForm.submitted\">\r\n                        <div *ngIf=\"(nameAr?.touched || EditEcriCodeForm.submitted) && nameAr.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                {{'ecricodes.Required'|translate}}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\"><br /></div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <button pButton pRipple label=\"{{'Actions.Cancel' |translate}}\" icon=\"pi pi-times\"\r\n                            class=\"btn btn-info\" type=\"button\" (click)=\"hideDialog()\" value=\"cancel\"></button>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <button pButton pRipple label=\"{{'Actions.Save' |translate}}\" icon=\"pi pi-check\"\r\n                            class=\"btn btn-info\" type=\"submit\" value=\"save\"></button>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n\r\n        </form>\r\n\r\n\r\n    </ng-template>\r\n</p-dialog>\r\n\r\n\r\n\r\n<p-dialog [(visible)]=\"errorDisplay\" [style]=\"{width: '350px'}\">\r\n    <p-header style=\"color: rgb(181, 4, 4);\"> {{'General.Error'|translate}} </p-header>\r\n    <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{errorMessage}}</span>\r\n</p-dialog>","<br>\r\n\r\n\r\n<!-- <div class=\"row\">\r\n    <div class=\"col-3\">\r\n\r\n      <p-card [style]=\"{'background-color': 'darkkhaki'}\">\r\n        <h2 style=\"font-size: 20px;\">Equipments</h2>\r\n        <h3>{{healthUnitsno}}</h3>\r\n      </p-card>\r\n    </div>\r\n\r\n\r\n    <div class=\"col-3\">\r\n\r\n      <p-card [style]=\"{'background-color': 'rgb(80, 255, 168)'}\">\r\n        <h2 style=\"font-size: 20px;\">Health Care Units</h2>\r\n        <h3>{{healthUnitsno}}</h3>\r\n      </p-card>\r\n    </div>\r\n\r\n    <div class=\"col-3\">\r\n\r\n      <p-card [style]=\"{'background-color': 'lightskyblue'}\">\r\n        <h2 style=\"font-size: 20px;\">Suppliers</h2>\r\n        <h3>{{healthUnitsno}}</h3>\r\n      </p-card>\r\n    </div>\r\n    <div class=\"col-3\">\r\n\r\n      <p-card [style]=\"{'background-color': 'rgb(243, 41, 5'}\">\r\n        <h2 style=\"font-size: 20px;\">Manfacturers</h2>\r\n        <h3>{{healthUnitsno}}</h3>\r\n      </p-card>\r\n    </div>\r\n  </div> -->\r\n\r\n<div class=\"dashboard\">\r\n\r\n  <div class=\"row\">\r\n\r\n\r\n    <div class=\"col\">\r\n      <p-card header=\"Equipments\" [style]=\"{'background-color': '#cfeafe','height':'150px'  ,'border-radius':'15px'}\"\r\n        width=\"20vw\">\r\n        <div class=\"row\">\r\n\r\n          <div class=\"col\">\r\n            <img src=\"../../../assets/images/ecg.png\" class=\"img equipment\">\r\n          </div>\r\n          <div class=\"col\">\r\n            <p>capacity</p>\r\n            <p>{{equs}}</p>\r\n          </div>\r\n        </div>\r\n      </p-card>\r\n    </div>\r\n\r\n    <div class=\"col\">\r\n      <p-card header=\"Manufacturers\" [style]=\"{'background-color': '#fee3cf','height':'150px','border-radius':'15px'}\"\r\n        width=\"20vw\">\r\n        <div class=\"row\">\r\n\r\n          <div class=\"col\">\r\n            <img src=\"../../../assets/images/production.png\" class=\"img prod\">\r\n          </div>\r\n          <div class=\"col\">\r\n            <p>capacity</p>\r\n            <p>{{manufacturersNo}}</p>\r\n          </div>\r\n        </div>\r\n      </p-card>\r\n    </div>\r\n\r\n    <div class=\"col\">\r\n      <p-card header=\"Hospitals\" [style]=\"{'background-color': '#dcf0e2','height':'150px','border-radius':'15px'}\"\r\n        width=\"20vw\">\r\n\r\n        <div class=\"row\">\r\n\r\n          <div class=\"col\">\r\n            <img src=\"../../../assets/images/hospital.png\" class=\"img hospital\">\r\n          </div>\r\n          <div class=\"col\">\r\n            <p>capacity</p>\r\n            <p>{{healthUnitsno}}</p>\r\n          </div>\r\n        </div>\r\n      </p-card>\r\n    </div>\r\n\r\n    <div class=\"col\">\r\n      <p-card header=\"Suppliers\" [style]=\"{'background-color': '#fbf2d4','height':'150px','border-radius':'15px'}\"\r\n        width=\"20vw\">\r\n        <div class=\"row\">\r\n\r\n          <div class=\"col\">\r\n            <img src=\"../../../assets/images/hotel-supplier.png\" class=\"img Suppliers\">\r\n          </div>\r\n          <div class=\"col\">\r\n            <p>capacity</p>\r\n            <p>{{supliersNo}}</p>\r\n          </div>\r\n        </div>\r\n      </p-card>\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n\r\n      <p-chart type=\"line\" [data]=\"basicData\" width=\"75vw\" height=\"50vh\"></p-chart>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n\r\n    <div class=\"col\">\r\n      <p-chart type=\"bar\" [data]=\"basicData\" width=\"20vw\" height=\"50vh\" class=\"bar\"></p-chart>\r\n    </div>\r\n\r\n    <div class=\"col\">\r\n      <p-chart type=\"doughnut\" [data]=\"data\" width=\"20vw\" height=\"50vh\" class=\"doughnut1\"></p-chart>\r\n    </div>\r\n\r\n    <div class=\"col\">\r\n      <p-chart type=\"polarArea\" [data]=\"polar\" width=\"20vw\" height=\"50vh\" class=\"polar\"></p-chart>\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { ListEcriVM } from 'src/app/Shared/Models/ECRI';\r\nimport { EcriCode } from 'src/app/Shared/Models/ecri-code';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-ecri-list',\r\n  templateUrl: './ecri-list.component.html',\r\n  styleUrls: ['./ecri-list.component.scss']\r\n})\r\nexport class ECRIListComponent implements OnInit {\r\n  lang = localStorage.getItem('lang');\r\n  selectedCodes: EcriCode[];\r\n  ecriCodeDialog: boolean;\r\n  ecriObj: EcriCode;\r\n  submitted: boolean;\r\n  codesList: EcriCode[];\r\n\r\n  errorMessage: string = '';\r\n  errorDisplay: boolean = false;\r\n  result:boolean=false;\r\n\r\n\r\n  constructor(\r\n    private sharedService: SharedService,\r\n    private router: Router,\r\n    private translate: TranslateService,\r\n    private messageservice:MessageService, private confirmationService: ConfirmationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.sharedService.getAllEcricodes().subscribe((data) => {\r\n      this.codesList = data;\r\n    });\r\n  }\r\n  openNew(m) {\r\n    this.ecriCodeDialog = true;\r\n    this.submitted = false;\r\n    this.ecriObj = m;\r\n  }\r\n  hideDialog() {\r\n    this.ecriCodeDialog = false;\r\n    this.submitted = false;\r\n    this.router.navigate(['/home/ecrisList/']);\r\n  }\r\n  updateEcriCode() {\r\n    this.submitted = true;\r\n    console.log(this.ecriObj);\r\n    this.sharedService.updateEcriCode(this.ecriObj.id, this.ecriObj).subscribe(\r\n      (data) => {\r\n        (data = this.ecriObj), this.hideDialog();\r\n        this.router.navigate(['/home/ecrisList/']);\r\n      },\r\n      (error) => {\r\n        this.errorDisplay = true;\r\n        if (this.translate.currentLang == 'En') {\r\n          if (error.error.status == 'code') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n          if (error.error.status == 'name') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n\r\n          if (error.error.status == 'nameAr') {\r\n            this.errorMessage = error.error.message;\r\n          }\r\n        }  if (this.translate.currentLang == 'Ar')  {\r\n          if (error.error.status == 'code') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n          if (error.error.status == 'name') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n\r\n          if (error.error.status == 'nameAr') {\r\n            this.errorMessage = error.error.messageAr;\r\n          }\r\n        }\r\n        return false;\r\n      }\r\n    );\r\n  }\r\n \r\n  deleteEcriCode(codeId) {\r\n      this.sharedService.deleteEcriCode(codeId).subscribe((data) => {\r\n        this.getAll();\r\n      });\r\n    this.router.navigate(['/home/ecrisList/']);\r\n  }\r\n\r\n  confirmDelete(codeId) {\r\n  if(this.translate.currentLang == 'En')\r\n   { \r\n    this.confirmationService.confirm(\r\n      {     \r\n       message: 'Do Want to delete this ecriCode',\r\n       header: 'Delete Confirmation',\r\n       icon: 'pi pi-info-circle',\r\n       accept: () => {\r\n        this.deleteEcriCode(codeId)\r\n         this.messageservice.add({ severity: 'info', detail: 'Record deleted' });\r\n       },\r\n       reject: () => {\r\n         this.messageservice.add({ severity: 'info', detail: 'Delete rejected' });\r\n       }\r\n     });\r\n  }\r\n  else if(this.translate.currentLang == 'Ar')\r\n   { \r\n     this.confirmationService.confirm({     \r\n      message: 'هل انت متأكد من مسح هذا العنصر من القائمة الرئيسيه',\r\n      header: 'تاكيد عملية المسح',\r\n      icon: 'pi pi-info-circle',\r\n      \r\n      accept: () => {\r\n        this.deleteEcriCode(codeId)\r\n        this.messageservice.add({ severity: 'info', detail: 'تم المسح' });\r\n\r\n      },\r\n      reject: () => {\r\n        this.messageservice.add({ severity: 'info', detail: 'رفض عمليه المسح' });\r\n      },\r\n      acceptLabel:\"نعم\",\r\n      rejectLabel:\"لا\",\r\n    });\r\n  }\r\n  }\r\n}\r\n","<div>\r\n    <p-dialog [(visible)]=\"ecriCodeDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">{{'ecricodes.Add'|translate}}</h3>\r\n                </div>\r\n\r\n            </div>\r\n            <form (ngSubmit)=\"AddecriCodeForm.valid && saveCode()\" #AddecriCodeForm=\"ngForm\">\r\n\r\n                <fieldset class=\"tab\">\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"ecri_code\">{{'ecricodes.Code'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" pTooltip=\"Enter a ecri Code\"\r\n                                tooltipPosition=\"bottom\" id=\"ecri_code\" name=\"ecri_code\" #ecri_code=\"ngModel\"\r\n                                [(ngModel)]=\"ecriObj.ecri_code\" autofocus required\r\n                                [class.is-invalid]=\"(ecri_code.touched && ecri_code.errors) || AddecriCodeForm.submitted\"\r\n                                [class.is-valid]=\"ecri_code.valid && AddecriCodeForm.submitted\">\r\n                                <div *ngIf=\"(ecri_code.touched || AddecriCodeForm.submitted) && ecri_code.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        {{'ecricodes.Required'|translate}}\r\n                                    </span>\r\n                                </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"name\">{{'ecricodes.Name'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" pTooltip=\"Enter a ECRI name\"\r\n                                tooltipPosition=\"bottom\" id=\"name\" name=\"name\" #name=\"ngModel\"\r\n                                [(ngModel)]=\"ecriObj.name\" autofocus required\r\n                                [class.is-invalid]=\"(name.touched && name.errors) || AddecriCodeForm.submitted\"\r\n                                [class.is-valid]=\"name.valid && AddecriCodeForm.submitted\">\r\n                                <div *ngIf=\"(name.touched || AddecriCodeForm.submitted) && name.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        {{'ecricodes.Required'|translate}}\r\n                                    </span>\r\n                                </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <label for=\"nameAr\">{{'ecricodes.NameAr'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" pTooltip=\"Enter a ECRI Arabic Name\"\r\n                                tooltipPosition=\"bottom\" id=\"nameAr\" name=\"nameAr\" #nameAr=\"ngModel\"\r\n                                [(ngModel)]=\"ecriObj.nameAr\" autofocus required\r\n                                [class.is-invalid]=\"(nameAr?.touched && nameAr.errors) || AddecriCodeForm.submitted\"\r\n                                [class.is-valid]=\"nameAr?.valid && AddecriCodeForm.submitted\">\r\n                                <div *ngIf=\"(nameAr?.touched || AddecriCodeForm.submitted) && nameAr.errors?.required\">\r\n                                    <span class=\"text-danger\">\r\n                                        {{'ecricodes.Required'|translate}}\r\n                                    </span>\r\n                                </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\"><br/></div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <button pButton pRipple label=\"{{'Actions.Cancel' |translate}}\" icon=\"pi pi-times\"\r\n                                class=\"btn btn-info\" type=\"button\" (click)=\"hideDialog()\" value=\"cancel\"></button>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <button pButton pRipple label=\"{{'Actions.Save' |translate}}\" icon=\"pi pi-check\"\r\n                                class=\"btn btn-info\" type=\"submit\" value=\"save\"></button>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n\r\n            </form>\r\n\r\n        </ng-template>\r\n\r\n    </p-dialog>\r\n\r\n    \r\n    <p-dialog [(visible)]=\"errorDisplay\" [style]=\"{width: '350px'}\">\r\n        <p-header  style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n       <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{errorMessage}}</span>\r\n    </p-dialog>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Toast } from 'primeng/toast';\r\nimport { EcriCode } from 'src/app/Shared/Models/ecri-code';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-ecri',\r\n  templateUrl: './ecri.component.html',\r\n  styleUrls: ['./ecri.component.css']\r\n})\r\nexport class ECRIComponent implements OnInit {\r\n\r\n  ecriCodeDialog: boolean;\r\n  ecriObj: EcriCode;\r\n  submitted:boolean;\r\n  errorMessage: string=\"\";\r\n  errorDisplay:boolean= false;\r\n  constructor(private sharedService:SharedService,private router:Router,private messageService:MessageService, private translate:TranslateService) { }\r\n\r\n  ngOnInit() {\r\n    this.ecriObj = {\r\n      id: 0,\r\n      ecri_code: '',\r\n      name:'',\r\n      nameAr:''\r\n    \r\n    }\r\n    this.openNew()\r\n  }\r\n\r\n  openNew() {\r\n    this.ecriCodeDialog = true\r\n    this.submitted = false;\r\n  }\r\n\r\n  hideDialog() {\r\n    this.ecriCodeDialog = false;\r\n    this.submitted = false;\r\n    this.router.navigate(['/home/ecrisList/'])\r\n  }\r\n\r\n  saveCode() {\r\n    this.submitted = true;\r\n    this.addEcri();\r\n   \r\n  }\r\n\r\n  addEcri() {\r\n        \r\n    if(this.ecriObj.name == \"\")\r\n    {\r\n     this.errorDisplay = true;\r\n     if (this.translate.currentLang == 'En') {\r\n   \r\n     this.errorMessage =\"Please enter name\";\r\n     }\r\n     if (this.translate.currentLang == 'Ar') {\r\n       this.errorMessage =\"ادخل الاسم\";\r\n       }\r\n       return false;\r\n    }\r\n\r\nelse{\r\n    this.sharedService.addEcriCode(this.ecriObj).subscribe(data => { \r\n\r\n      this.router.navigate(['/home/ecrisList/'])\r\n      this.ecriCodeDialog = false;\r\n      this.submitted = false;\r\n      this.messageService.add({severity:'sucess', summary: 'Sticky', detail: 'Data saved Successfully', sticky: true});\r\n    \r\n    } ,\r\n\r\n\r\n    error => {\r\n      this.errorDisplay = true;\r\n      if (this.translate.currentLang == 'En') {\r\n        if (error.error.status == 'code') {\r\n          this.errorMessage = error.error.message;\r\n        }\r\n        if (error.error.status == 'name') {\r\n          this.errorMessage = error.error.message;\r\n        }\r\n\r\n        if (error.error.status == 'nameAr') {\r\n          this.errorMessage = error.error.message;\r\n        }\r\n      }  if (this.translate.currentLang == 'Ar')  {\r\n        if (error.error.status == 'code') {\r\n          this.errorMessage = error.error.messageAr;\r\n        }\r\n        if (error.error.status == 'name') {\r\n          this.errorMessage = error.error.messageAr;\r\n        }\r\n\r\n        if (error.error.status == 'nameAr') {\r\n          this.errorMessage = error.error.messageAr;\r\n        }\r\n      }\r\n      return false;\r\n    }) ;\r\n\r\n  }\r\n}\r\n\r\n}\r\n\r\n","<p-dialog [(visible)]=\"organizationDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\"\r\n    (onHide)=\"hideDialog()\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <h3 class=\"title\">{{'organization.AddOganization' | translate}}</h3>\r\n            </div>\r\n            <div>\r\n                <img src=\"./../assets/images/org2.jpg\" class=\"img\" [alt]=\"product\">\r\n            </div>\r\n        </div>\r\n        <form (ngSubmit)=\"AddOrganizationForm.valid && saveOrganization()\" #AddOrganizationForm=\"ngForm\">\r\n            <fieldset class=\"tab\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-3\">\r\n                        <label for=\"Name\">{{'organization.Name'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"Name\" name=\"Name\"\r\n                            #organizationName=\"ngModel\" placeholder=\"{{'organization.Name'|translate}}\"\r\n                            [(ngModel)]=\"org.Name\"\r\n                            [class.is-invalid]=\"organizationName.touched && organizationName.errors || AddOrganizationForm.submitted\"\r\n                            [class.is-valid]=\"organizationName.valid && AddOrganizationForm.submitted\" required\r\n                            pTooltip=\"Please,Enter A OrganizationName in English\" tooltipPosition=\"bottom\">\r\n                        <div\r\n                            *ngIf=\"(organizationName.touched || AddOrganizationForm.submitted) && organizationName.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                English name is required\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-3\">\r\n                        <label for=\"NameAr\">{{'organization.NameAr'|translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"NameAr\" name=\"NameAr\"\r\n                            #organizationNameAr=\"ngModel\" placeholder=\"{{'organization.NameAr'|translate}}\"\r\n                            [(ngModel)]=\"org.NameAr\"\r\n                            [class.is-invalid]=\"organizationNameAr.touched && organizationNameAr.errors || AddOrganizationForm.submitted\"\r\n                            [class.is-valid]=\"organizationNameAr.valid && AddOrganizationForm.submitted\" required\r\n                            pTooltip=\"Please,Enter A OrganizationName in Arabic\" tooltipPosition=\"bottom\">\r\n                        <div\r\n                            *ngIf=\"(organizationNameAr.touched || AddOrganizationForm.submitted) && organizationNameAr.errors?.required\">\r\n                            <span class=\"text-danger\">\r\n                                Arabic name is required\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br><br>\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-3\">\r\n                        <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                            class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>\r\n                    </div>\r\n                    <div class=\"col-lg-3\">\r\n                        <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\"\r\n                            class=\"btn btn-info\" value=\"save\" type=\"submit\"></button>\r\n                    </div>\r\n                </div>\r\n                <br><br>\r\n            </fieldset>\r\n\r\n        </form>\r\n    </ng-template>\r\n</p-dialog>\r\n<p-dialog [(visible)]=\"errorDisplay\" [style]=\"{width: '350px'}\">\r\n    <p-header  style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n   <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{error}}</span>\r\n</p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Organization } from 'src/app/Shared/Models/Organization';\r\nimport { OrganizationService } from 'src/app/Shared/services/organization.service';\r\n\r\n@Component({\r\n  selector: 'app-add-organization',\r\n  templateUrl: './add-organization.component.html',\r\n  styleUrls: ['./add-organization.component.css']\r\n})\r\nexport class AddOrganizationComponent implements OnInit {\r\n  submitted:boolean;\r\n  organizationDialog:boolean;\r\n  org:Organization;\r\n  error:string;\r\n  errorDisplay:boolean=false;\r\n  constructor(private router:Router,private organizationService:OrganizationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.org={\r\n      id:0,\r\n      Name:'',\r\n      NameAr:''\r\n    }\r\n    this.openNew();\r\n  }\r\n  hideDialog() {\r\n    this.organizationDialog = false;\r\n    this.router.navigate(['/home/OrganizationList'])\r\n  }\r\n  openNew() {\r\n    this.organizationDialog = true\r\n    this.submitted = false;\r\n  }\r\n  saveOrganization()\r\n  {\r\n    this.addOrganization();  \r\n  }\r\n  addOrganization() {\r\n    this.organizationService.addNewOrganization(this.org).subscribe(\r\n      data => {\r\n        this.submitted = true;\r\n        this.router.navigate(['/home/OrganizationList/'])\r\n         },\r\n      error=>{\r\n        this.errorDisplay=true;\r\n        this.error=error.error.message;\r\n      });\r\n  }\r\n}\r\n","\r\n        <!-- <p-messages [value]=\"msgs\"></p-messages> -->\r\n        <p-toast posinset=\"top-right\"></p-toast>\r\n\r\n        <div class=\"container-fluid\">\r\n\r\n            <div class=\"card\" >\r\n                <div class=\"card-body\" >\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-11\">       <h5 class=\"p-m-0\">{{'organization.Organization' | translate}}</h5></div>\r\n                        <div class=\"col-md-1\" style=\"text-align: right;\">     \r\n                            <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary  p-button-rounded p-mr-2 new\"\r\n                            routerLink=\"/home/AddOganization\" pTooltip=\"Add a New Equipment\" tooltipPosition=\"right\"></button>\r\n                        </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\"><br/></div></div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\"> \r\n        <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n        <p-table #dt [value]=\"organizationsList\" [rows]=\"10\"  styleClass=\"p-datatable-striped\" [paginator]=\"true\"\r\n            [(selection)]=\"selectedProducts\" [rowHover]=\"true\" dataKey=\"id\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            [showCurrentPageReport]=\"true\" [globalFilterFields]=\"['name','NameAr']\">\r\n            <ng-template pTemplate=\"caption\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n              \r\n                    <span class=\"p-input-icon-right\">\r\n                        <i class=\"pi pi-search\"></i>\r\n                        <input pInputText class=\"form-control\" type=\"text\"\r\n                            (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                            placeholder=\"{{'search.Search'|translate}}...\" />\r\n                    </span>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th pSortableColumn=\"name\">{{'organization.Name' | translate}} <p-sortIcon\r\n                            field=\"name\"></p-sortIcon>\r\n                    </th>\r\n                    <th style=\"width: 10%;\">{{'Actions.Action' | translate}}</th>\r\n                </tr>\r\n                <tr>\r\n\r\n                    <th>\r\n                        <input pInputText type=\"text\" \r\n                            (input)=\"dt.filter($event.target.value, 'name', 'contains')\"\r\n                            [value]=\"dt.filters['name']?.value\" placeholder=\"{{'organization.SearchbyName'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-org>\r\n                <tr>\r\n                    <td>\r\n                        {{translate.currentLang == \"En\" ? org.name:org.nameAr}}\r\n                    </td>\r\n                    <td>\r\n                        <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-info edit\"\r\n                            (click)=\"openNew(org)\"></button>\r\n\r\n                        <button pButton pRipple (click)=\"confirmDelete(org.id)\"\r\n                            pTooltip=\"delete an organization\" tooltipPosition=\"top\" icon=\"pi pi-trash\"\r\n                            class=\"p-button-rounded p-button-danger edit\"></button>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"summary\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    {{'In total there are.In total there are'| translate}}{{organizations ? organizations.length : 0 }} {{\"Sidebar.Organization\"| translate}}.\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div></div></div></div>\r\n    <p-dialog [(visible)]=\"organizationDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">{{'organization.EditOrganization'|translate}}</h3>\r\n                </div>\r\n\r\n            </div>\r\n            <form (ngSubmit)=\"EditOrganizationForm.valid && updateOrganization()\" #EditOrganizationForm=\"ngForm\">\r\n                <fieldset class=\"tab\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-3\">\r\n                            <label for=\"organizationName\">{{'organization.Name'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"organizationName\" name=\"organizationName\"\r\n                                #organizationName=\"ngModel\" placeholder=\"{{'organization.Name'|translate}}\"\r\n                                [(ngModel)]=\"organization.name\"\r\n                                [class.is-invalid]=\"organizationName.touched && organizationName.errors || EditOrganizationForm.submitted\"\r\n                                [class.is-valid]=\"organizationName.valid && EditOrganizationForm.submitted\" required\r\n                                pTooltip=\"Please,Enter A OrganizationName in English\" tooltipPosition=\"bottom\">\r\n                            <div\r\n                                *ngIf=\"(organizationName.touched || EditOrganizationForm.submitted) && organizationName.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                   {{'General.Required'|translate}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-3\">\r\n                            <label for=\"organizationNameAr\">{{'organization.NameAr'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"organizationNameAr\" name=\"organizationNameAr\"\r\n                                #organizationNameAr=\"ngModel\" placeholder=\"{{'organization.NameAr'|translate}}\"\r\n                                [(ngModel)]=\"organization.nameAr\"\r\n                                [class.is-invalid]=\"organizationNameAr.touched && organizationNameAr.errors || EditOrganizationForm.submitted\"\r\n                                [class.is-valid]=\"organizationNameAr.valid && EditOrganizationForm.submitted\" required\r\n                                pTooltip=\"Please,Enter A OrganizationName in Arabic\" tooltipPosition=\"bottom\">\r\n                            <div\r\n                                *ngIf=\"(organizationNameAr.touched || EditOrganizationForm.submitted) && organizationNameAr.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    {{'General.Required'|translate}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br><br>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-3\">\r\n                            <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                                class=\"btn btn-info\" (click)=\"hideDialog()\" value=\"cancel\" type=\"button\"></button>\r\n                        </div>\r\n                        <div class=\"col-lg-3\">\r\n                            <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\"\r\n                                class=\"btn btn-info\" value=\"save\" type=\"submit\"></button>\r\n                        </div>\r\n                    </div>\r\n                    <br><br>\r\n                </fieldset>\r\n            </form>\r\n        </ng-template>\r\n    </p-dialog>\r\n    <p-dialog [(visible)]=\"errorDisplay\" [style]=\"{width: '350px'}\">\r\n        <p-header  style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n       <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{error}}</span>\r\n    </p-dialog>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ConfirmationService,Message, MessageService } from 'primeng/api';\r\nimport { Organization } from 'src/app/Shared/Models/Organization';\r\nimport { Paging } from 'src/app/Shared/Models/Paging';\r\nimport { OrganizationService } from 'src/app/Shared/services/organization.service';\r\n\r\n@Component({\r\n  selector: 'app-organization-list',\r\n  templateUrl: './organization-list.component.html',\r\n  styleUrls: ['./organization-list.component.css']\r\n})\r\nexport class OrganizationListComponent implements OnInit {\r\n  organizationsList:Organization[];\r\n  selectedProducts:Organization[];\r\n  organization:Organization;\r\n  organizationDialog: boolean;\r\n  submitted:boolean;\r\n  msgs: Message[] = [];\r\n  error:string;\r\n  errorDisplay:boolean=false;\r\n  page: Paging;\r\n  count: number;\r\n  constructor(private organizationService:OrganizationService,private router:Router,\r\n    private translate:TranslateService,private confirmationService: ConfirmationService,\r\n    private messageservice:MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.organization={\r\n      id:0,\r\n      Name:'',\r\n      NameAr:''\r\n    }\r\n    this.page={\r\n      pagenumber:1,\r\n      pagesize:10\r\n    }\r\n  this.organizationService.getOrganizationscount().subscribe(data=>\r\n  {\r\n    this.count=data\r\n  })\r\n    this.organizationService.getAllwithpaging(this.page).subscribe(data=>{\r\n      this.organizationsList=data;      \r\n    })\r\n  //  this.getAll();\r\n  }\r\n  getAll()\r\n  {\r\n    this.organizationService.getAllOrganization().subscribe(data=>{this.organizationsList=data,console.log(\"orgsList\",this.organizationsList)});\r\n  }\r\n  AddOrganization(org)\r\n  {\r\n    this.organizationService.addNewOrganization(org).subscribe(data=>{console.log(\"organizations\",data)});\r\n  }\r\n  openNew(org) {\r\n    this.organizationDialog = true\r\n    this.submitted = false;    \r\n    this.organization = org; \r\n   // console.log(\"insideOpenNew\",org);\r\n   // this.getAll();\r\n  }\r\n  hideDialog() {\r\n    this.organizationDialog = false;\r\n    this.submitted = false;\r\n   \r\n  }\r\n  updateOrganization() {\r\n   \r\n    console.log(this.organization)\r\n    this.organizationService.updateOrganization(this.organization.id, this.organization).subscribe(\r\n      data => {\r\n      this.submitted = true;\r\n      this.organizationDialog = false;     \r\n    },\r\n    error=>{\r\n      this.errorDisplay=true;\r\n      this.error=error.error.message;\r\n      this.getAll();\r\n    });\r\n  }\r\n  deleteOrganization(orgId) {\r\n    this.organizationService.deleteOrganization(orgId).subscribe(\r\n      data => { console.log(data), this.getAll() }\r\n    );\r\n}\r\nconfirmDelete(OId) {\r\n  if(this.translate.currentLang=='En')\r\n  {\r\n    this.confirmationService.confirm({\r\n      message: 'Do you want to delete this organization ?' ,\r\n      header: 'Delete Confirmation',\r\n      icon: 'pi pi-info-circle',\r\n      accept: () => {\r\n          this.deleteOrganization(OId)\r\n          this.messageservice.add({ severity: 'info', detail: 'Record deleted' });\r\n          \r\n      },\r\n      reject: () => {\r\n         this.messageservice.add({ severity: 'info', detail: 'Delete rejected' });\r\n      }\r\n  });\r\n }\r\n else if(this.translate.currentLang=='Ar')\r\n {\r\n  this.confirmationService.confirm({     \r\n    message: 'هل انت متأكد من مسح هذا العنصر من القائمة',\r\n    header: 'تاكيد عملية المسح',\r\n    icon: 'pi pi-info-circle',\r\n    \r\n    accept: () => {\r\n        this.deleteOrganization(OId)\r\n        this.messageservice.add({ severity: 'info', detail: 'تم المسح' });\r\n\r\n    },\r\n    reject: () => {\r\n        this.messageservice.add({ severity: 'info', detail: 'رفض عمليه المسح' });\r\n    },\r\n    acceptLabel:\"نعم\",\r\n    rejectLabel:\"لا\",\r\n  });\r\n }\r\n}\r\n\r\n\r\n}\r\n","<div>\r\n    <p-dialog [(visible)]=\"subOrganizationDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\"\r\n        (onHide)=\"hideDialog()\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">{{'subOrganization.AddNewSubOrganization'|translate}}</h3>\r\n                </div>\r\n\r\n            </div>\r\n            <form (ngSubmit)=\"AddSubOrganizationForm.valid && saveSubOrganization()\" #AddSubOrganizationForm=\"ngForm\">\r\n\r\n                <fieldset class=\"tab\">\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-3\">\r\n                            <label for=\"subOrganizationName\">{{'subOrganization.Name'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"subOrganizationName\" name=\"subOrganizationName\"\r\n                                #subOrganizationName=\"ngModel\" pTooltip=\"Enter a Name\" tooltipPosition=\"bottom\"\r\n                                [(ngModel)]=\"subOrganization.name\"\r\n                                [class.is-invalid]=\"subOrganizationName.touched && subOrganizationName.errors || AddSubOrganizationForm.submitted\"\r\n                                [class.is-valid]=\"subOrganizationName.valid && AddSubOrganizationForm.submitted\" required>\r\n                            <div\r\n                                *ngIf=\"(subOrganizationName.touched || AddSubOrganizationForm.submitted) && subOrganizationName.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    English name is required\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-3\">\r\n                            <label for=\"subOrganizationNameAr\">{{'subOrganization.NameAr'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"subOrganizationNameAr\"\r\n                                [ngModelOptions]=\"{standalone: true}\" pTooltip=\"Enter a Name in Arabic\"\r\n                                tooltipPosition=\"bottom\" [(ngModel)]=\"subOrganization.nameAr\"\r\n                                name=\"subOrganizationName\" #subOrganizationNameAr=\"ngModel\"\r\n                                [class.is-invalid]=\"subOrganizationNameAr.touched && subOrganizationNameAr.errors || AddSubOrganizationForm.submitted\"\r\n                                [class.is-valid]=\"subOrganizationNameAr.valid && AddSubOrganizationForm.submitted\" required>\r\n                            <div\r\n                                *ngIf=\"(subOrganizationNameAr.touched || AddSubOrganizationForm.submitted) && subOrganizationNameAr.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    Arabic name is required\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-3 form-group\">\r\n                            <label for=\"organization\">{{'subOrganization.Organization'|translate}}</label>\r\n                            <select class=\"form-control\" id=\"organization\" name=\"organization\" #organization=\"ngModel\"\r\n                                [(ngModel)]=\"subOrganization.organizationId\" pTooltip=\"select a SubOrganization\"\r\n                                tooltipPosition=\"bottom\"\r\n                                [class.is-invalid]=\"organization.touched && organization.errors || AddSubOrganizationForm.submitted\"\r\n                                [class.is-valid]=\"organization.valid && AddSubOrganizationForm.submitted\" required>\r\n                                <option selected>--select--</option>\r\n                                <option *ngFor=\"let org of OrganizationsList\" [value]=\"org.id\">\r\n                                    {{translate.currentLang == \"En\" ? org.name:org.nameAr}}\r\n                                </option>\r\n                            </select>\r\n                            <div\r\n                                *ngIf=\"(organization.touched || AddSubOrganizationForm.submitted) && organization.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    Category name is required\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-3\">\r\n                            <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                                class=\"btn btn-info\" (click)=\"hideDialog()\" type=\"button\"\r\n                                value=\"{{'Actions.Cancel'|translate}}\"></button>\r\n                        </div>\r\n                        <div class=\"col-lg-3\">\r\n                            <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\"\r\n                                class=\"btn btn-info\" value=\"{{'Actions.Save'|translate}}\" type=\"submit\"></button>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n                <p-dialog [(visible)]=\"errorDialog\" [style]=\"{width: '350px'}\">\r\n                    <p-header style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n                    <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{error}}</span>\r\n                </p-dialog>\r\n            </form>\r\n\r\n        </ng-template>\r\n    </p-dialog>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Organization } from 'src/app/Shared/Models/Organization';\r\nimport { SubOrganization } from 'src/app/Shared/Models/subOrganization';\r\nimport { OrganizationService } from 'src/app/Shared/services/organization.service';\r\nimport { SubSubOrganizationService } from 'src/app/Shared/services/sub-organization.service';\r\n\r\n@Component({\r\n  selector: 'app-new-sub-organization',\r\n  templateUrl: './new-sub-organization.component.html',\r\n  styleUrls: ['./new-sub-organization.component.css']\r\n})\r\nexport class NewSubOrganizationComponent implements OnInit {\r\n  subOrganizationDialog:boolean;\r\n  subOrganization: SubOrganization;\r\n  submitted: boolean;\r\n  OrganizationsList: Organization[];\r\n  error: string;\r\n  errorDialog: boolean;\r\n  constructor(private subSubOrganizationService:SubSubOrganizationService,\r\n    private organizatioService:OrganizationService,\r\n    private router:Router,\r\n    private translate:TranslateService,\r\n    private messageService: MessageService) { }\r\n\r\n  ngOnInit() {\r\n    this.subOrganization = {\r\n      id: 0,\r\n      name: '',\r\n      nameAr: '',\r\n      organizationId:0\r\n  }\r\n  this.openNew()\r\n}\r\nopenNew() {\r\n  this.subOrganizationDialog = true\r\n  this.submitted = false;\r\n  this.organizatioService.getAllOrganization().subscribe(data => { this.OrganizationsList = data });\r\n\r\n}\r\n\r\nhideDialog() {\r\n  this.subOrganizationDialog = false;\r\n  this.submitted = false;\r\n  this.router.navigate(['/home/SubOrganizationList'])\r\n}\r\n\r\nsaveSubOrganization() {\r\n  this.submitted = true;\r\n  this.addSubOrganization();\r\n \r\n}\r\n\r\naddSubOrganization() {\r\n  this.subSubOrganizationService.addNewSubOrganization(this.subOrganization).subscribe(\r\n    data => { console.log(data),this.hideDialog()},error=>{\r\n      this.errorDialog=true;\r\n      if (this.translate.currentLang == 'En') {\r\n             if (error.error.status == 'name') {\r\n          this.error = error.error.message;\r\n        }\r\n        if (error.error.status == 'nameAr') {\r\n          this.error = error.error.message;\r\n        }\r\n      }  if (this.translate.currentLang == 'Ar')  {\r\n        if (error.error.status == 'name') {\r\n          this.error = error.error.messageAr;\r\n        }\r\n        if (error.error.status == 'nameAr') {\r\n          this.error = error.error.messageAr;\r\n        }\r\n      }\r\n      return false;\r\n    \r\n    });\r\n}\r\n\r\n  \r\n\r\n}","\r\n        <!-- <p-messages [value]=\"msgs\"></p-messages> -->\r\n        <!-- <p-toolbar styleClass=\"p-mb-4\">\r\n            <ng-template pTemplate=\"left\">\r\n\r\n             \r\n            </ng-template>\r\n        </p-toolbar> -->\r\n                \r\n<div class=\"container-fluid\">\r\n\r\n    <div class=\"card\">\r\n        <!-- <p-messages [value]=\"msgs\"></p-messages> -->\r\n        <p-toast posinset=\"top-right\"></p-toast>\r\n        <div class=\"card-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-11\">\r\n                    <h5>{{'subOrganization.ManagesubOrganizations'|translate}}</h5>\r\n\r\n\r\n                </div>\r\n                <div class=\"col-md-1\" style=\"text-align: right;\">\r\n                    <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary  p-button-rounded p-mr-2 new\"\r\n                    routerLink=\"/home/AddSubOrganization\" pTooltip=\"Add a New subcategory\" tooltipPosition=\"right\"></button>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\"><br /></div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n        <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n        <p-table #dt [value]=\"SubOrganizationsList\" styleClass=\"p-datatable-striped\" [rows]=\"10\" [paginator]=\"true\"\r\n         [(selection)]=\"selectedSubOrganizations\"\r\n            [rowHover]=\"true\" dataKey=\"id\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            [showCurrentPageReport]=\"true\" [globalFilterFields]=\"['name','nameAr']\">\r\n            <ng-template pTemplate=\"caption\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                \r\n                    <span class=\"p-input-icon-right\">\r\n                        <i class=\"pi pi-search\"></i>\r\n                        <input pInputText type=\"text\" class=\"form-control\"\r\n                            (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                            placeholder=\"{{'search.Search'|translate}}...\" />\r\n                    </span>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n\r\n                    <th pSortableColumn=\"name\">{{'subOrganization.Name'|translate}}<p-sortIcon field=\"name\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n\r\n                    <th style=\"width: 10%;\">{{'Actions.Action'|translate}}</th>\r\n                </tr>\r\n                <tr>\r\n\r\n                    <th>\r\n                        <input pInputText type=\"text\"   *ngIf=\"translate.currentLang==='En'\" \r\n                            (input)=\"dt.filter($event.target.value, 'name', 'contains')\"\r\n                            [value]=\"dt.filters['name']?.value\"\r\n                            placeholder=\"{{'search.SearchbysubOrganizationName'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n\r\n   <input pInputText type=\"text\"   *ngIf=\"translate.currentLang==='Ar'\" \r\n                            (input)=\"dt.filter($event.target.value, 'nameAr', 'contains')\"\r\n                            [value]=\"dt.filters['nameAr']?.value\"\r\n                            placeholder=\"{{'search.SearchbysubOrganizationName'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                            \r\n                    </th>\r\n\r\n\r\n\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-subOrg>\r\n                <tr>\r\n                    <td> {{translate.currentLang == \"En\" ? subOrg.name:subOrg.nameAr}}</td>\r\n\r\n                    <td>\r\n                        <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-info edit\"\r\n                            (click)=\"openNew(subOrg)\" pTooltip=\"edit a subOrganization\" tooltipPosition=\"top\"></button>\r\n\r\n                        <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\"\r\n                            (click)=\"confirmDelete(subOrg.id,subOrg.name)\"></button>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"summary\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    {{'In total there are.In total there are'| translate}} {{subOrganizations ? subOrganizations.length : 0 }} {{'Sidebar.subOrganizations'| translate}}.\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div></div></div></div>\r\n    <p-dialog [(visible)]=\"subOrganizationDialog\" [style]=\"{width: '1024px'}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div>\r\n                <div class=\"header\">\r\n                    <h3 class=\"title\">{{'subOrganization.EditSubOrganization'|translate}}</h3>\r\n                </div>\r\n\r\n            </div>\r\n            <form (ngSubmit)=\"EditSubOrganizationForm.valid && updatesubIOrg()\" #EditSubOrganizationForm=\"ngForm\">\r\n\r\n                <fieldset class=\"tab\">\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-3\">\r\n                            <label for=\"subOrganizationName\">{{'subOrganization.Name'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"subOrganizationName\" name=\"subOrganizationName\"\r\n                                #subOrganizationName=\"ngModel\" pTooltip=\"Enter a Name\" tooltipPosition=\"bottom\"\r\n                                [(ngModel)]=\"subOrganization.name\"\r\n                                [class.is-invalid]=\"subOrganizationName.touched && subOrganizationName.errors || EditSubOrganizationForm.submitted\"\r\n                                [class.is-valid]=\"subOrganizationName.valid && EditSubOrganizationForm.submitted\" required>\r\n                            <div\r\n                                *ngIf=\"(subOrganizationName.touched || EditSubOrganizationForm.submitted) && subOrganizationName.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    English name is required\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-3\">\r\n                            <label for=\"subOrganizationNameAr\">{{'subOrganization.NameAr'|translate}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"subOrganizationNameAr\"\r\n                                [ngModelOptions]=\"{standalone: true}\" pTooltip=\"Enter a Name in Arabic\"\r\n                                tooltipPosition=\"bottom\" [(ngModel)]=\"subOrganization.nameAr\"\r\n                                name=\"subOrganizationName\" #subOrganizationNameAr=\"ngModel\"\r\n                                [class.is-invalid]=\"subOrganizationNameAr.touched && subOrganizationNameAr.errors || EditSubOrganizationForm.submitted\"\r\n                                [class.is-valid]=\"subOrganizationNameAr.valid && EditSubOrganizationForm.submitted\" required>\r\n                            <div\r\n                                *ngIf=\"(subOrganizationNameAr.touched || EditSubOrganizationForm.submitted) && subOrganizationNameAr.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    Arabic name is required\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-3 form-group\">\r\n                            <label for=\"organization\">{{'subOrganization.Organization'|translate}}</label>\r\n                            <select class=\"form-control\" id=\"organization\" name=\"organization\" #organization=\"ngModel\"\r\n                                [(ngModel)]=\"subOrganization.organizationId\" pTooltip=\"select a SubOrganization\"\r\n                                tooltipPosition=\"bottom\"\r\n                                [class.is-invalid]=\"organization.touched && organization.errors || EditSubOrganizationForm.submitted\"\r\n                                [class.is-valid]=\"organization.valid && EditSubOrganizationForm.submitted\" required>\r\n                                <option selected>--select--</option>\r\n                                <option *ngFor=\"let org of organizationsList\" [value]=\"org.id\">\r\n                                    {{translate.currentLang == \"En\" ? org.name:org.nameAr}}\r\n                                </option>\r\n                            </select>\r\n                            <div\r\n                                *ngIf=\"(organization.touched || EditSubOrganizationForm.submitted) && organization.errors?.required\">\r\n                                <span class=\"text-danger\">\r\n                                    SubOrganization name is required\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-3\">\r\n                            <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                                class=\"btn btn-info\" (click)=\"hideDialog()\" type=\"button\"\r\n                                value=\"{{'Actions.Cancel'|translate}}\"></button>\r\n                        </div>\r\n                        <div class=\"col-lg-3\">\r\n                            <button pButton pRipple label=\"{{'Actions.Save'|translate}}\" icon=\"pi pi-check\"\r\n                                class=\"btn btn-info\" value=\"{{'Actions.Save'|translate}}\" type=\"submit\"></button>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n                <p-dialog [(visible)]=\"errorDialog\" [style]=\"{width: '350px'}\">\r\n                    <p-header style=\"color: rgb(181, 4, 4);\">  {{'General.Error'|translate}} </p-header>\r\n                    <span style=\"color: rgb(181, 4, 4);font-weight: bold;\"> {{error}}</span>\r\n                </p-dialog>\r\n            </form>\r\n\r\n\r\n        </ng-template>\r\n\r\n\r\n    </p-dialog>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ConfirmationService, Message, MessageService } from 'primeng/api';\r\nimport { Organization } from 'src/app/Shared/Models/Organization';\r\nimport { Paging } from 'src/app/Shared/Models/Paging';\r\nimport { SubOrganization } from 'src/app/Shared/Models/subOrganization';\r\nimport { OrganizationService } from 'src/app/Shared/services/organization.service';\r\nimport { SubSubOrganizationService } from 'src/app/Shared/services/sub-organization.service';\r\n\r\n@Component({\r\n  selector: 'app-sub-organization-list',\r\n  templateUrl: './sub-organization-list.component.html',\r\n  styleUrls: ['./sub-organization-list.component.scss']\r\n})\r\nexport class SubOrganizationListComponent implements OnInit {\r\n  error: string\r\n  selectedSubOrganizations: SubOrganization[]\r\n  subOrganizationDialog: boolean;\r\n  subOrganization: SubOrganization\r\n  submitted: boolean;\r\n  SubOrganizationsList: SubOrganization[];\r\n  organizationsList: Organization[];\r\n  msgs: Message[] = [];\r\n  errorDialog: boolean;\r\n  page: Paging;\r\n  count: number;\r\n  constructor(private suborganizationservice: SubSubOrganizationService,\r\n    private organizatioService: OrganizationService, private router: Router,\r\n    private translate: TranslateService, private confirmationService: ConfirmationService,\r\n    private messageservice: MessageService) { }\r\n  ngOnInit() {\r\n    // this.getAll()\r\n    this.page = {\r\n      pagenumber: 1,\r\n      pagesize: 10\r\n    }\r\n    this.suborganizationservice.getSubOrgscount().subscribe(data => {\r\n      this.count = data\r\n    })\r\n    this.suborganizationservice.getAllSubOrgswithpaging(this.page).subscribe(data => {\r\n      this.SubOrganizationsList = data;\r\n    })\r\n  }\r\n  getAll() {\r\n    this.suborganizationservice.getAllSubOrganization().subscribe(data => { this.SubOrganizationsList = data, console.log(this.SubOrganizationsList) });\r\n  }\r\n  openNew(subOrg) {\r\n    console.log(\"sub\", subOrg)\r\n    this.subOrganizationDialog = true\r\n    this.submitted = false;\r\n    this.subOrganization = subOrg\r\n    this.organizatioService.getAllOrganization().subscribe(data => { this.organizationsList = data, console.log(this.organizationsList) });\r\n  }\r\n  hideDialog() {\r\n    this.subOrganizationDialog = false;\r\n    this.submitted = false;\r\n\r\n  }\r\n  updatesubIOrg() {\r\n    this.submitted = true;\r\n    console.log(\"subCategoryIs\", this.subOrganization)\r\n    this.suborganizationservice.updateSubOrganization(this.subOrganization.id, this.subOrganization).subscribe(data => {\r\n      console.log(data), this.hideDialog()\r\n\r\n    }, error => {\r\n      this.errorDialog = true;\r\n      if (this.translate.currentLang == 'En') {\r\n        if (error.error.status == 'name') {\r\n          this.error = error.error.message;\r\n        }\r\n        if (error.error.status == 'nameAr') {\r\n          this.error = error.error.message;\r\n        }\r\n      } if (this.translate.currentLang == 'Ar') {\r\n        if (error.error.status == 'name') {\r\n          this.error = error.error.messageAr;\r\n        }\r\n        if (error.error.status == 'nameAr') {\r\n          this.error = error.error.messageAr;\r\n        }\r\n      }\r\n      return false;\r\n      this.getAll()\r\n    })\r\n\r\n  }\r\n  deleteSubOrg(subOrg) {\r\n    //  var result = confirm(\"Want to delete this subCat\" + \"?\");\r\n    //  if (result) {\r\n    console.log(\"subCat\");\r\n    this.suborganizationservice.deleteSubOrganization(subOrg).subscribe(\r\n      data => { console.log(data), this.getAll() }\r\n    );\r\n    //  }\r\n    //  this.router.navigate(['/home/equipmentSubCategories/'])\r\n  }\r\n  confirmDelete(subId, subName) {\r\n    if (this.translate.currentLang == 'En') {\r\n      this.confirmationService.confirm({\r\n        message: 'Do you want to delete this ' + subName + ' subOrg?',\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        accept: () => {\r\n          this.deleteSubOrg(subId)\r\n          this.messageservice.add({ severity: 'info', detail: 'Record deleted' });\r\n\r\n        },\r\n        reject: () => {\r\n          this.messageservice.add({ severity: 'info', detail: 'Delete rejected' });\r\n        }\r\n      });\r\n    }\r\n    else if (this.translate.currentLang == 'Ar') {\r\n      this.confirmationService.confirm({\r\n        message: 'هل انت متأكد من مسح' + subName + 'من القائمه ',\r\n        header: 'تاكيد عملية المسح',\r\n        icon: 'pi pi-info-circle',\r\n\r\n        accept: () => {\r\n          this.deleteSubOrg(subId)\r\n          this.messageservice.add({ severity: 'info', detail: 'تم المسح' });\r\n        },\r\n        reject: () => {\r\n          this.messageservice.add({ severity: 'info', detail: 'رفض عمليه المسح' });\r\n        },\r\n        acceptLabel: \"نعم\",\r\n        rejectLabel: \"لا\",\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n","<p-dialog [(visible)]=\"equipmentDialog\" [style]=\"{width: '70vw'}\" [modal]=\"true\" styleClass=\"p-fluid\"\r\n    (onHide)=\"hideDialog()\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <h3 class=\"title\">{{'equipment.Details' | translate}}</h3>\r\n            </div>\r\n            <div>\r\n                <img src=\"./../assets/images/ecg.png\" class=\"img\" [alt]=\"product\">\r\n            </div>\r\n        </div>\r\n        <form>\r\n            <p-tabView [activeIndex]=\"index\" (onChange)=\"handleChange($event)\">\r\n                <p-tabPanel header=\"{{'equipment.Details' | translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <legend>{{'equipment.Details'| translate}}</legend>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\" *ngIf=\"translate.currentLang == 'En'\">\r\n                                <label for=\"name\">{{\"equipment.Name\"| translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"equipmentName\" class=\"form-control\" name=\"name\"\r\n                                    [(ngModel)]=\"equipmentObj.equipmentName\" disabled />\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3 form-group\" *ngIf=\"translate.currentLang == 'Ar'\">\r\n                                <label for=\"namear\">{{\"equipment.NameAr\"| translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"equipmentNamear\" class=\"form-control\" name=\"namear\"\r\n                                    [(ngModel)]=\"equipmentObj.equipmentNameAr\" disabled />\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"internalCode\">{{'equipment.barcode'| translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"barcode\" class=\"form-control\" name=\"barcode\"\r\n                                    [(ngModel)]=\"equipmentObj.barcode\" tooltipPosition=\"bottom\" disabled />\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"status\">{{'equipment.EquipmentStatus'|translate}}</label>\r\n                                <div>\r\n                                    <ul class=\"list-group\">\r\n                                        <li class=\"list-group-item\">\r\n                                            <input type=\"radio\" name=\"status\" id=\"status\" disabled selected />\r\n                                            {{translate.currentLang == \"En\"\r\n                                            ?equipmentObj.statusName:equipmentObj.statusNameAr}}\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"col-md-12 \" *ngIf=\"translate.currentLang == 'En'\">\r\n\r\n                                <label for=\"Description\">{{'equipment.Description'| translate}}</label>\r\n                                <textarea class=\"form-control\" id=\"Description\" type=\"text\"\r\n                                    [(ngModel)]=\"equipmentObj.equipmentDescription\"\r\n                                    [ngModelOptions]=\"{standalone: true}\"\r\n                                    pTooltip=\"Please,Select An equipmentDescription\" tooltipPosition=\"bottom\"\r\n                                    disabled></textarea>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\" *ngIf=\"translate.currentLang == 'Ar'\">\r\n\r\n\r\n\r\n                                <label for=\"Description\">{{'equipment.DescriptionAr'| translate}}</label>\r\n                                <textarea class=\"form-control\" id=\"Description\" type=\"text\"\r\n                                    [(ngModel)]=\"equipmentObj.equipmentDescriptionAr\"\r\n                                    [ngModelOptions]=\"{standalone: true}\"\r\n                                    pTooltip=\"Please,Select An equipmentDescription\"\r\n                                    tooltipPosition=\"bottom\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n\r\n                        <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\"\r\n                            [hidden]=\"isNextvalid\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\"\r\n                            [hidden]=\"isPrevvalid\">previous</button>\r\n\r\n                        <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n                <p-tabPanel header=\"{{'equipment.IndustryDetails' | translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"color\">{{'equipment.Color'| translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"Color\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.color\" disabled />\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"weight\">{{'equipment.weight'| translate}}</label>\r\n                                <input type=\"number\" pInputText id=\"weight\" [ngModelOptions]=\"{standalone: true}\"\r\n                                    class=\"form-control\" [(ngModel)]=\"equipmentObj.weight\" disabled />\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"length\">{{'equipment.length'| translate}}</label>\r\n                                <input type=\"number\" pInputText id=\"length\" [ngModelOptions]=\"{standalone: true}\"\r\n                                    class=\"form-control\" [(ngModel)]=\"equipmentObj.length\" disabled />\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"height\">{{'equipment.height'| translate}}</label>\r\n                                <input type=\"number\" pInputText id=\"height\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.height\" disabled />\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"serialNumber\">{{'equipment.serialNumber'| translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"serialNumber\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.serialNumber\"\r\n                                    disabled />\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <br>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\">previous</button>\r\n\r\n                        <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n                <p-tabPanel header=\"{{'equipment.Location' |translate}}\">\r\n\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"healthName\">{{'equipment.healthCareUnit'|translate}}</label>\r\n                                <select class=\"form-control\" id=\"healthName\" name=\"healthName\" #healthName=\"ngModel\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.healthCareUnitId\"\r\n                                    disabled>\r\n                                    <option *ngFor=\"let h of healthCareUnitsList\" [value]=\"h.id\">\r\n                                        {{translate.currentLang == \"En\" ?\r\n                                        h.healthCareUnitName:h.healthCareUnitNameAr}}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Department\">{{'equipment.Department' |translate}}</label>\r\n                                <select type=\"text\" id=\"Department\" class=\"form-control\" #department=\"ngModel\"\r\n                                    name=\"department\" [ngModelOptions]=\"{standalone: true}\"\r\n                                    [(ngModel)]=\"equipmentObj.departmentId\" disabled>\r\n                                    <option selected disabled>--select--</option>\r\n                                    <option *ngFor=\"let d of departmentsList\" [value]=\"d.id\">\r\n                                        {{translate.currentLang == \"En\" ? d.departmentName:d.departmentNameAr}}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Employee\">{{'equipment.Employee' |translate}}</label>\r\n                                <p-multiSelect [options]=\"users\" (onChange)=\"checkCheckBoxvalue($event)\"\r\n                                    defaultLabel=\"Select employee\" optionLabel=\"userName\">\r\n                                    <ng-template let-selectedEmployees pTemplate=\"selectedItems\">\r\n                                        <ng-container *ngFor=\"let selectedLayer of selectedEmployees;\">\r\n                                            {{selectedLayer.employeeName}} ,\r\n                                        </ng-container>\r\n                                    </ng-template>\r\n                                </p-multiSelect>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Floor\">{{'equipment.Floor' | translate}}</label>\r\n                                <input type=\"number\" id=\"Floor\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.floor\" disabled />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Room\">{{'equipment.Room' | translate}}</label>\r\n                                <input type=\"number\" id=\"Room\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.room\" disabled />\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"internalCode\">{{'equipment.internalCode' |translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"internalCode\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.internalCode\"\r\n                                    disabled />\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\">previous</button>\r\n\r\n                        <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n                <p-tabPanel header=\"{{'equipment.PurchasingDetails'|translate}}\">\r\n\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"date\">{{'equipment.InstallationDate'|translate}}</label>\r\n                                <input type=\"date\" class=\"form-control\" id=\"installationDate\" name=\"installationDate\"\r\n                                    value=\"{{InstallationDate}}\" disabled>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"purchasedate\">{{'equipment.PurchaseDate'|translate}}</label>\r\n                                <input type=\"date\" class=\"form-control\" id=\"purchasedate\" name=\"purchasedate\"\r\n                                    value=\"{{purchaseDat}}\" disabled>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"supplier\">{{'equipment.Supplier'|translate}}</label>\r\n                                <select type=\"text\" id=\"supplier\" class=\"form-control\" name=\"supplier\"\r\n                                    [(ngModel)]=\"equipmentObj.supplierId\" #supplierName=\"ngModel\" disabled>\r\n                                    <option *ngFor=\"let s of suppliersList\" [value]=\"s.id\">\r\n                                        {{translate.currentLang == \"En\" ? s.supplierName:s.supplierNameAr}}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"price\">{{'equipment.Price' |translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"price\" class=\"form-control\" name=\"price\"\r\n                                    [(ngModel)]=\"equipmentObj.price\" #price=\"ngModel\" disabled />\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\"\r\n                            [hidden]=\"isNextvalid\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" [hidden]=\"isPrevvalid\"\r\n                            (click)=\"Previous()\">previous</button>\r\n\r\n                        <br><br><br>\r\n\r\n                    </fieldset>\r\n\r\n                </p-tabPanel>\r\n                <p-tabPanel header=\"{{'equipment.QrCode' |translate}}\">\r\n\r\n                    <fieldset class=\"tab\">\r\n                        <legend>{{'equipment.QrCode' |translate}}</legend>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                              \r\n                                <ngx-qrcode [elementType]=\"elementType\" [errorCorrectionLevel]=\"correctionLevel\"\r\n                                [value]=\"equipmentObj.qrImgPath\" class=\"coolQRCode\"></ngx-qrcode>\r\n                               \r\n                            </div>\r\n                            <!-- <div *ngIf=\"equipmentObj.qrImgPath == null\">\r\n                                <p>No QrCode for this equipment</p>\r\n                            </div> -->\r\n                        </div>\r\n                  \r\n                        <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n            </p-tabView>\r\n        </form>\r\n    </ng-template>\r\n</p-dialog>\r\n","import { DatePipe } from '@angular/common';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ConfirmationService, Message, MessageService } from 'primeng/api';\r\nimport { Category } from 'src/app/Shared/Models/Category';\r\nimport { Department } from 'src/app/Shared/Models/Department';\r\nimport { Employee } from 'src/app/Shared/Models/Employee';\r\nimport { Equipment } from 'src/app/Shared/Models/Equipment';\r\nimport { HealthCareUnit } from 'src/app/Shared/Models/HealthCareUnit';\r\nimport { healthDirectory } from 'src/app/Shared/Models/healthDirectory';\r\nimport { HealthDistrict } from 'src/app/Shared/Models/HealthDistrict';\r\nimport { Inventory } from 'src/app/Shared/Models/Inventory';\r\nimport { Manufacturer } from 'src/app/Shared/Models/Manufacturer';\r\nimport { MasterEquipment } from 'src/app/Shared/Models/MasterEquipment';\r\nimport { Origin } from 'src/app/Shared/Models/Origin';\r\nimport { Priority } from 'src/app/Shared/Models/Priority';\r\nimport { Status } from 'src/app/Shared/Models/Status';\r\nimport { SubCategory } from 'src/app/Shared/Models/SubCategory';\r\nimport { Supplier } from 'src/app/Shared/Models/Supplier';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { EmployeeService } from 'src/app/Shared/services/employee.service';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\nimport { InventoryService } from 'src/app/Shared/services/inventory.service';\r\nimport { MasterequipmentService } from 'src/app/Shared/services/masterequipment.service';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-equipment-details',\r\n  templateUrl: './equipment-details.component.html',\r\n  styleUrls: ['./equipment-details.component.css']\r\n})\r\nexport class EquipmentDetailsComponent implements OnInit {\r\n  eqId: Number;\r\n  equiID: number;\r\n  equipmentDialog: boolean;\r\n  equipments: Equipment[];\r\n  MasterEquipment: MasterEquipment[];\r\n  equipmentObj: Equipment;\r\n  selectedProducts: Equipment[];\r\n  submitted: boolean;\r\n  opened: boolean;\r\n  healthCareUnitsList: HealthCareUnit[];\r\n  healthCareUnits: HealthCareUnit[];\r\n  CareUnits: HealthCareUnit[];\r\n  statusList: Status[];\r\n  priorityList: Priority[];\r\n  manufacturerList: Manufacturer[];\r\n  originsList: Origin[];\r\n  categoriesList: Category[];\r\n  subCategoriesList: SubCategory[];\r\n  departmentsList: Department[];\r\n  suppliersList: Supplier[];\r\n  employeeList: Employee[];\r\n  healthDirectoriesList: healthDirectory[];\r\n  HealthDistrictsList: HealthDistrict[];\r\n  users: User[];\r\n  TecniciensList = []\r\n  employees: any[] = [];\r\n  selectedEmployees: Employee[];\r\n  EpmIDs: number[] = [];\r\n  msgs: Message[] = [];\r\n  districtsList: HealthDistrict[];\r\n  masterEquipment: MasterEquipment[];\r\n  InstallationDate: string = '';\r\n  purchaseDat: string = '';\r\n  index: number = 0;\r\n  Id: number;\r\n  isNextvalid: boolean = false;\r\n  isPrevvalid: boolean = true;\r\n  currentUser: User;\r\n  Inventory: Inventory\r\n  error:string\r\n  constructor(private equipmentService: EquipmentService,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    public translate: TranslateService,\r\n    private employeeService: EmployeeService,\r\n    private datePipe: DatePipe,\r\n    private masterEquipmentService: MasterequipmentService,\r\n    private confirmationService: ConfirmationService,\r\n    private messageService: MessageService,\r\n    private userService: UserService,\r\n    private activeRoute: ActivatedRoute,\r\n    private http: HttpClient,\r\n    private inventoryService: InventoryService) { this.currentUser = this.userService.currentUserValue; }\r\n  httpHeader = {\r\n    headers: new HttpHeaders({\r\n      'content-type': 'application/json',\r\n      'Accept': '*/*'\r\n    })\r\n  };\r\n  ngOnInit(): void {\r\n    // this.Inventory = {\r\n    //   id: 0,\r\n    //   equipmentId: 0,\r\n    //   userId: '',\r\n    //   equipmentCode: '',\r\n    //   userName:'',\r\n    //   createdAt: new Date\r\n    // }\r\n    this.equipmentObj = {\r\n      id: this.activeRoute.snapshot.params['id'],\r\n      equipmentDescription: '',\r\n      equipmentDescriptionAr: '',\r\n      equipmentName: '',\r\n      equipmentNameAr: '',\r\n      installationDate: new Date(),\r\n      purchaseDate: new Date(),\r\n      priorityId: 0,\r\n      equipmentCategoryId: 0,\r\n      equipmentSubCategoryId: 0,\r\n      equipmentStatuSId: 0,\r\n      statusName: '',\r\n      statusNameAr: '',\r\n      manufacturerId: 0,\r\n      originId: 0,\r\n      healthCareUnitId: 0,\r\n      healthCareUnit: '',\r\n      healthCareUnitName: '',\r\n      healthCareUnitNameAr: '',\r\n      supplierId: 0,\r\n      supplierName: '',\r\n      supplierNameAr: '',\r\n      expectedLifeTime: 0,\r\n      length: 0,\r\n      height: 0,\r\n      weight: 0,\r\n      departmentId: 0,\r\n      departmentName: '',\r\n      departmentNameAr: '',\r\n      room: 0,\r\n      floor: 0,\r\n      remarks: '',\r\n      price: 0,\r\n      modelNumber: '',\r\n      versionNumber: '',\r\n      serialNumber: '',\r\n      internalCode: '',\r\n      upaCode: '',\r\n      barcode: '',\r\n      color: '',\r\n      colorAr: '',\r\n      manufacturerName: '',\r\n      manufacturerNameAr: '',\r\n      healthDirectoryId: 0,\r\n      healthDirectoryName: '',\r\n      healthDirectoryNameAr: '',\r\n      healthDistrictId: 0,\r\n      healthDistrictName: '',\r\n      healthDistrictNameAr: '',\r\n      employeeIDs: [],\r\n      AttachmentIDs: [],\r\n      masterEquipmentId: 0,\r\n      qrImgPath: '',\r\n      createdAt:new Date(),\r\n      organizationName:'',\r\n      organizationNameAr:'',\r\n      time:'', \r\n      recallNumber:0,\r\n      recallDate:new Date(),\r\n      organizationId:0\r\n     ,\r\n      contractRequestId:0,\r\n      organizationrequestid:0,\r\n      contractid:0\r\n    }\r\n\r\n    this.equipmentObj.employeeIDs = [];\r\n    this.openNew(this.activeRoute.snapshot.params['id']);\r\n\r\n  }\r\n  openNew(id: number) {\r\n    this.equipmentDialog = true;\r\n    this.InstallationDate = this.datePipe.transform(this.equipmentObj.installationDate, 'yyyy-MM-dd');\r\n    this.purchaseDat = this.datePipe.transform(this.equipmentObj.purchaseDate, 'yyyy-MM-dd');\r\n    console.log(\"installationDate\", this.InstallationDate);\r\n    console.log(\"purchaseDate\", this.purchaseDat);\r\n    this.sharedService.getAllSuppliers().subscribe(data => { this.suppliersList = data });\r\n    this.sharedService.getAllunits().subscribe(data => { this.healthCareUnitsList = data });\r\n    this.sharedService.getAllDepartments().subscribe(data => { this.departmentsList = data });\r\n    this.sharedService.getAllstatuses().subscribe(data => { this.statusList = data });\r\n    this.equipmentService.getEquipmentById(id).subscribe(data => { this.equipmentObj = data },\r\n    error => {\r\n      this.error = error.error.message,\r\n      console.log(this.error),\r\n      this.router.navigate(['/'])\r\n      var frame4 = document.createElement(\"div\");                                        // Append the text to <p>\r\n      var h4=document.body.appendChild(frame4);\r\n      h4.insertAdjacentHTML(\"afterend\", '<p style=\"position:relative;left:500px;top:120px;color:red;\">equipment not found</p>')\r\n    }\r\n    );\r\n    // this.getUsersByEquipmentId(id);\r\n  }\r\n  getOne() {\r\n    //this.equipmentService.getEquipmentById()\r\n  }\r\n  getAll() {\r\n    this.equipmentService.getAllEquipments().\r\n      subscribe(data => { this.equipments = data, console.log(\"equipments\", this.equipments) });\r\n  }\r\n  //    getUsersByEquipmentId(id){\r\n  // this.userService.getUsersByEquipmentId(this.equipmentObj.id).subscribe(e=>console.log(e))\r\n  //    }\r\n  getHealthCareUnit(id: number) {\r\n    this.sharedService.getAllunitsByDistrictId(id).subscribe(data => { this.CareUnits = data })\r\n    console.log(\"iiiiiid\", id);\r\n  }\r\n  getAllMasterEquipment() {\r\n    this.masterEquipmentService.getAll().subscribe(data => { this.MasterEquipment = data, console.log(\"masterEquipment\", this.MasterEquipment) });\r\n  }\r\n  fillDistrict(name: string) {\r\n    this.sharedService.getDirectoryIdByname(name).subscribe(data => {\r\n      this.sharedService.getAllHealthDistricts(data).subscribe(data => {\r\n        this.HealthDistrictsList = data\r\n      });\r\n    });\r\n\r\n  }\r\n  fillHospital(name: string) {\r\n    this.sharedService.getDirectoryIdByname(name).subscribe(data => {\r\n      this.sharedService.getAllunitsByDistrictId(data).subscribe(data => {\r\n        this.healthCareUnits = data;\r\n      })\r\n    })\r\n  }\r\n  fillSubCategory() {\r\n    this.sharedService.getAllSubCategories(this.equipmentObj.equipmentCategoryId).subscribe(data => { this.subCategoriesList = data, console.log(this.subCategoriesList) });\r\n  }\r\n  hideDialog() {\r\n    this.equipmentDialog = false;\r\n    this.submitted = false;\r\n    this.router.navigate(['home/equipmentsList']);\r\n  }\r\n  updateProduct(myform: NgForm) {\r\n    this.submitted = true;\r\n    //console.log(\"update\")\r\n    this.equipmentObj.installationDate = new Date(this.InstallationDate);\r\n    this.equipmentObj.purchaseDate = new Date(this.purchaseDat);\r\n    this.equipmentService.updateEquipment(this.equipmentObj.id, this.equipmentObj).subscribe(\r\n      data => {\r\n        console.log(data), this.hideDialog()\r\n      });\r\n  }\r\n  Next() {\r\n    this.index++;\r\n    if (this.index === 3) {\r\n      this.isNextvalid = true;\r\n      this.isPrevvalid = false;\r\n    }\r\n    console.log(\"next\", this.index);\r\n  }\r\n  Previous() {\r\n    this.index--;\r\n    if (this.index === 0) {\r\n      this.isNextvalid = false;\r\n      this.isPrevvalid = true;\r\n    }\r\n    console.log(\"prev\", this.index);\r\n\r\n  }\r\n  handleChange(e) {\r\n    this.index = e.index;\r\n    if (this.index === 3) {\r\n      this.isNextvalid = true;\r\n      this.isPrevvalid = false;\r\n    }\r\n    else if (this.index === 0) {\r\n      this.isNextvalid = false;\r\n      this.isPrevvalid = true;\r\n    }\r\n    console.log(\"index\", this.index);\r\n  }\r\n  checkCheckBoxvalue(event) {\r\n    this.EpmIDs = [];\r\n    console.log(\"selected111\", this.selectedEmployees);\r\n    var index = this.selectedEmployees.length;\r\n    console.log(\"index\", index);\r\n    this.selectedEmployees.forEach(value => {\r\n      this.EpmIDs.push(value.id);\r\n    });\r\n    //this.equipmentObj.employeeIDs = this.EpmIDs;\r\n  }\r\n\r\n\r\n  // saveInInventory() {\r\n  //   this.Inventory.equipmentId = this.activeRoute.snapshot.params['id']\r\n  //   this.Inventory.userId = this.currentUser.id\r\n  //   this.Inventory.createdAt = new Date();\r\n  //   console.log(this.Inventory)\r\n  //   this.inventoryService.AddInInventory(this.Inventory).subscribe(data => console.log(data))\r\n  // }\r\n}\r\n","import { jsPDF } from \"jspdf\"\r\nvar font = '';\r\nvar callAddFont = function () {\r\nthis.addFileToVFS('Cairo-Regular-normal.ttf', font);\r\nthis.addFont('Cairo-Regular-normal.ttf', 'Cairo-Regular', 'normal');\r\n};\r\njsPDF.API.events.push(['addFonts', callAddFont])\r\n","<div class=\"container-fluid\">\r\n    <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-4 headstyle\">\r\n                    <img src=\"./../assets/images/biologo.png\" class=\"img\">\r\n                </div>\r\n            </div>\r\n            <br>\r\n            <!--------------------------------Filtering----------------------------->\r\n            <div class=\"row\">\r\n                <div class=\"colwidth\">\r\n                    <!-- <i class=\"pi pi-filter\"></i>&nbsp;<button>Name</button> -->\r\n                    <i class=\"pi pi-filter\"></i>&nbsp;<a role=\"button\">{{'equipmentElements.Name'|translate}}</a>\r\n                    <br>\r\n                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"equipments\"\r\n                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentName\"\r\n                        optionValue=\"equipmentName\" [showClear]=\"true\" #equipName\r\n                        (onChange)=\"filterByName(equipName.value)\" styleClass=\"ui-column-filter\" class=\"filterDropdwon\"\r\n                        id=\"name\">\r\n                    </p-dropdown>\r\n                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"equipments\"\r\n                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentNameAr\"\r\n                        optionValue=\"equipmentNameAr\" [showClear]=\"true\" #equipNameAr\r\n                        (onChange)=\"filterByName(equipNameAr.value)\" styleClass=\"ui-column-filter\">\r\n                    </p-dropdown>\r\n                </div>\r\n                <div class=\"colwidth\">\r\n                    <i class=\"pi pi-filter\"></i>&nbsp;<a [ngClass]=\"{'blue' : toggle1,'black': !toggle1}\"\r\n                        role=\"button\">{{'equipmentElements.Brand' |translate}}</a>\r\n                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"manufacturerList\"\r\n                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerName\"\r\n                        optionValue=\"manufacturerName\" [showClear]=\"true\" #equipBrandName\r\n                        (onChange)=\"filterByBrand(equipBrandName.value)\" styleClass=\"ui-column-filter\"\r\n                        class=\"filterDropdwon\"></p-dropdown>\r\n                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"manufacturerList\"\r\n                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerNameAr\"\r\n                        optionValue=\"manufacturerNameAr\" [showClear]=\"true\" #equipBrandNameAr\r\n                        (onChange)=\"filterByBrand(equipBrandNameAr.value)\" styleClass=\"ui-column-filter\">\r\n                    </p-dropdown>\r\n                </div>\r\n                <div class=\"colwidth\">\r\n                    <i class=\"pi pi-filter\"></i>&nbsp;<a [ngClass]=\"{'blue' : toggle2,'black': !toggle2}\"\r\n                        role=\"button\">{{'equipmentElements.Governorate'| translate}}</a>\r\n                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"healthDirectoriesList\"\r\n                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthDirectoryName\"\r\n                        optionValue=\"healthDirectoryName\" [showClear]=\"true\" #equipBrandGov\r\n                        (onChange)=\"filterByGov(equipBrandGov.value);fillDistrict($event.value)\"\r\n                        styleClass=\"ui-column-filter\" class=\"filterDropdwon\"></p-dropdown>\r\n                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"healthDirectoriesList\"\r\n                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthDirectoryNameAr\"\r\n                        optionValue=\"healthDirectoryNameAr\" [showClear]=\"true\" #equipBrandGovar\r\n                        (onChange)=\"filterByGov(equipBrandGovar.value);fillDistrict($event.value)\"\r\n                        styleClass=\"ui-column-filter\">\r\n                    </p-dropdown>\r\n                </div>\r\n                <div class=\"colwidth\">\r\n                    <i class=\"pi pi-filter\"></i>&nbsp;<a [ngClass]=\"{'blue' : toggle3,'black': !toggle3}\"\r\n                        role=\"button\">{{'equipmentElements.City'|translate}}</a>\r\n                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"HealthDistrictsList\"\r\n                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthDistrictName\"\r\n                        optionValue=\"healthDistrictName\" [showClear]=\"true\" #equipCity\r\n                        (onChange)=\"filterByCity(equipCity.value); fillHospital($event.value)\"\r\n                        styleClass=\"ui-column-filter\" class=\"filterDropdwon\"></p-dropdown>\r\n                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"HealthDistrictsList\"\r\n                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthDistrictNameAr\"\r\n                        optionValue=\"healthDistrictNameAr\" [showClear]=\"true\" #equipCityAr\r\n                        (onChange)=\"filterByCity(equipCityAr.value); fillHospital($event.value)\"\r\n                        styleClass=\"ui-column-filter\">\r\n                    </p-dropdown>\r\n                </div>\r\n                <div class=\"colwidth\">\r\n                    <i class=\"pi pi-filter\"></i>&nbsp;<a [ngClass]=\"{'blue' : toggle4,'black': !toggle4}\"\r\n                        role=\"button\">{{'equipmentElements.Hospital'|translate}}</a>\r\n                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"healthCareUnits\"\r\n                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthCareUnitName\"\r\n                        optionValue=\"healthCareUnitName\" [showClear]=\"true\" #equiHos\r\n                        (onChange)=\"filterByHos(equiHos.value)\" styleClass=\"ui-column-filter\" class=\"filterDropdwon\">\r\n                    </p-dropdown>\r\n                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"healthCareUnits\"\r\n                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthCareUnitNameAr\"\r\n                        optionValue=\"healthCareUnitNameAr\" [showClear]=\"true\" #equipHosAr\r\n                        (onChange)=\"filterByHos(equipHosAr.value)\" styleClass=\"ui-column-filter\">\r\n                    </p-dropdown>\r\n                </div>\r\n                <div class=\"colwidth\">\r\n                    <i class=\"pi pi-filter\"></i>&nbsp;<a [ngClass]=\"{'blue' : toggle4,'black': !toggle4}\"\r\n                        role=\"button\">{{'equipmentElements.Supplier'|translate}}</a>\r\n                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"suppliersList\"\r\n                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"supplierName\"\r\n                        optionValue=\"supplierName\" [showClear]=\"true\" #equiSupplier\r\n                        (onChange)=\"filterBySupplier(equiSupplier.value)\" styleClass=\"ui-column-filter\"\r\n                        class=\"filterDropdwon\"></p-dropdown>\r\n                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"suppliersList\"\r\n                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"supplierNameAr\"\r\n                        optionValue=\"supplierNameAr\" [showClear]=\"true\" #equiSupplierAr\r\n                        (onChange)=\"filterBySupplier(equiSupplierAr.value)\" styleClass=\"ui-column-filter\">\r\n                    </p-dropdown>\r\n                </div>\r\n                <div class=\"colwidth\">\r\n                    <a [ngClass]=\"{'blue' : toggle4,'black': !toggle4}\"\r\n                        role=\"button\">{{'equipmentElements.PurchaseDate'|translate}}</a>\r\n                    <input type=\"date\" class=\"form-control\" id=\"installationDate\" name=\"installationDate\"\r\n                        #equiPurchaseDate placeholder=\"Installation Date\" \r\n                        (change)=\"filterByPurchaseDate(equiPurchaseDate.value)\">\r\n                        <i class=\"form-control-clear pi pi-times\" id=\"clcbtn\" (click)=\"checkValue()\"></i>\r\n                </div>\r\n                <div class=\"colwidth\">\r\n                    <span style=\"margin: 0px 20px;padding: 0px 10px;\">\r\n                        <select class=\"form-control\" #selectedLang (change)=\"switchLang(selectedLang.value)\">\r\n                            <option *ngFor=\"let language of translate.getLangs()\" [value]=\"language\"\r\n                                [selected]=\"language === translate.currentLang\">\r\n                                {{language}}\r\n                            </option>\r\n                        </select>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <hr style=\"height: 5px;\">\r\n            <!--------------------------Grouping && Exporting-------------------------------->\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-2\" *ngIf=\"translate.currentLang=='En'\">                  \r\n                    <select class=\"form-control\" #equipElement (change)=\"selectElement(equipElement.value)\"\r\n                     placeholder=\"{{'search.Search'|translate}}\" id=\"equipElementtt\">\r\n                        <option selected disabled *ngIf=\"this.selectedElement == null\">-- select --</option>\r\n                        <option *ngFor=\"let equipElement of equipmentElements\" [value]=\"equipElement\" >\r\n                            {{equipElement}}\r\n                        </option>                        \r\n                    </select>\r\n                  \r\n                </div>\r\n                <i class=\"form-control-clear pi pi-times\" id=\"clcgroupingbtn\" (click)=\"checkGroupingValue()\"></i>\r\n\r\n                <div class=\"col-lg-2\" *ngIf=\"translate.currentLang=='Ar'\">\r\n                    <select class=\"form-control\" #equipElement (change)=\"selectElement(equipElement.value)\">\r\n                        <option selected disabled>-- select --</option>\r\n                        <option *ngFor=\"let equipElement of equipmentElementsAr\" [value]=\"equipElement\">\r\n                            {{equipElement}}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                    <button type=\"button\" pButton pRipple icon=\"pi pi-file-pdf\" id=\"btnExport\"\r\n                        class=\"p-button-warning download\" pTooltip=\"PDF\" tooltipPosition=\"bottom\" (click)=\"exportPdf()\">\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <br><br>\r\n            <!---------------------------------------All Data------------------------------------------------------>\r\n            <div class=\"row tblstyle\" id=\"pdfTable\" #pdfTable *ngIf=\"selectedElement==null\">\r\n                <div class=\"col-md-12\">\r\n                    <p-table #dt [value]=\"equipments\" [rows]=\"10\" styleClass=\"p-datatable-responsive-demo\"\r\n                        [(selection)]=\"selectedProducts\" [rowHover]=\"true\" dataKey=\"id\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        [showCurrentPageReport]=\"true\"\r\n                        [globalFilterFields]=\"['equipmentName','department','manufacturer','supplier']\" class=\"rowtbl\"\r\n                        *ngIf=\"selectedElement==null\">\r\n                        <ng-template pTemplate=\"header\">\r\n                            <tr style=\"font-size: 18px;\">\r\n                                <th pSortableColumn=\"equipmentName\" style=\"width:7%;\"><strong>{{'equipment.equimentName' | translate}}</strong>\r\n                                    <p-sortIcon field=\"equipmentName\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"manufacturerName\" style=\"width:10%;\"><strong>{{'equipment.Manufacturer' | translate}}</strong>\r\n                                    <p-sortIcon field=\"manufacturerName\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"healthCareUnitName\" style=\"width:10%;\"><strong>{{'equipment.governorate' | translate}}</strong>\r\n                                    <p-sortIcon field=\"healthCareUnitName\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"healthDistrictName\" style=\"width:12%;\"><strong>{{'equipment.district' |translate}}</strong>\r\n                                    <p-sortIcon field=\"healthDistrictName\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"healthCareUnitName\"><strong>{{'equipment.healthCareUnit' | translate}}</strong>\r\n                                    <p-sortIcon field=\"healthCareUnitName\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"supplierName\"><strong>{{'equipment.Supplier' | translate}}</strong>\r\n                                    <p-sortIcon field=\"supplierName\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"purchaseDate\" style=\"width:12%;\"><strong>{{'equipment.PurchaseDate' | translate}}</strong>\r\n                                    <p-sortIcon field=\"purchaseDate\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"organizationName\"><strong>{{'equipment.organization' | translate}}</strong>\r\n                                    <p-sortIcon field=\"organizationName\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"body\" let-eq>\r\n                            <tr style=\"font-size: 17px;\">\r\n                                <td><strong>{{translate.currentLang == \"En\" ?\r\n                                        eq.equipmentName:eq.equipmentNameAr}}</strong></td>\r\n                                <td><strong>{{translate.currentLang == \"En\" ?\r\n                                        eq.manufacturerName:eq.manufacturerNameAr}}</strong></td>\r\n                                <td><strong>{{translate.currentLang == \"En\" ?\r\n                                        eq.healthDirectoryName:eq.healthDirectoryNameAr}}</strong>\r\n                                </td>\r\n                                <td><strong>{{translate.currentLang == \"En\" ?\r\n                                        eq.healthDistrictName:eq.healthDistrictNameAr}}</strong>\r\n                                </td>\r\n                                <td><strong>{{translate.currentLang == \"En\" ?\r\n                                        eq.healthCareUnitName:eq.healthCareUnitNameAr}}</strong>\r\n                                </td>\r\n                                <td><strong>{{translate.currentLang == \"En\" ?\r\n                                        eq.supplierName:eq.supplierNameAr}}</strong>\r\n                                </td>\r\n                                <td><strong>{{eq.purchaseDate | date:'shortDate'}}</strong>\r\n                                </td>\r\n                                <td><strong>{{translate.currentLang == \"En\" ?\r\n                                        eq.organizationName:eq.organizationNameAr}}</strong>\r\n                                </td>\r\n                            </tr>\r\n                        </ng-template>\r\n                    </p-table>\r\n                </div>\r\n            </div>\r\n            <!---------------------------------------Grouping by brand--------------------------------------------->\r\n            <div class=\"row tblstyle\" id=\"pdfTable\" #pdfTable *ngIf=\"selectedElement=='Brand' || selectedElement=='الصانع'\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"row\" *ngFor=\"let item of lstBrandEquipment\">\r\n                        <div class=\"col-lg-12\" *ngIf=\"item.listEquipment.length>0\">\r\n                            <br><br>\r\n                            <a data-toggle=\"collapse\"\r\n                                class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle groupLabel\"\r\n                                href=\"#{{item.id}}\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\"\r\n                                *ngIf=\"translate.currentLang=='En'\">{{item.brandName}}</a>\r\n                            <a data-toggle=\"collapse\"\r\n                                class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle groupLabel\"\r\n                                href=\"#{{item.id}}\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\"\r\n                                *ngIf=\"translate.currentLang=='Ar'\">{{item.brandNameAr}}</a>\r\n                            <div id=\"{{item.id}}\" class=\"panel-collapse collapse\" style=\"width: 100%;\">\r\n                                <p-table #dt [value]=\"item.listEquipment\" [rows]=\"10\"\r\n                                    styleClass=\"p-datatable-responsive-demo\" [(selection)]=\"selectedProducts\"\r\n                                    [rowHover]=\"true\" dataKey=\"id\"\r\n                                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                                    [showCurrentPageReport]=\"true\"\r\n                                    [globalFilterFields]=\"['equipmentName','department','manufacturer','supplier']\"\r\n                                    class=\"rowtbl\" *ngIf=\"selectedElement!=null\">\r\n                                    <ng-template pTemplate=\"header\">\r\n                                        <tr style=\"font-size: 18px;\">\r\n                                            <th><strong>{{'equipment.equimentName' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.Manufacturer' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.governorate' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.district' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.healthCareUnit' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.Supplier' | translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.PurchaseDate' | translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.organization' | translate}}</strong></th>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate=\"body\" let-eq>\r\n                                        <tr style=\"font-size: 17px;\">\r\n                                            <td><strong>{{translate.currentLang == \"En\" ? eq.equipmentName:eq.equipmentNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.manufacturerName:eq.manufacturerNameAr}}</strong></td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.healthDirectoryName:eq.healthDirectoryNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.healthDistrictName:eq.healthDistrictNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.healthCareUnitName:eq.healthCareUnitNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.supplierName:eq.supplierNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{eq.purchaseDate | date:'shortDate'}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.organizationName:eq.organizationNameAr}}</strong>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                </p-table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <!-------------------------------------Grouping by hospital-------------------------------------------->\r\n            <div class=\"row tblstyle\" id=\"pdfTable\" #pdfTable *ngIf=\"selectedElement=='Hospital' || selectedElement=='الوحده الصحيه'\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"row\" *ngFor=\"let item of EquipmentHospitalList\">\r\n                        <div class=\"col-lg-12\" *ngIf=\"item.listEquipment.length>0\">\r\n                            <br><br>\r\n                            <a data-toggle=\"collapse\"\r\n                                class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle groupLabel\"\r\n                                href=\"#{{item.id}}\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\"\r\n                                *ngIf=\"translate.currentLang=='En'\">{{item.name}}</a>\r\n                            <a data-toggle=\"collapse\"\r\n                                class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle groupLabel\"\r\n                                href=\"#{{item.id}}\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\"\r\n                                *ngIf=\"translate.currentLang=='Ar'\">{{item.nameAr}}</a>\r\n                            <div id=\"{{item.id}}\" class=\"panel-collapse collapse\" style=\"width: 100%;\">\r\n                                <p-table #dt [value]=\"item.listEquipment\" [rows]=\"10\"\r\n                                    styleClass=\"p-datatable-responsive-demo\" [(selection)]=\"selectedProducts\"\r\n                                    [rowHover]=\"true\" dataKey=\"id\"\r\n                                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                                    [showCurrentPageReport]=\"true\"\r\n                                    [globalFilterFields]=\"['equipmentName','department','manufacturer','supplier']\"\r\n                                    class=\"rowtbl\" *ngIf=\"selectedElement!=null\">\r\n                                    <ng-template pTemplate=\"header\">\r\n                                        <tr style=\"font-size: 18px;\">\r\n                                            <th><strong>{{'equipment.equimentName' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.Manufacturer' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.governorate' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.district' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.healthCareUnit' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.Supplier' | translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.PurchaseDate' | translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.organization' | translate}}</strong></th>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate=\"body\" let-eq>\r\n                                        <tr style=\"font-size: 17px;\">\r\n                                            <td><strong>{{translate.currentLang == \"En\" ? eq.equipmentName:eq.equipmentNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.manufacturerName:eq.manufacturerNameAr}}</strong></td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.healthDirectoryName:eq.healthDirectoryNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.healthDistrictName:eq.healthDistrictNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.healthCareUnitName:eq.healthCareUnitNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.supplierName:eq.supplierNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{eq.purchaseDate| date:'shortDate'}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.organizationName:eq.organizationNameAr}}</strong>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                </p-table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <!--------------------------------------Groubing By Governorate----------------------------------------->\r\n            <div class=\"row tblstyle\" id=\"pdfTable\" #pdfTable *ngIf=\"selectedElement=='Governorate' || selectedElement=='المحافظه'\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"row\" *ngFor=\"let item of EquipmentGovList\">\r\n                        <div class=\"col-lg-12\" *ngIf=\"item.listEquipment.length>0\">\r\n                            <br><br>\r\n                            <a data-toggle=\"collapse\"\r\n                                class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle groupLabel\"\r\n                                href=\"#{{item.id}}\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\"\r\n                                *ngIf=\"translate.currentLang=='En'\">{{item.name}}</a>\r\n                            <a data-toggle=\"collapse\"\r\n                                class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle groupLabel\"\r\n                                href=\"#{{item.id}}\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\"\r\n                                *ngIf=\"translate.currentLang=='Ar'\">{{item.nameAr}}</a>\r\n                            <div id=\"{{item.id}}\" class=\"panel-collapse collapse\" style=\"width: 100%;\">\r\n                                <p-table #dt [value]=\"item.listEquipment\" [rows]=\"10\"\r\n                                    styleClass=\"p-datatable-responsive-demo\" [(selection)]=\"selectedProducts\"\r\n                                    [rowHover]=\"true\" dataKey=\"id\"\r\n                                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                                    [showCurrentPageReport]=\"true\"\r\n                                    [globalFilterFields]=\"['equipmentName','department','manufacturer','supplier']\"\r\n                                    class=\"rowtbl\" *ngIf=\"selectedElement!=null\">\r\n                                    <ng-template pTemplate=\"header\">\r\n                                        <tr style=\"font-size: 18px;\">\r\n                                            <th><strong>{{'equipment.equimentName' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.Manufacturer' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.governorate' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.district' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.healthCareUnit' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.Supplier' | translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.PurchaseDate' | translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.organization' | translate}}</strong></th>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate=\"body\" let-eq>\r\n                                        <tr style=\"font-size: 17px;\">\r\n                                            <td><strong>{{translate.currentLang == \"En\" ? eq.equipmentName:eq.equipmentNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.manufacturerName:eq.manufacturerNameAr}}</strong></td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.healthDirectoryName:eq.healthDirectoryNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.healthDistrictName:eq.healthDistrictNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.healthCareUnitName:eq.healthCareUnitNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.supplierName:eq.supplierNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{eq.purchaseDate| date:'shortDate'}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.organizationName:eq.organizationNameAr}}</strong>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                </p-table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <!--------------------------------------Groubing By City----------------------------------------->\r\n            <div class=\"row tblstyle\" id=\"pdfTable\" #pdfTable *ngIf=\"selectedElement=='District' || selectedElement=='المدينه' \">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"row\" *ngFor=\"let item of EquipmentCityList\">\r\n                        <div class=\"col-lg-12\" *ngIf=\"item.listEquipment.length>0\">\r\n                            <br><br>\r\n                            <a data-toggle=\"collapse\"\r\n                                class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle groupLabel\"\r\n                                href=\"#{{item.id}}\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\"\r\n                                *ngIf=\"translate.currentLang=='En'\">{{item.name}}</a>\r\n                            <a data-toggle=\"collapse\"\r\n                                class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle groupLabel\"\r\n                                href=\"#{{item.id}}\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\"\r\n                                *ngIf=\"translate.currentLang=='Ar'\">{{item.nameAr}}</a>\r\n                            <div id=\"{{item.id}}\" class=\"panel-collapse collapse\" style=\"width: 100%;\">\r\n                                <p-table #dt [value]=\"item.listEquipment\" [rows]=\"10\"\r\n                                    styleClass=\"p-datatable-responsive-demo\" [(selection)]=\"selectedProducts\"\r\n                                    [rowHover]=\"true\" dataKey=\"id\"\r\n                                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                                    [showCurrentPageReport]=\"true\"\r\n                                    [globalFilterFields]=\"['equipmentName','department','manufacturer','supplier']\"\r\n                                    class=\"rowtbl\" *ngIf=\"selectedElement!=null\">\r\n                                    <ng-template pTemplate=\"header\">\r\n                                        <tr style=\"font-size: 18px;\">\r\n                                            <th><strong>{{'equipment.equimentName' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.Manufacturer' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.governorate' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.district' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.healthCareUnit' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.Supplier' | translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.PurchaseDate' | translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.organization' | translate}}</strong></th>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate=\"body\" let-eq>\r\n                                        <tr style=\"font-size: 17px;\">\r\n                                            <td><strong>{{translate.currentLang == \"En\" ? eq.equipmentName:eq.equipmentNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.manufacturerName:eq.manufacturerNameAr}}</strong></td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.healthDirectoryName:eq.healthDirectoryNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.healthDistrictName:eq.healthDistrictNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.healthCareUnitName:eq.healthCareUnitNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.supplierName:eq.supplierNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{eq.purchaseDate| date:'shortDate'}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.organizationName:eq.organizationNameAr}}</strong>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                </p-table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <!--------------------------------------Groubing By Organization----------------------------------------->\r\n            <div class=\"row tblstyle\" id=\"pdfTable\" #pdfTable *ngIf=\"selectedElement=='Organization' || selectedElement=='المنظمه'\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"row\" *ngFor=\"let item of EquipmentOrgList\">\r\n                        <div class=\"col-lg-12\" *ngIf=\"item.listEquipment.length>0\">\r\n                            <br><br>\r\n                            <a data-toggle=\"collapse\"\r\n                                class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle groupLabel\"\r\n                                href=\"#{{item.id}}\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\"\r\n                                *ngIf=\"translate.currentLang=='En'\">{{item.name}}</a>\r\n                            <a data-toggle=\"collapse\"\r\n                                class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle groupLabel\"\r\n                                href=\"#{{item.id}}\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\"\r\n                                *ngIf=\"translate.currentLang=='Ar'\">{{item.nameAr}}</a>\r\n                            <div id=\"{{item.id}}\" class=\"panel-collapse collapse\" style=\"width: 100%;\">\r\n                                <p-table #dt [value]=\"item.listEquipment\" [rows]=\"10\"\r\n                                    styleClass=\"p-datatable-responsive-demo\" [(selection)]=\"selectedProducts\"\r\n                                    [rowHover]=\"true\" dataKey=\"id\"\r\n                                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                                    [showCurrentPageReport]=\"true\"\r\n                                    [globalFilterFields]=\"['equipmentName','department','manufacturer','supplier']\"\r\n                                    class=\"rowtbl\" *ngIf=\"selectedElement!=null\">\r\n                                    <ng-template pTemplate=\"header\">\r\n                                        <tr style=\"font-size: 18px;\">\r\n                                            <th><strong>{{'equipment.equimentName' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.Manufacturer' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.governorate' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.district' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.healthCareUnit' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.Supplier' | translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.PurchaseDate' | translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.organization' | translate}}</strong></th>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate=\"body\" let-eq>\r\n                                        <tr style=\"font-size: 17px;\">\r\n                                            <td><strong>{{translate.currentLang == \"En\" ? eq.equipmentName:eq.equipmentNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.manufacturerName:eq.manufacturerNameAr}}</strong></td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.healthDirectoryName:eq.healthDirectoryNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.healthDistrictName:eq.healthDistrictNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.healthCareUnitName:eq.healthCareUnitNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.supplierName:eq.supplierNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{eq.purchaseDate| date:'shortDate'}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.organizationName:eq.organizationNameAr}}</strong>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                </p-table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <!--------------------------------------Groubing By Supplier----------------------------------------->\r\n            <div class=\"row tblstyle\" id=\"pdfTable\" #pdfTable *ngIf=\"selectedElement=='Supplier' ||selectedElement=='المورد'\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"row\" *ngFor=\"let item of EquipmentSupplierList\">\r\n                        <div class=\"col-lg-12\" *ngIf=\"item.listEquipment.length>0\">\r\n                            <br><br>\r\n                            <a data-toggle=\"collapse\"\r\n                                class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle groupLabel\"\r\n                                href=\"#{{item.id}}\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\"\r\n                                *ngIf=\"translate.currentLang=='En'\">{{item.name}}</a>\r\n                            <a data-toggle=\"collapse\"\r\n                                class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle groupLabel\"\r\n                                href=\"#{{item.id}}\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\"\r\n                                *ngIf=\"translate.currentLang=='Ar'\">{{item.nameAr}}</a>\r\n                            <div id=\"{{item.id}}\" class=\"panel-collapse collapse\" style=\"width: 100%;\">\r\n                                <p-table #dt [value]=\"item.listEquipment\" [rows]=\"10\"\r\n                                    styleClass=\"p-datatable-responsive-demo\" [(selection)]=\"selectedProducts\"\r\n                                    [rowHover]=\"true\" dataKey=\"id\"\r\n                                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                                    [showCurrentPageReport]=\"true\"\r\n                                    [globalFilterFields]=\"['equipmentName','department','manufacturer','supplier']\"\r\n                                    class=\"rowtbl\" *ngIf=\"selectedElement!=null\">\r\n                                    <ng-template pTemplate=\"header\">\r\n                                        <tr style=\"font-size: 18px;\">\r\n                                            <th><strong>{{'equipment.equimentName' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.Manufacturer' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.governorate' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.district' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.healthCareUnit' |translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.Supplier' | translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.PurchaseDate' | translate}}</strong></th>\r\n                                            <th><strong>{{'equipment.organization' | translate}}</strong></th>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate=\"body\" let-eq>\r\n                                        <tr style=\"font-size: 17px;\">\r\n                                            <td><strong>{{translate.currentLang == \"En\" ? eq.equipmentName:eq.equipmentNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.manufacturerName:eq.manufacturerNameAr}}</strong></td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.healthDirectoryName:eq.healthDirectoryNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.healthDistrictName:eq.healthDistrictNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.healthCareUnitName:eq.healthCareUnitNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.supplierName:eq.supplierNameAr}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{eq.purchaseDate| date:'shortDate'}}</strong>\r\n                                            </td>\r\n                                            <td><strong>{{translate.currentLang == \"En\" ?\r\n                                                    eq.organizationName:eq.organizationNameAr}}</strong>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                </p-table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BrandVM, CityVM, Equipment, filterDto, GovernorateVM, HospitalVM, OrganizationVM, SupplierVM } from 'src/app/Shared/Models/Equipment';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\nimport { Manufacturer } from 'src/app/Shared/Models/Manufacturer';\r\nimport { HealthCareUnit } from 'src/app/Shared/Models/HealthCareUnit';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { Supplier } from 'src/app/Shared/Models/Supplier';\r\nimport { HealthDistrict } from 'src/app/Shared/Models/HealthDistrict';\r\nimport { healthDirectory } from 'src/app/Shared/Models/healthDirectory';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MasterEquipment } from 'src/app/Shared/Models/MasterEquipment';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { MasterequipmentService } from 'src/app/Shared/services/masterequipment.service';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport './../../../assets/fonts/Cairo-Regular-normal.js';\r\nimport { DatePipe } from '@angular/common';\r\nimport { element } from 'protractor';\r\nimport { relative } from 'path';\r\n\r\n@Component({\r\n  selector: 'app-pd-fcreate',\r\n  templateUrl: './pd-fcreate.component.html',\r\n  styleUrls: ['./pd-fcreate.component.css']\r\n})\r\nexport class PdFCreateComponent implements OnInit {\r\n\r\n  public rightAlign: object = {\r\n    'text-align': 'right'\r\n  };\r\n\r\n  @ViewChild('header') header: ElementRef;\r\n  @ViewChild('pdfTable', { static: false }) pdfTable: ElementRef;\r\n  equipments: Equipment[];\r\n  equipmentObj: Equipment;\r\n  healthCareUnitsList: HealthCareUnit[];\r\n  healthCareUnits: HealthCareUnit[];\r\n  EquipmentHospitalList: HospitalVM[];\r\n  filteredObj: filterDto;\r\n  EquipmentGovList: GovernorateVM[];\r\n  EquipmentCityList: CityVM[];\r\n  EquipmentOrgList: OrganizationVM[];\r\n  EquipmentSupplierList: SupplierVM[];\r\n  CareUnits: HealthCareUnit[];\r\n  manufacturerList: Manufacturer[];\r\n  suppliersList: Supplier[];\r\n  healthDirectoriesList: healthDirectory[];\r\n  HealthDistrictsList: HealthDistrict[];\r\n  districtsList: HealthDistrict[];\r\n  currentUser: User;\r\n  districts: Equipment[];\r\n  manufacturerList2: Manufacturer[];\r\n  Lang: any;\r\n  href: any;\r\n  imgUrl: string;\r\n  equipmentElements: any[];\r\n  equipmentElementsAr: any;\r\n  masterEquipmentList: MasterEquipment[];\r\n  selectedElement: string;\r\n  lstBrandEquipment: BrandVM[];\r\n  newRows: string[];\r\n  temp: string[];\r\n  errorMsg: string;\r\n  toggle: boolean = false;\r\n  toggle1: boolean = false;\r\n  toggle2: boolean = false;\r\n  toggle3: boolean = false;\r\n  toggle4: boolean = false;\r\n  newLang: any;\r\n  newEquipmentList: Equipment[];\r\n  constructor(private equipmentService: EquipmentService,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    public translate: TranslateService,\r\n    private masterEquipmentService: MasterequipmentService,\r\n    private userService: UserService, private datepipe: DatePipe) {\r\n    this.currentUser = this.userService.currentUserValue;\r\n    translate.addLangs(['En', 'Ar']);\r\n    localStorage.setItem(\"lang\", \"En\");\r\n    const browserLang = translate.getBrowserLang();\r\n    translate.use(browserLang.match(/En|Ar/) ? browserLang : 'En');\r\n    translate.setDefaultLang('En');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.sharedService.getAllunits().subscribe(data => { this.healthCareUnitsList = data });\r\n    this.sharedService.getAllmanufacturer().subscribe(data => { this.manufacturerList = data });\r\n    this.sharedService.getAllSuppliers().subscribe(data => { this.suppliersList = data });\r\n    this.sharedService.getAllHealthDirectories().subscribe(data => { this.healthDirectoriesList = data });\r\n    this.sharedService.getAllHealthDistrict().subscribe(data => { this.districtsList = data });\r\n    this.getAll();\r\n    this.equipmentElements = [\"Brand\", \"Governorate\", \"District\", \"Hospital\", \"Organization\", \"Supplier\"];\r\n    this.equipmentElementsAr = [\"الصانع\", \"المحافظه\", \"المدينه\", \"الوحده الصحيه\", \"المنظمه\", \"المورد\"];\r\n\r\n    this.equipmentObj = {\r\n      id: 0,\r\n      equipmentDescription: '',\r\n      equipmentDescriptionAr: '',\r\n      equipmentName: \"\",\r\n      equipmentNameAr: \"\",\r\n      installationDate: new Date(),\r\n      purchaseDate: new Date(),\r\n      priorityId: 0,\r\n      equipmentCategoryId: 0,\r\n      equipmentSubCategoryId: 0,\r\n      equipmentStatuSId: 0,\r\n      statusName: '',\r\n      statusNameAr: '',\r\n      manufacturerId: 0,\r\n      originId: 0,\r\n      healthCareUnitId: 0,\r\n      healthCareUnit: '',\r\n      healthCareUnitName: '',\r\n      healthCareUnitNameAr: '',\r\n      supplierId: 0,\r\n      supplierName: '',\r\n      supplierNameAr: '',\r\n      expectedLifeTime: 0,\r\n      length: 0,\r\n      height: 0,\r\n      weight: 0,\r\n      departmentId: 0,\r\n      departmentName: '',\r\n      departmentNameAr: '',\r\n      room: 0,\r\n      floor: 0,\r\n      remarks: '',\r\n      price: 0,\r\n      modelNumber: '',\r\n      versionNumber: '',\r\n      serialNumber: '',\r\n      internalCode: '',\r\n      upaCode: '',\r\n      barcode: '',\r\n      color: '',\r\n      colorAr: '',\r\n      manufacturerName: '',\r\n      manufacturerNameAr: '',\r\n      healthDirectoryId: 0,\r\n      healthDirectoryName: '',\r\n      healthDirectoryNameAr: '',\r\n      healthDistrictId: 0,\r\n      healthDistrictName: '',\r\n      healthDistrictNameAr: '',\r\n      employeeIDs: [],\r\n      AttachmentIDs: [],\r\n      masterEquipmentId: 0,\r\n      qrImgPath: '',\r\n      createdAt: new Date(),\r\n      organizationName: '',\r\n      organizationNameAr: '',\r\n      time:'',\r\n      recallNumber:0,\r\n      recallDate:new Date(),\r\n      organizationId:0,\r\n   \r\n      contractRequestId:0,\r\n      organizationrequestid:0,\r\n      contractid:0\r\n    }\r\n\r\n    this.filteredObj = {\r\n      id: 0,\r\n      name: '',\r\n      brandName: '',\r\n      cityName: '',\r\n      hosName: '',\r\n      govName: '',\r\n      supplierName: '',\r\n      purchaseDate: null\r\n    }\r\n    document.getElementById('clcbtn').style.display = \"none\";\r\n    document.getElementById(\"clcgroupingbtn\").style.display = \"none\";\r\n  }\r\n\r\n  getAll() {\r\n    this.equipmentService.getAllEquipments().subscribe(data => { this.equipments = data, this.newEquipmentList = data });\r\n\r\n  }\r\n  fillDistrict(name: string) {\r\n    this.sharedService.getDirectoryIdByname(name).subscribe(data => {\r\n      this.sharedService.getAllHealthDistricts(data).subscribe(data => {\r\n        this.HealthDistrictsList = data\r\n      });\r\n    });\r\n\r\n  }\r\n  fillHospital(name: string) {\r\n    this.sharedService.GetHealthDistrictsIdbyName(name).subscribe(data => {\r\n      this.sharedService.getAllunitsByDistrictId(data).subscribe(data => {\r\n        this.healthCareUnits = data;\r\n      })\r\n    })\r\n  }\r\n\r\n  getBase64ImageFromURL(url) {\r\n    return new Promise((resolve, reject) => {\r\n      var img = new Image();\r\n      img.setAttribute(\"crossOrigin\", \"anonymous\");\r\n\r\n      img.onload = () => {\r\n        var canvas = document.createElement(\"canvas\");\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n\r\n        var ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        var dataURL = canvas.toDataURL(\"image/png\");\r\n\r\n        resolve(dataURL);\r\n      };\r\n\r\n      img.onerror = error => {\r\n        reject(error);\r\n      };\r\n\r\n      img.src = url;\r\n    });\r\n  }\r\n\r\n\r\n  exportPdf() {\r\n    //var tble = document.getElementById('pdfTable')\r\n    this.equipments = []\r\n    let PDF = new jsPDF('p', 'mm', [297, 250]);\r\n    PDF.addFont(\"../assets/fonts/ARIALUNI.TTF\", \"ARIALUNI\", \"normal\");\r\n    PDF.setFont('ARIALUNI');\r\n    var img = new Image();\r\n    img.src = '../assets/images/biologo.png';\r\n    if (this.translate.currentLang == \"En\") {\r\n      PDF.addImage(img, 'png', 10, 10, 23, 23)\r\n      PDF.text(\"Equipments\", 50, 25);\r\n    }\r\n    else if (this.translate.currentLang == \"Ar\") {\r\n      PDF.addImage(img, 'png', 210, 10, 23, 23)\r\n      PDF.text(\"الآلات\", 180, 25);\r\n    }\r\n    var y = 0;\r\n    var rows = [];\r\n    this.newRows = [];\r\n    if (this.selectedElement === \"Brand\" || this.selectedElement === \"الصانع\") {\r\n      this.lstBrandEquipment.forEach(elem => {\r\n        if (elem.listEquipment.length > 0) {\r\n          if (this.translate.currentLang == \"En\") {\r\n            elem.listEquipment.forEach(equip => {\r\n              this.temp = [equip.equipmentName, equip.manufacturerName, equip.healthDirectoryName, equip.healthDistrictName, equip.healthCareUnitName, equip.supplierName,\r\n              this.datepipe.transform(equip.purchaseDate, 'yyyy-MM-dd'), equip.organizationName];\r\n              rows.push(this.temp);\r\n            });\r\n            (PDF as any).autoTable({\r\n              head: [[{ content: `Brand : ${elem.brandName}`, colSpan: 8, styles: { fillColor: [255, 255, 255], textColor: [0, 0, 0] }, font: 'ARIALUNI', }],\r\n              [\"Name\", \"Brand\", \"Governorate\", \"District\", \"Hospital\", \"Supplier\", \"Purchase Date\", \"Organization\"]],\r\n              startY: y += 40,\r\n              body: rows,\r\n              styles: { font: 'ARIALUNI' },\r\n            });\r\n            rows = [];\r\n          }\r\n          else if (this.translate.currentLang == \"Ar\") {\r\n            elem.listEquipment.forEach(equip => {\r\n              this.temp = [equip.organizationName, this.datepipe.transform(equip.purchaseDate, 'yyyy-MM-dd'), equip.supplierNameAr, equip.healthCareUnitNameAr, equip.healthDistrictNameAr, equip.healthDirectoryNameAr, equip.manufacturerNameAr, equip.equipmentNameAr];\r\n              rows.push(this.temp);\r\n            });\r\n            (PDF as any).autoTable({\r\n              head: [[{ content: `الصانع : ${elem.brandNameAr}`, colSpan: 8, styles: { fillColor: [255, 255, 255], textColor: [0, 0, 0], halign: 'right' }, font: 'ARIALUNI', }],\r\n              [\"المنظمه\", \"تاريخ الشراء\", \"الصانع\", \"الوحدهالصحيه\", \"المدينه\", \"المحافظه\", \"الصانع\", \"الاسم\"]],\r\n              startY: y += 40,\r\n              body: rows,\r\n              styles: { font: 'ARIALUNI' }\r\n            });\r\n            rows = [];\r\n          }\r\n\r\n        }\r\n      });\r\n      PDF.save(\"table.pdf\");\r\n    }\r\n\r\n    else if (this.selectedElement === \"Hospital\" || this.selectedElement === \"الوحده الصحيه\") {\r\n      this.EquipmentHospitalList.forEach(elem => {\r\n        if (elem.listEquipment.length > 0) {\r\n          if (this.translate.currentLang == \"En\") {\r\n            elem.listEquipment.forEach(equip => {\r\n              this.temp = [equip.equipmentName, equip.manufacturerName, equip.healthDirectoryName, equip.healthDistrictName, equip.healthCareUnitName, equip.supplierName,\r\n              this.datepipe.transform(equip.purchaseDate, 'yyyy-MM-dd'), equip.organizationName];\r\n              rows.push(this.temp);\r\n            });\r\n            (PDF as any).autoTable({\r\n              head: [[{ content: `Hospital : ${elem.name}`, colSpan: 8, styles: { fillColor: [255, 255, 255], textColor: [0, 0, 0] }, font: 'ARIALUNI', }],\r\n              [\"Name\", \"Brand\", \"Governorate\", \"District\", \"Hospital\", \"Supplier\", \"Purchase Date\", \"Organization\"]],\r\n              startY: y += 40,\r\n              body: rows,\r\n              styles: { font: 'ARIALUNI' }\r\n            });\r\n            rows = [];\r\n          }\r\n          else if (this.translate.currentLang == \"Ar\") {\r\n            elem.listEquipment.forEach(equip => {\r\n              this.temp = [equip.organizationNameAr, this.datepipe.transform(equip.purchaseDate, 'yyyy-MM-dd'), equip.supplierNameAr,\r\n              equip.healthCareUnitNameAr, equip.healthDistrictNameAr, equip.healthDirectoryNameAr, equip.manufacturerNameAr, equip.equipmentNameAr];\r\n              rows.push(this.temp);\r\n            });\r\n            (PDF as any).autoTable({\r\n              head: [[{ content: `الوحده الصحيه : ${elem.nameAr}`, colSpan: 8, styles: { fillColor: [255, 255, 255], textColor: [0, 0, 0], halign: 'right' }, font: 'ARIALUNI', }],\r\n              [\"المنظمه\", \"تاريخ الشراء\", \"الصانع\", \"الوحده الصحيه\", \"المدينه\", \"المحافظه\", \"الصانع\", \"الاسم\"]],\r\n              startY: y += 40,\r\n              body: rows,\r\n              styles: { font: 'ARIALUNI' }\r\n            });\r\n            rows = [];\r\n          }\r\n        }\r\n      });\r\n      PDF.save(\"table.pdf\");\r\n    }\r\n\r\n    else if (this.selectedElement === \"Governorate\" || this.selectedElement === \"المحافظه\") {\r\n      this.EquipmentGovList.forEach(elem => {\r\n        if (elem.listEquipment.length > 0) {\r\n          if (this.translate.currentLang == \"En\") {\r\n            elem.listEquipment.forEach(equip => {\r\n              this.temp = [equip.equipmentName, equip.manufacturerName, equip.healthDirectoryName, equip.healthDistrictName, equip.healthCareUnitName, equip.supplierName,\r\n              this.datepipe.transform(equip.purchaseDate, 'yyyy-MM-dd'), equip.organizationName];\r\n              rows.push(this.temp);\r\n            });\r\n            (PDF as any).autoTable({\r\n              head: [[{ content: `Governorate : ${elem.name}`, colSpan: 8, styles: { fillColor: [255, 255, 255], textColor: [0, 0, 0] }, font: 'ARIALUNI', }],\r\n              [\"Name\", \"Brand\", \"Governorate\", \"District\", \"Hospital\", \"Supplier\", \"Purchase Date\", \"Organization\"]],\r\n              startY: y += 40,\r\n              body: rows,\r\n              styles: { font: 'ARIALUNI' }\r\n            });\r\n            rows = [];\r\n          }\r\n          else if (this.translate.currentLang == \"Ar\") {\r\n            elem.listEquipment.forEach(equip => {\r\n              this.temp = [equip.organizationName, this.datepipe.transform(equip.purchaseDate, 'yyyy-MM-dd'), equip.supplierNameAr,\r\n              equip.healthCareUnitNameAr, equip.healthDistrictNameAr, equip.healthDirectoryNameAr, equip.manufacturerNameAr, equip.equipmentNameAr];\r\n              rows.push(this.temp);\r\n            });\r\n            (PDF as any).autoTable({\r\n              head: [[{ content: `المحافظه : ${elem.nameAr}`, colSpan: 8, styles: { fillColor: [255, 255, 255], textColor: [0, 0, 0], halign: 'right' }, font: 'ARIALUNI', }],\r\n              [\"المنظمه\", \"تاريخ الشراء\", \"الصانع\", \"الوحده الصحيه\", \"المدينه\", \"المحافظه\", \"الصانع\", \"الاسم\"]],\r\n              startY: y += 40,\r\n              body: rows,\r\n              styles: { font: 'ARIALUNI' }\r\n            });\r\n            rows = [];\r\n          }\r\n        }\r\n      });\r\n      PDF.save(\"table.pdf\");\r\n    }\r\n    else if (this.selectedElement === \"District\" || this.selectedElement === \"المدينه\") {\r\n      this.EquipmentCityList.forEach(elem => {\r\n        if (elem.listEquipment.length > 0) {\r\n          if (this.translate.currentLang == \"En\") {\r\n            elem.listEquipment.forEach(equip => {\r\n              this.temp = [equip.equipmentName, equip.manufacturerName, equip.healthDirectoryName, equip.healthDistrictName, equip.healthCareUnitName, equip.supplierName,\r\n              this.datepipe.transform(equip.purchaseDate, 'yyyy-MM-dd'), equip.organizationName];\r\n              rows.push(this.temp);\r\n            });\r\n            (PDF as any).autoTable({\r\n              head: [[{ content: `District : ${elem.name}`, colSpan: 8, styles: { fillColor: [255, 255, 255], textColor: [0, 0, 0] }, font: 'ARIALUNI', }],\r\n              [\"Name\", \"Brand\", \"Governorate\", \"District\", \"Hospital\", \"Supplier\", \"Purchase Date\", \"Organization\"]],\r\n              startY: y += 40,\r\n              body: rows,\r\n              styles: { font: 'ARIALUNI' }\r\n            });\r\n            rows = [];\r\n          }\r\n          else if (this.translate.currentLang == \"Ar\") {\r\n            elem.listEquipment.forEach(equip => {\r\n              this.temp = [equip.organizationName, this.datepipe.transform(equip.purchaseDate, 'yyyy-MM-dd'), equip.supplierNameAr,\r\n              equip.healthCareUnitNameAr, equip.healthDistrictNameAr, equip.healthDirectoryNameAr, equip.manufacturerNameAr, equip.equipmentNameAr];\r\n              rows.push(this.temp);\r\n            });\r\n            (PDF as any).autoTable({\r\n              head: [[{ content: `المدينه : ${elem.nameAr}`, colSpan: 8, styles: { fillColor: [255, 255, 255], textColor: [0, 0, 0], halign: 'right' }, font: 'ARIALUNI', }],\r\n              [\"المنظمه\", \"تاريخ الشراء\", \"الصانع\", \"الوحده الصحيه\", \"المدينه\", \"المحافظه\", \"الصانع\", \"الاسم\"]],\r\n              startY: y += 40,\r\n              body: rows,\r\n              styles: { font: 'ARIALUNI' }\r\n            });\r\n            rows = [];\r\n          }\r\n        }\r\n      });\r\n      PDF.save(\"table.pdf\");\r\n    }\r\n    else if (this.selectedElement === \"Organization\" || this.selectedElement === \"المنظمه\") {\r\n      this.EquipmentOrgList.forEach(elem => {\r\n        if (elem.listEquipment.length > 0) {\r\n          if (this.translate.currentLang == \"En\") {\r\n            elem.listEquipment.forEach(equip => {\r\n              this.temp = [equip.equipmentName, equip.manufacturerName, equip.healthDirectoryName, equip.healthDistrictName, equip.healthCareUnitName, equip.supplierName,\r\n              this.datepipe.transform(equip.purchaseDate, 'yyyy-MM-dd'), equip.organizationName];\r\n              rows.push(this.temp);\r\n            });\r\n            (PDF as any).autoTable({\r\n              head: [[{ content: `Organization : ${elem.name}`, colSpan: 8, styles: { fillColor: [255, 255, 255], textColor: [0, 0, 0] }, font: 'ARIALUNI', }],\r\n              [\"Name\", \"Brand\", \"Governorate\", \"District\", \"Hospital\", \"Supplier\", \"Purchase Date\", \"Organization\"]],\r\n              startY: y += 40,\r\n              body: rows,\r\n              styles: { font: 'ARIALUNI' }\r\n            });\r\n            rows = [];\r\n          }\r\n          else if (this.translate.currentLang == \"Ar\") {\r\n            elem.listEquipment.forEach(equip => {\r\n              this.temp = [equip.organizationName, this.datepipe.transform(equip.purchaseDate, 'yyyy-MM-dd'), equip.supplierNameAr,\r\n              equip.healthCareUnitNameAr, equip.healthDistrictNameAr, equip.healthDirectoryNameAr, equip.manufacturerNameAr, equip.equipmentNameAr];\r\n              rows.push(this.temp);\r\n            });\r\n            (PDF as any).autoTable({\r\n              head: [[{ content: `المنظمه : ${elem.nameAr}`, colSpan: 8, styles: { fillColor: [255, 255, 255], textColor: [0, 0, 0], halign: 'right' }, font: 'ARIALUNI', }],\r\n              [\"المنظمه\", \"تاريخ الشراء\", \"الصانع\", \"الوحده الصحيه\", \"المدينه\", \"المحافظه\", \"الصانع\", \"الاسم\"]],\r\n              startY: y += 40,\r\n              body: rows,\r\n              styles: { font: 'ARIALUNI' }\r\n            });\r\n            rows = [];\r\n          }\r\n        }\r\n      });\r\n      PDF.save(\"table.pdf\");\r\n    }\r\n    else if (this.selectedElement === \"Supplier\" || this.selectedElement === \"المورد\") {\r\n      this.EquipmentSupplierList.forEach(elem => {\r\n        if (elem.listEquipment.length > 0) {\r\n          if (this.translate.currentLang == \"En\") {\r\n            elem.listEquipment.forEach(equip => {\r\n              this.temp = [equip.equipmentName, equip.manufacturerName, equip.healthDirectoryName, equip.healthDistrictName, equip.healthCareUnitName, equip.supplierName,\r\n              this.datepipe.transform(equip.purchaseDate, 'yyyy-MM-dd'), equip.organizationName];\r\n              rows.push(this.temp);\r\n            });\r\n            (PDF as any).autoTable({\r\n              head: [[{ content: `Supplier : ${elem.name}`, colSpan: 8, styles: { fillColor: [255, 255, 255], textColor: [0, 0, 0] }, font: 'ARIALUNI', }],\r\n              [\"Name\", \"Brand\", \"Governorate\", \"District\", \"Hospital\", \"Supplier\", \"Purchase Date\", \"Organization\"]],\r\n              startY: y += 40,\r\n              body: rows,\r\n              styles: { font: 'ARIALUNI' }\r\n            });\r\n            rows = [];\r\n          }\r\n          else if (this.translate.currentLang == \"Ar\") {\r\n            elem.listEquipment.forEach(equip => {\r\n              this.temp = [equip.organizationName, this.datepipe.transform(equip.purchaseDate, 'yyyy-MM-dd'), equip.supplierNameAr,\r\n              equip.healthCareUnitNameAr, equip.healthDistrictNameAr, equip.healthDirectoryNameAr, equip.manufacturerNameAr, equip.equipmentNameAr];\r\n              rows.push(this.temp);\r\n            });\r\n            (PDF as any).autoTable({\r\n              head: [[{ content: `المورد : ${elem.nameAr}`, colSpan: 8, styles: { fillColor: [255, 255, 255], textColor: [0, 0, 0], halign: 'right' }, font: 'ARIALUNI', }],\r\n              [\"المنظمه\", \"تاريخ الشراء\", \"الصانع\", \"الوحده الصحيه\", \"المدينه\", \"المحافظه\", \"الصانع\", \"الاسم\"]],\r\n              startY: y += 40,\r\n              body: rows,\r\n              styles: { font: 'ARIALUNI' },\r\n            });\r\n            rows = [];\r\n          }\r\n        }\r\n      });\r\n      PDF.save(\"table.pdf\");\r\n    }\r\n    else {\r\n      if (this.filteredObj.name != null) {\r\n        this.filterByName(this.filteredObj.name);\r\n      }\r\n      if (this.filteredObj.brandName != null) {\r\n        this.filterByBrand(this.filteredObj.brandName);\r\n      }\r\n      if (this.filteredObj.govName != null) {\r\n        this.filterByGov(this.filteredObj.govName);\r\n      }\r\n      if (this.filteredObj.cityName != null) {\r\n        this.filterByCity(this.filteredObj.cityName);\r\n      }\r\n      if (this.filteredObj.hosName != null) {\r\n        this.filterByHos(this.filteredObj.hosName);\r\n      }\r\n      if (this.filteredObj.supplierName != null) {\r\n        this.filterBySupplier(this.filteredObj.supplierName);\r\n      }\r\n      if (this.filteredObj.purchaseDate != null) {\r\n        this.filterByPurchaseDate(this.filteredObj.purchaseDate);\r\n      }\r\n      if (this.newEquipmentList.length > 0) {\r\n        if (this.translate.currentLang == \"En\") {\r\n          this.newEquipmentList.forEach(equip => {\r\n            this.temp = [equip.equipmentName, equip.manufacturerName, equip.healthDirectoryName, equip.healthDistrictName, equip.healthCareUnitName, equip.supplierName,\r\n            this.datepipe.transform(equip.purchaseDate, 'yyyy-MM-dd'), equip.organizationName];\r\n            rows.push(this.temp);\r\n          });\r\n          (PDF as any).autoTable({\r\n            head: [[\"Name\", \"Brand\", \"Governorate\", \"District\", \"Hospital\", \"Supplier\", \"Purchase Date\", \"Organization\"]],\r\n            startY: y += 40,\r\n            body: rows,\r\n            styles: { font: 'ARIALUNI' }\r\n          });\r\n          rows = [];\r\n        }\r\n        else if (this.translate.currentLang == \"Ar\") {\r\n          this.newEquipmentList.forEach(equip => {\r\n            this.temp = [equip.organizationName, this.datepipe.transform(equip.purchaseDate, 'yyyy-MM-dd'), equip.supplierNameAr,\r\n            equip.healthCareUnitNameAr, equip.healthDistrictNameAr, equip.healthDirectoryNameAr, equip.manufacturerNameAr, equip.equipmentNameAr];\r\n            rows.push(this.temp);\r\n          });\r\n          (PDF as any).autoTable({\r\n            head: [[\"المنظمه\", \"تاريخ الشراء\", \"الصانع\", \"الوحده الصحيه\", \"المدينه\", \"المحافظه\", \"الصانع\", \"الاسم\"]],\r\n            startY: y += 40,\r\n            body: rows,\r\n            styles: { font: 'ARIALUNI' }\r\n          });\r\n          rows = [];\r\n        }\r\n        PDF.save(\"table.pdf\");\r\n      }\r\n    }\r\n  }\r\n  filterByName(elem) {\r\n    this.filteredObj.name = elem;\r\n    this.equipmentService.FilterData(this.filteredObj).subscribe(data => {\r\n      this.equipments = data;\r\n      if (this.selectedElement != null) {\r\n        this.selectElement(this.selectedElement);\r\n      }\r\n      this.newEquipmentList = this.equipments;\r\n    });\r\n  }\r\n  filterByBrand(elem) {\r\n    this.filteredObj.brandName = elem;\r\n    this.equipmentService.FilterData(this.filteredObj).subscribe(data => {\r\n      this.equipments = data;\r\n      if (this.selectedElement != null) {\r\n        this.selectElement(this.selectedElement);\r\n      }\r\n      this.newEquipmentList = this.equipments;\r\n    });\r\n  }\r\n  filterByGov(elem) {\r\n    this.filteredObj.govName = elem;\r\n    this.equipmentService.FilterData(this.filteredObj).subscribe(data => {\r\n      this.equipments = data;\r\n      if (this.selectedElement != null) {\r\n        this.selectElement(this.selectedElement);\r\n      }\r\n      this.newEquipmentList = this.equipments;\r\n    });\r\n  }\r\n  filterByCity(elem) {\r\n    this.filteredObj.cityName = elem;\r\n    this.equipmentService.FilterData(this.filteredObj).subscribe(data => {\r\n      this.equipments = data;\r\n      if (this.selectedElement != null) {\r\n        this.selectElement(this.selectedElement);\r\n      }\r\n      this.newEquipmentList = this.equipments;\r\n    });\r\n  }\r\n  filterByHos(elem) {\r\n    this.filteredObj.hosName = elem;\r\n    this.equipmentService.FilterData(this.filteredObj).subscribe(data => {\r\n      this.equipments = data;\r\n      if (this.selectedElement != null) {\r\n        this.selectElement(this.selectedElement);\r\n      }\r\n      this.newEquipmentList = this.equipments;\r\n    });\r\n  }\r\n  filterBySupplier(elem) {\r\n    this.filteredObj.supplierName = elem;\r\n    this.equipmentService.FilterData(this.filteredObj).subscribe(data => {\r\n      this.equipments = data;\r\n      if (this.selectedElement != null) {\r\n        this.selectElement(this.selectedElement);\r\n      }\r\n      this.newEquipmentList = this.equipments;\r\n    });\r\n  }\r\n  filterByPurchaseDate(elem) {\r\n    if (elem != \"\") {\r\n      document.getElementById('clcbtn').style.display = \"block\";\r\n      document.getElementById('clcbtn').style.marginTop = \"-1.2rem\";\r\n      document.getElementById('clcbtn').style.marginLeft = \"6rem\";\r\n    }\r\n    this.filteredObj.purchaseDate = elem;\r\n    this.equipmentService.FilterData(this.filteredObj).subscribe(data => {\r\n      this.equipments = data;\r\n      if (this.selectedElement != null) {\r\n        this.selectElement(this.selectedElement);\r\n      }\r\n      this.newEquipmentList = this.equipments;\r\n    });\r\n  }\r\n  checkValue() {\r\n   // console.log(\"vaaal\",$('#installationDate').val())\r\n    $('#installationDate').val(\"\");\r\n    document.getElementById('clcbtn').style.display = \"none\";\r\n    this.filteredObj.purchaseDate = null;\r\n    this.equipmentService.FilterData(this.filteredObj).subscribe(data => {\r\n      this.equipments = data;\r\n      if (this.selectedElement != null) {\r\n        this.selectElement(this.selectedElement);\r\n      }\r\n      this.newEquipmentList = this.equipments;\r\n    });\r\n  }\r\n  checkGroupingValue() {\r\n    // $('#equipElementtt').val(\"--select--\")\r\n    document.getElementById('clcgroupingbtn').style.display = \"none\";\r\n    this.selectedElement = null\r\n    this.equipmentService.FilterData(this.filteredObj).subscribe(data => {\r\n      this.equipments = data;\r\n      this.newEquipmentList = this.equipments;\r\n      console.log(\"this.newEquipmentList\", this.newEquipmentList);\r\n    });\r\n  }\r\n  openLink() {\r\n    window.open(\"http://localhost:4200/home/pdfCreate\");\r\n  }\r\n  switchLang(lang: string) {\r\n    console.log(\"this.translate.currentLang\", lang);\r\n    localStorage.setItem('lang', lang)\r\n    this.Lang = lang;\r\n    this.href = this.router.url;\r\n    this.translate.use(lang);\r\n    if (lang== \"En\") {\r\n      document.getElementById('clcgroupingbtn').style.marginLeft = \"-5rem\";\r\n    }\r\n    else if (lang == \"Ar\") {\r\n      document.getElementById('clcgroupingbtn').style.marginRight = \"10rem\";\r\n    }\r\n  }\r\n\r\n  selectElement(elem) {\r\n    this.selectedElement = elem;\r\n    if (elem != \"\") {\r\n        document.getElementById('clcgroupingbtn').style.display = \"block\";\r\n        document.getElementById('clcgroupingbtn').style.marginTop = \"0.3rem\";\r\n        document.getElementById('clcgroupingbtn').style.zIndex = \"1\";\r\n        document.getElementById('clcgroupingbtn').style.marginLeft = \"-5rem\";\r\n    }\r\n    //document.getElementById('clcgroupingbtn').style.display = \"none\";\r\n    console.log(\"this.selectElement\", this.selectedElement);\r\n    if (elem === \"Brand\" || elem === \"الصانع\") {\r\n      this.masterEquipmentService.getMasterByBrand(this.equipments).subscribe(data => {\r\n        this.lstBrandEquipment = data;\r\n      })\r\n    }\r\n    else if (elem === \"Hospital\" || elem === \"الوحده الصحيه\") {\r\n      this.equipmentService.GetAllByHospital(this.equipments).subscribe(data => {\r\n        this.EquipmentHospitalList = data;\r\n      });\r\n    }\r\n    else if (elem === \"Governorate\" || elem === \"المحافظه\") {\r\n      this.equipmentService.GetEquipmentsOnGovernorate(this.equipments).subscribe(data => {\r\n        this.EquipmentGovList = data;\r\n      });\r\n    }\r\n    else if (elem === \"District\" || elem === \"المدينه\") {\r\n      this.equipmentService.GetEquipmentsOnDistrict(this.equipments).subscribe(data => {\r\n        this.EquipmentCityList = data;\r\n      });\r\n    }\r\n    else if (elem === \"Organization\" || elem === \"المنظمه\") {\r\n      this.equipmentService.GetEquipmentsOnOrganization(this.equipments).subscribe(data => {\r\n        this.EquipmentOrgList = data;\r\n      });\r\n    }\r\n    else if (elem === \"Supplier\" || elem === \"المورد\") {\r\n      this.equipmentService.GetEquipmentsOnSupplier(this.equipments).subscribe(data => {\r\n        this.EquipmentSupplierList = data;\r\n      });\r\n    }\r\n    else {\r\n\r\n    }\r\n  }\r\n}\r\n\r\n","<p-dialog [(visible)]=\"equipmentDialog\" [style]=\"{width: '70vw'}\" [modal]=\"true\" styleClass=\"p-fluid\"\r\n    (onHide)=\"hideDialog()\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <div class=\"header\">\r\n                <h3 class=\"title\">{{'equipment.Details' | translate}}</h3>\r\n            </div>\r\n            <div>\r\n                <img src=\"./../assets/images/ecg.png\" class=\"img\" [alt]=\"product\">\r\n            </div>\r\n        </div>\r\n        <form>\r\n            <p-tabView [activeIndex]=\"index\" (onChange)=\"handleChange($event)\">\r\n                <p-tabPanel header=\"{{'equipment.Details' | translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <legend>{{'equipment.Details'| translate}}</legend>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\" *ngIf=\"translate.currentLang == 'En'\">\r\n                                <label for=\"name\">{{\"equipment.Name\"| translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"equipmentName\" class=\"form-control\" name=\"name\"\r\n                                    [(ngModel)]=\"equipmentObj.equipmentName\" disabled />\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3 form-group\" *ngIf=\"translate.currentLang == 'Ar'\">\r\n                                <label for=\"namear\">{{\"equipment.NameAr\"| translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"equipmentNamear\" class=\"form-control\" name=\"namear\"\r\n                                    [(ngModel)]=\"equipmentObj.equipmentNameAr\" disabled />\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"internalCode\">{{'equipment.barcode'| translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"barcode\" class=\"form-control\" name=\"barcode\"\r\n                                    [(ngModel)]=\"equipmentObj.barcode\" tooltipPosition=\"bottom\" disabled />\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"status\">{{'equipment.EquipmentStatus'|translate}}</label>\r\n                                <div>\r\n                                    <ul class=\"list-group\">\r\n                                        <li class=\"list-group-item\">\r\n                                            <input type=\"radio\" name=\"status\" id=\"status\" disabled selected />\r\n                                            {{translate.currentLang == \"En\"\r\n                                            ?equipmentObj.statusName:equipmentObj.statusNameAr}}\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"col-md-12 \" *ngIf=\"translate.currentLang == 'En'\">\r\n\r\n                                <label for=\"Description\">{{'equipment.Description'| translate}}</label>\r\n                                <textarea class=\"form-control\" id=\"Description\" type=\"text\"\r\n                                    [(ngModel)]=\"equipmentObj.equipmentDescription\"\r\n                                    [ngModelOptions]=\"{standalone: true}\"\r\n                                    pTooltip=\"Please,Select An equipmentDescription\" tooltipPosition=\"bottom\"\r\n                                    disabled></textarea>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\" *ngIf=\"translate.currentLang == 'Ar'\">\r\n\r\n\r\n\r\n                                <label for=\"Description\">{{'equipment.DescriptionAr'| translate}}</label>\r\n                                <textarea class=\"form-control\" id=\"Description\" type=\"text\"\r\n                                    [(ngModel)]=\"equipmentObj.equipmentDescriptionAr\"\r\n                                    [ngModelOptions]=\"{standalone: true}\"\r\n                                    pTooltip=\"Please,Select An equipmentDescription\"\r\n                                    tooltipPosition=\"bottom\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n\r\n                        <button type=\"button\" class=\"btn btn-info btnNext \" (click)=\"Next()\"\r\n                            [hidden]=\"isNextvalid\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\"\r\n                            [hidden]=\"isPrevvalid\">previous</button>\r\n\r\n                        <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n                <p-tabPanel header=\"{{'equipment.IndustryDetails' | translate}}\">\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"color\">{{'equipment.Color'| translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"Color\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.color\" disabled />\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"weight\">{{'equipment.weight'| translate}}</label>\r\n                                <input type=\"number\" pInputText id=\"weight\" [ngModelOptions]=\"{standalone: true}\"\r\n                                    class=\"form-control\" [(ngModel)]=\"equipmentObj.weight\" disabled />\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"length\">{{'equipment.length'| translate}}</label>\r\n                                <input type=\"number\" pInputText id=\"length\" [ngModelOptions]=\"{standalone: true}\"\r\n                                    class=\"form-control\" [(ngModel)]=\"equipmentObj.length\" disabled />\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"height\">{{'equipment.height'| translate}}</label>\r\n                                <input type=\"number\" pInputText id=\"height\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.height\" disabled />\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"serialNumber\">{{'equipment.serialNumber'| translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"serialNumber\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.serialNumber\"\r\n                                    disabled />\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <br>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\">previous</button>\r\n\r\n                        <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n                <p-tabPanel header=\"{{'equipment.Location' |translate}}\">\r\n\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 form-group\">\r\n                                <label for=\"healthName\">{{'equipment.healthCareUnit'|translate}}</label>\r\n                                <select class=\"form-control\" id=\"healthName\" name=\"healthName\" #healthName=\"ngModel\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.healthCareUnitId\"\r\n                                    disabled>\r\n                                    <option *ngFor=\"let h of healthCareUnitsList\" [value]=\"h.id\">\r\n                                        {{translate.currentLang == \"En\" ?\r\n                                        h.healthCareUnitName:h.healthCareUnitNameAr}}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Department\">{{'equipment.Department' |translate}}</label>\r\n                                <select type=\"text\" id=\"Department\" class=\"form-control\" #department=\"ngModel\"\r\n                                    name=\"department\" [ngModelOptions]=\"{standalone: true}\"\r\n                                    [(ngModel)]=\"equipmentObj.departmentId\" disabled>\r\n                                    <option selected disabled>--select--</option>\r\n                                    <option *ngFor=\"let d of departmentsList\" [value]=\"d.id\">\r\n                                        {{translate.currentLang == \"En\" ? d.departmentName:d.departmentNameAr}}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Employee\">{{'equipment.Employee' |translate}}</label>\r\n                                <p-multiSelect [options]=\"users\" (onChange)=\"checkCheckBoxvalue($event)\"\r\n                                    defaultLabel=\"Select employee\" optionLabel=\"userName\">\r\n                                    <ng-template let-selectedEmployees pTemplate=\"selectedItems\">\r\n                                        <ng-container *ngFor=\"let selectedLayer of selectedEmployees;\">\r\n                                            {{selectedLayer.employeeName}} ,\r\n                                        </ng-container>\r\n                                    </ng-template>\r\n                                </p-multiSelect>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Floor\">{{'equipment.Floor' | translate}}</label>\r\n                                <input type=\"number\" id=\"Floor\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.floor\" disabled />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Room\">{{'equipment.Room' | translate}}</label>\r\n                                <input type=\"number\" id=\"Room\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.room\" disabled />\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"internalCode\">{{'equipment.internalCode' |translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"internalCode\" class=\"form-control\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"equipmentObj.internalCode\"\r\n                                    disabled />\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Previous()\">previous</button>\r\n\r\n                        <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n\r\n                <p-tabPanel header=\"{{'equipment.PurchasingDetails'|translate}}\">\r\n\r\n                    <fieldset class=\"tab\">\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"date\">{{'equipment.InstallationDate'|translate}}</label>\r\n                                <input type=\"date\" class=\"form-control\" id=\"installationDate\" name=\"installationDate\"\r\n                                    value=\"{{InstallationDate}}\" disabled>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"purchasedate\">{{'equipment.PurchaseDate'|translate}}</label>\r\n                                <input type=\"date\" class=\"form-control\" id=\"purchasedate\" name=\"purchasedate\"\r\n                                    value=\"{{purchaseDat}}\" disabled>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"supplier\">{{'equipment.Supplier'|translate}}</label>\r\n                                <select type=\"text\" id=\"supplier\" class=\"form-control\" name=\"supplier\"\r\n                                    [(ngModel)]=\"equipmentObj.supplierId\" #supplierName=\"ngModel\" disabled>\r\n                                    <option *ngFor=\"let s of suppliersList\" [value]=\"s.id\">\r\n                                        {{translate.currentLang == \"En\" ? s.supplierName:s.supplierNameAr}}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"price\">{{'equipment.Price' |translate}}</label>\r\n                                <input type=\"text\" pInputText id=\"price\" class=\"form-control\" name=\"price\"\r\n                                    [(ngModel)]=\"equipmentObj.price\" #price=\"ngModel\" disabled />\r\n                            </div>\r\n                        </div>\r\n                        <br>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" (click)=\"Next()\"\r\n                            [hidden]=\"isNextvalid\">Next</button>\r\n                        <button type=\"button\" class=\"btn btn-info btnNext\" [hidden]=\"isPrevvalid\"\r\n                            (click)=\"Previous()\">previous</button>\r\n\r\n                        <br><br><br>\r\n\r\n                    </fieldset>\r\n\r\n                </p-tabPanel>\r\n                <p-tabPanel header=\"{{'equipment.QrCode' |translate}}\">\r\n\r\n                    <fieldset class=\"tab\">\r\n                        <legend>{{'equipment.QrCode' |translate}}</legend>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                              \r\n                                <ngx-qrcode [elementType]=\"elementType\" [errorCorrectionLevel]=\"correctionLevel\"\r\n                                [value]=\"equipmentObj.qrImgPath\" class=\"coolQRCode\"></ngx-qrcode>\r\n                               \r\n                            </div>\r\n                            <!-- <div *ngIf=\"equipmentObj.qrImgPath == null\">\r\n                                <p>No QrCode for this equipment</p>\r\n                            </div> -->\r\n                        </div>\r\n                  \r\n                        <br><br><br>\r\n                    </fieldset>\r\n                </p-tabPanel>\r\n            </p-tabView>\r\n        </form>\r\n    </ng-template>\r\n</p-dialog>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ConfirmationService, Message, MessageService } from 'primeng/api';\r\nimport { Category } from 'src/app/Shared/Models/Category';\r\nimport { Department } from 'src/app/Shared/Models/Department';\r\nimport { Employee } from 'src/app/Shared/Models/Employee';\r\nimport { Equipment } from 'src/app/Shared/Models/Equipment';\r\nimport { HealthCareUnit } from 'src/app/Shared/Models/HealthCareUnit';\r\nimport { healthDirectory } from 'src/app/Shared/Models/healthDirectory';\r\nimport { HealthDistrict } from 'src/app/Shared/Models/HealthDistrict';\r\nimport { Manufacturer } from 'src/app/Shared/Models/Manufacturer';\r\nimport { MasterEquipment } from 'src/app/Shared/Models/MasterEquipment';\r\nimport { Origin } from 'src/app/Shared/Models/Origin';\r\nimport { Priority } from 'src/app/Shared/Models/Priority';\r\nimport { Status } from 'src/app/Shared/Models/Status';\r\nimport { SubCategory } from 'src/app/Shared/Models/SubCategory';\r\nimport { Supplier } from 'src/app/Shared/Models/Supplier';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { EmployeeService } from 'src/app/Shared/services/employee.service';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\nimport { MasterequipmentService } from 'src/app/Shared/services/masterequipment.service';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-equipment-details-admin',\r\n  templateUrl: './equipment-details-admin.component.html',\r\n  styleUrls: ['./equipment-details-admin.component.css']\r\n})\r\nexport class EquipmentDetailsAdminComponent implements OnInit {\r\n\r\n  eqId: Number;\r\n  equiID: number;\r\n  equipmentDialog: boolean;\r\n  equipments: Equipment[];\r\n  MasterEquipment: MasterEquipment[];\r\n  equipmentObj: Equipment;\r\n  selectedProducts: Equipment[];\r\n  submitted: boolean;\r\n  opened: boolean;\r\n  healthCareUnitsList: HealthCareUnit[];\r\n  healthCareUnits: HealthCareUnit[];\r\n  CareUnits: HealthCareUnit[];\r\n  statusList: Status[];\r\n  priorityList: Priority[];\r\n  manufacturerList: Manufacturer[];\r\n  originsList: Origin[];\r\n  categoriesList: Category[];\r\n  subCategoriesList: SubCategory[];\r\n  departmentsList: Department[];\r\n  suppliersList: Supplier[];\r\n  employeeList: Employee[];\r\n  healthDirectoriesList: healthDirectory[];\r\n  HealthDistrictsList: HealthDistrict[];\r\n  users: User[];\r\n  TecniciensList = []\r\n  employees: any[] = [];\r\n  selectedEmployees: Employee[];\r\n  EpmIDs: number[] = [];\r\n  msgs: Message[] = [];\r\n  districtsList: HealthDistrict[];\r\n  masterEquipment: MasterEquipment[];\r\n  InstallationDate: string = '';\r\n  purchaseDat: string = '';\r\n  index: number = 0;\r\n  Id: number;\r\n  isNextvalid: boolean = false;\r\n  isPrevvalid: boolean = true;\r\n  currentUser: User;\r\n  constructor(private equipmentService: EquipmentService,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    public translate: TranslateService,\r\n    private employeeService: EmployeeService,\r\n    private datePipe: DatePipe,\r\n    private masterEquipmentService: MasterequipmentService,\r\n    private confirmationService: ConfirmationService,\r\n    private messageService: MessageService,\r\n    private userService: UserService,\r\n    private activeRoute: ActivatedRoute) { this.currentUser = this.userService.currentUserValue; }\r\n\r\n  ngOnInit(): void {\r\n    this.equipmentObj = {\r\n      id: this.activeRoute.snapshot.params['id'],\r\n      equipmentDescription: '',\r\n      equipmentDescriptionAr: '',\r\n      equipmentName: '',\r\n      equipmentNameAr: '',\r\n      installationDate: new Date(),\r\n      purchaseDate: new Date(),\r\n      priorityId: 0,\r\n      equipmentCategoryId: 0,\r\n      equipmentSubCategoryId: 0,\r\n      equipmentStatuSId: 0,\r\n      statusName: '',\r\n      statusNameAr: '',\r\n      manufacturerId: 0,\r\n      originId: 0,\r\n      healthCareUnitId: 0,\r\n      healthCareUnit: '',\r\n      healthCareUnitName: '',\r\n      healthCareUnitNameAr: '',\r\n      supplierId: 0,\r\n      supplierName: '',\r\n      supplierNameAr: '',\r\n      expectedLifeTime: 0,\r\n      length: 0,\r\n      height: 0,\r\n      weight: 0,\r\n      departmentId: 0,\r\n      departmentName: '',\r\n      departmentNameAr: '',\r\n      room: 0,\r\n      floor: 0,\r\n      remarks: '',\r\n      price: 0,\r\n      modelNumber: '',\r\n      versionNumber: '',\r\n      serialNumber: '',\r\n      internalCode: '',\r\n      upaCode: '',\r\n      barcode: '',\r\n      color: '',\r\n      colorAr: '',\r\n      manufacturerName: '',\r\n      manufacturerNameAr: '',\r\n      healthDirectoryId: 0,\r\n      healthDirectoryName: '',\r\n      healthDirectoryNameAr: '',\r\n      healthDistrictId: 0,\r\n      healthDistrictName: '',\r\n      healthDistrictNameAr: '',\r\n      employeeIDs: [],\r\n      AttachmentIDs: [],\r\n      masterEquipmentId: 0,\r\n      qrImgPath: '',\r\n      createdAt:new Date(),\r\n      organizationName:'',\r\n      organizationNameAr:'',\r\n      time:'',\r\n      recallNumber:0,\r\n      recallDate:new Date(),\r\n      organizationId:0,\r\n      contractRequestId:0,\r\n      organizationrequestid:0,\r\n      contractid:0\r\n    }\r\n    this.equipmentObj.employeeIDs = [];\r\n    this.openNew(this.activeRoute.snapshot.params['id']);\r\n  }\r\n  openNew(id: number) {\r\n    this.equipmentDialog = true;\r\n    this.InstallationDate = this.datePipe.transform(this.equipmentObj.installationDate, 'yyyy-MM-dd');\r\n    this.purchaseDat = this.datePipe.transform(this.equipmentObj.purchaseDate, 'yyyy-MM-dd');\r\n    console.log(\"installationDate\", this.InstallationDate);\r\n    console.log(\"purchaseDate\", this.purchaseDat);\r\n    this.sharedService.getAllSuppliers().subscribe(data => { this.suppliersList = data });\r\n    this.sharedService.getAllunits().subscribe(data => { this.healthCareUnitsList = data });\r\n    this.sharedService.getAllDepartments().subscribe(data => { this.departmentsList = data });\r\n    this.sharedService.getAllstatuses().subscribe(data => { this.statusList = data });\r\n    this.equipmentService.getEquipmentById(id).subscribe(data => { this.equipmentObj = data });\r\n    // this.getUsersByEquipmentId(id);\r\n  }\r\n  getOne() {\r\n    //this.equipmentService.getEquipmentById()\r\n  }\r\n  getAll() {\r\n    this.equipmentService.getAllEquipments().\r\n      subscribe(data => { this.equipments = data, console.log(\"equipments\", this.equipments) });\r\n  }\r\n  //    getUsersByEquipmentId(id){\r\n  // this.userService.getUsersByEquipmentId(this.equipmentObj.id).subscribe(e=>console.log(e))\r\n  //    }\r\n  getHealthCareUnit(id: number) {\r\n    this.sharedService.getAllunitsByDistrictId(id).subscribe(data => { this.CareUnits = data })\r\n    console.log(\"iiiiiid\", id);\r\n  }\r\n  getAllMasterEquipment() {\r\n    this.masterEquipmentService.getAll().subscribe(data => { this.MasterEquipment = data, console.log(\"masterEquipment\", this.MasterEquipment) });\r\n  }\r\n  fillDistrict(name: string) {\r\n    this.sharedService.getDirectoryIdByname(name).subscribe(data => {\r\n      this.sharedService.getAllHealthDistricts(data).subscribe(data => {\r\n        this.HealthDistrictsList = data\r\n      });\r\n    });\r\n\r\n  }\r\n  fillHospital(name: string) {\r\n    this.sharedService.getDirectoryIdByname(name).subscribe(data => {\r\n      this.sharedService.getAllunitsByDistrictId(data).subscribe(data => {\r\n        this.healthCareUnits = data;\r\n      })\r\n    })\r\n  }\r\n  fillSubCategory() {\r\n    this.sharedService.getAllSubCategories(this.equipmentObj.equipmentCategoryId).subscribe(data => { this.subCategoriesList = data, console.log(this.subCategoriesList) });\r\n  }\r\n  hideDialog() {\r\n    this.equipmentDialog = false;\r\n    this.submitted = false;\r\n    this.router.navigate(['home/equipmentsList']);\r\n  }\r\n  updateProduct(myform: NgForm) {\r\n    this.submitted = true;\r\n    //console.log(\"update\")\r\n    this.equipmentObj.installationDate = new Date(this.InstallationDate);\r\n    this.equipmentObj.purchaseDate = new Date(this.purchaseDat);\r\n    this.equipmentService.updateEquipment(this.equipmentObj.id, this.equipmentObj).subscribe(\r\n      data => {\r\n        console.log(data), this.hideDialog()\r\n      });\r\n  }\r\n  Next() {\r\n    this.index++;\r\n    if (this.index === 3) {\r\n      this.isNextvalid = true;\r\n      this.isPrevvalid = false;\r\n    }\r\n    console.log(\"next\", this.index);\r\n  }\r\n  Previous() {\r\n    this.index--;\r\n    if (this.index === 0) {\r\n      this.isNextvalid = false;\r\n      this.isPrevvalid = true;\r\n    }\r\n    console.log(\"prev\", this.index);\r\n\r\n  }\r\n  handleChange(e) {\r\n    this.index = e.index;\r\n    if (this.index === 3) {\r\n      this.isNextvalid = true;\r\n      this.isPrevvalid = false;\r\n    }\r\n    else if (this.index === 0) {\r\n      this.isNextvalid = false;\r\n      this.isPrevvalid = true;\r\n    }\r\n    console.log(\"index\", this.index);\r\n  }\r\n  checkCheckBoxvalue(event) {\r\n    this.EpmIDs = [];\r\n    console.log(\"selected111\", this.selectedEmployees);\r\n    var index = this.selectedEmployees.length;\r\n    console.log(\"index\", index);\r\n    this.selectedEmployees.forEach(value => {\r\n      this.EpmIDs.push(value.id);\r\n    });\r\n    //this.equipmentObj.employeeIDs = this.EpmIDs;\r\n  }\r\n\r\n}\r\n","<!-- <h3 class=\"p-3 text-center\">Inventories List</h3>\r\n<div class=\"container\">\r\n   \r\n    <br>\r\n    <br>\r\n   \r\n    <table class=\"table table-striped table-bordered\">\r\n        <thead>\r\n            <tr>\r\n                <th>userName</th>\r\n                <th>equipment Code</th>\r\n                <th>createdAt</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let invent of inventories\">\r\n                <td>{{invent.userName}}</td>\r\n                <td>{{invent.equipmentCode}}</td>\r\n                <td>{{invent.createdAt}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div> -->\r\n\r\n<!-- <p-messages [value]=\"msgs\"></p-messages>\r\n        <p-toolbar styleClass=\"p-mb-4\">\r\n            <ng-template pTemplate=\"left\">\r\n                <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary  p-button-rounded p-mr-2 new\"\r\n                    routerLink=\"/home/addEquipment\" pTooltip=\"Add a New Equipment\" tooltipPosition=\"right\"></button>\r\n\r\n                 <button pButton pRipple label=\"{{'Actions.Scan' | translate}}\" class=\"p-button-info p-mr-2 info\" routerLink=\"/home/qrcode\"></button>\r\n\r\n            </ng-template>\r\n        </p-toolbar> -->\r\n\r\n<div class=\"container-fluid\">\r\n\r\n    <div class=\"card\">\r\n\r\n\r\n        <p-toast posinset=\"top-right\"></p-toast>\r\n        <div class=\"card-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-11\">\r\n                    <h5>{{'Dashboard.ManageEquipments' | translate}}</h5>\r\n                </div>\r\n               \r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\"><br /></div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n                    <p-table #dt [value]=\"equipments\" [rows]=\"10\" styleClass=\"p-datatable-responsive-demo\"\r\n                        [paginator]=\"true\" [(selection)]=\"selectedProducts\" [rowHover]=\"true\" dataKey=\"id\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        [showCurrentPageReport]=\"true\"\r\n                        [globalFilterFields]=\"['equipmentName','department','manufacturer','supplier']\">\r\n                        <ng-template pTemplate=\"caption\">\r\n                            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n\r\n\r\n                                <span class=\"p-input-icon-right\">\r\n                                    <i class=\"pi pi-search\"></i>\r\n                                    <input pInputText class=\"form-control\" type=\"text\"\r\n                                        (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                                        placeholder=\"{{'search.Search'|translate}}...\" />\r\n                                </span>\r\n                            </div>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"header\">\r\n\r\n                            <tr>\r\n                                <th pSortableColumn=\"Code\">{{'equipment.internalCode' | translate}} <p-sortIcon\r\n                                        field=\"Code\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"upaCode\">{{'equipment.upaCode' | translate}} <p-sortIcon\r\n                                        field=\"upaCode\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"equipmentName\">{{'equipment.Name' | translate}} <p-sortIcon\r\n                                        field=\"equipmentName\"></p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"manufacturer\">{{'equipment.Manufacturer' | translate}} <p-sortIcon\r\n                                        field=\"manufacturer\"></p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"healthDirectoryName\">{{'equipment.governorate' | translate}}\r\n                                    <p-sortIcon field=\"healthDirectoryName\"></p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"healthDistrictName\">{{'equipment.district' | translate}}\r\n                                    <p-sortIcon field=\"healthDistrictName\"></p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"healthCareUnitName\">{{'equipment.healthCareUnit' | translate}}\r\n                                    <p-sortIcon field=\"healthCareUnitName\"></p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"purchaseDate\">{{'equipment.PurchaseDate' | translate}} <p-sortIcon\r\n                                    field=\"purchaseDate\"></p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"installationDate\">{{'equipment.InstallationDate' | translate}}\r\n                                <p-sortIcon field=\"installationDate\"></p-sortIcon>\r\n                            </th>\r\n                                 <!-- <th>{{'Actions.Action' | translate}}</th>  -->\r\n                                 <th>Scanned At</th> \r\n                             \r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <th>\r\n                                    <input pInputText type=\"text\"\r\n                                        (input)=\"dt.filter($event.target.value, 'internalCode', 'contains')\"\r\n                                        [value]=\"dt.filters['internalCode']?.value\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n                                </th>\r\n                                <th>\r\n                                    <input pInputText type=\"text\"\r\n                                        (input)=\"dt.filter($event.target.value, 'upaCode', 'contains')\"\r\n                                        [value]=\"dt.filters['upaCode']?.value\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n                                </th>\r\n                                <th>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"equipments\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentName\"\r\n                                        optionValue=\"equipmentName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'equipmentName','equals')\"\r\n                                        [filterBy]=\"dt.filters['equipmentName']?.value\" styleClass=\"ui-column-filter\"\r\n                                        class=\"filterDropdwon\"></p-dropdown>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"equipments\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentNameAr\"\r\n                                        optionValue=\"equipmentNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'equipmentNameAr','equals')\"\r\n                                        [filterBy]=\"dt.filters['equipmentNameAr']?.value\" styleClass=\"ui-column-filter\">\r\n                                    </p-dropdown>\r\n                                </th>\r\n                                <th>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"manufacturerList\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerName\"\r\n                                        optionValue=\"manufacturerName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'manufacturerName','equals')\"\r\n                                        [filterBy]=\"dt.filters['manufacturerName']?.value\" styleClass=\"ui-column-filter\"\r\n                                        class=\"filterDropdwon\"></p-dropdown>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"manufacturerList\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerNameAr\"\r\n                                        optionValue=\"manufacturerNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'manufacturerNameAr','equals')\"\r\n                                        [filterBy]=\"dt.filters['manufacturerNameAr']?.value\"\r\n                                        styleClass=\"ui-column-filter\">\r\n                                    </p-dropdown>\r\n                                </th>\r\n                                <th>\r\n                                    <input pInputText type=\"text\"\r\n                                        (input)=\"dt.filter($event.target.value, 'serialNumber', 'contains')\"\r\n                                        [value]=\"dt.filters['serialNumber']?.value\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n                                </th>\r\n                                <th>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"departmentsList\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"departmentName\"\r\n                                        optionValue=\"departmentName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'departmentName','contains') ; fillHospital($event.value)\"\r\n                                        [filterBy]=\"dt.filters['departmentName']?.value\" styleClass=\"ui-column-filter\"\r\n                                        class=\"filterDropdwon\"></p-dropdown>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"departmentsList\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"departmentNameAr\"\r\n                                        optionValue=\"departmentNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'departmentNameAr','contains'); fillHospital($event.value)\"\r\n                                        [filterBy]=\"dt.filters['departmentNameAr']?.value\"\r\n                                        styleClass=\"ui-column-filter\">\r\n                                    </p-dropdown>\r\n                                </th>\r\n                                <th>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"suppliersList\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"supplierName\"\r\n                                        optionValue=\"supplierName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'supplierName','equals')\"\r\n                                        [filterBy]=\"dt.filters['supplierName']?.value\" styleClass=\"ui-column-filter\"\r\n                                        class=\"filterDropdwon\"></p-dropdown>\r\n                                    <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"suppliersList\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"supplierNameAr\"\r\n                                        optionValue=\"supplierNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                        (onChange)=\"dt.filter($event.value,'supplierNameAr','equals')\"\r\n                                        [filterBy]=\"dt.filters['supplierNameAr']?.value\" styleClass=\"ui-column-filter\">\r\n                                    </p-dropdown>\r\n                                </th>\r\n                                <th>\r\n                                    <input pInputText type=\"date\"\r\n                                        (input)=\"dt.filter($event.target.value, 'purchaseDate', 'contains')\"\r\n                                        [value]=\"dt.filters['purchaseDate']?.value\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n                                </th>\r\n                                <th>\r\n                                    <input pInputText type=\"date\"\r\n                                        (input)=\"dt.filter($event.target.value, 'installationDate', 'contains')\"\r\n                                        [value]=\"dt.filters['installationDate']?.value\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n                                </th>\r\n                                <th>\r\n                                    <input pInputText type=\"date\"\r\n                                        (input)=\"dt.filter($event.target.value, 'createdAt', 'contains')\"\r\n                                        [value]=\"dt.filters['createdAt']?.value\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n                                </th>\r\n                                <!-- <th></th> -->\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"body\" let-eq>\r\n\r\n                            <tr>\r\n                                <td>{{eq.internalCode}}</td>\r\n                                <td>{{eq.upaCode}}</td>\r\n                                <td>{{translate.currentLang == \"En\" ? eq.equipmentName:eq.equipmentNameAr}}</td>\r\n                                <td>{{translate.currentLang == \"En\" ? eq.manufacturerName:eq.manufacturerNameAr}}</td>\r\n                                <td>{{eq.serialNumber}}</td>\r\n                                <td>{{translate.currentLang == \"En\" ? eq.departmentName:eq.departmentNameAr}}</td>\r\n                                <td>{{translate.currentLang == \"En\" ? eq.supplierName:eq.supplierNameAr}}</td>\r\n                                <td>{{eq.purchaseDate}}</td>\r\n                                <td>{{eq.installationDate}}</td>\r\n                                <td>{{eq.createdAt| date}}</td>\r\n                                <!-- <td>{{eq.createdAt | date:'h:mm:ss a'}}</td> -->\r\n                                <!-- <td>\r\n                                    <button pButton pRipple icon=\"pi pi-pencil\"\r\n                                        class=\"p-button-rounded p-button-info edit\" (click)=\"openNew(eq)\"></button>\r\n\r\n                                    <button pButton pRipple (click)=\"confirmDelete(eq.id,eq.equipmentName)\"\r\n                                        pTooltip=\"delete an Equipment\" tooltipPosition=\"top\" icon=\"pi pi-trash\"\r\n                                        class=\"p-button-rounded p-button-danger edit\"></button>\r\n                                </td> -->\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"summary\">\r\n                            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                                {{'In total there are.In total there are'| translate}} {{equipments ? equipments.length\r\n                                : 0 }}\r\n                                {{'Sidebar.equipments'| translate}}.\r\n                            </div>\r\n                        </ng-template>\r\n                    </p-table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <!-- <p>grouping By Date</p>\r\n        <div *ngFor=\"let eq of eqscann\">\r\n            <P>{{eq.createdAt}}</P>\r\n            <div *ngFor=\"let eqs of eq.listEquipment\">\r\n                <P>{{eqs.equipmentName}}</P>\r\n            </div>\r\n        </div> -->\r\n        \r\n        <h3>Scanned Equipments</h3>\r\n        <div *ngFor=\"let eq of eqscann\">\r\n            <a data-toggle=\"collapse\" class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle\"  href=\"#{{eq.id}}\" \r\n            role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">{{eq.createdAt|date}}</a>\r\n  \r\n            <div id=\"{{eq.id}}\" class=\"panel-collapse collapse\" style=\"width: 100%;\">\r\n        \r\n            <!-- <P>{{eq.createdAt}}</P> -->\r\n            \r\n        <table class=\"table table-striped table-bordered\">\r\n            <thead>\r\n                <tr>\r\n                    <th>internalCode</th>\r\n                    <th>upaCode</th>\r\n                    <th>equipmentName</th>\r\n                    <th>Brand</th>\r\n                    <th>governorate</th>\r\n                    <th>City</th>\r\n                    <th>Hospital</th>\r\n                    <!-- <th>PurchaseDate</th>\r\n                    <th>InstallationDate</th> -->\r\n                    <th>scannedAt</th>\r\n                    <th>time</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr  *ngFor=\"let eqs of eq.listEquipment\">\r\n                    <td>{{eqs.internalCode}}</td>\r\n                    <td>{{eqs.upaCode}}</td>\r\n                    <td>{{eqs.equipmentName}}</td>\r\n                    <td>{{eqs.manufacturerName}}</td>\r\n                    <td>{{eqs.healthDirectoryName}}</td>\r\n                    <td>{{eqs.healthDistrictName}}</td>\r\n                    <td>{{eqs.healthCareUnitName}}</td>\r\n                    <!-- <td>{{eqs.purchaseDate}}</td>\r\n                    <td>{{eqs.installationDate}}</td>    -->\r\n                    <td>{{eqs.createdAt | date}}</td> \r\n                    <td>{{eqs.createdAt | date:'h:mm:ss a'}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { element } from 'protractor';\r\nimport { Category } from 'src/app/Shared/Models/Category';\r\nimport { Department } from 'src/app/Shared/Models/Department';\r\nimport { Equipment, EquipmentVM, scanningDateVm, scanningequipmentVM } from 'src/app/Shared/Models/Equipment';\r\nimport { EquipmentAttachments } from 'src/app/Shared/Models/EquipmentAttachments';\r\nimport { HealthCareUnit } from 'src/app/Shared/Models/HealthCareUnit';\r\nimport { healthDirectory } from 'src/app/Shared/Models/healthDirectory';\r\nimport { HealthDistrict } from 'src/app/Shared/Models/HealthDistrict';\r\nimport { Inventory } from 'src/app/Shared/Models/Inventory';\r\nimport { Manufacturer } from 'src/app/Shared/Models/Manufacturer';\r\nimport { Origin } from 'src/app/Shared/Models/Origin';\r\nimport { Priority } from 'src/app/Shared/Models/Priority';\r\nimport { Status } from 'src/app/Shared/Models/Status';\r\nimport { Supplier } from 'src/app/Shared/Models/Supplier';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\nimport { InventoryService } from 'src/app/Shared/services/inventory.service';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-inventory-list',\r\n  templateUrl: './inventory-list.component.html',\r\n  styleUrls: ['./inventory-list.component.scss']\r\n})\r\nexport class InventoryListComponent implements OnInit {\r\n  inventories: Inventory[]\r\n  selectedProducts: Inventory[];\r\n  currentUser: User;\r\n  equipmentObj: Equipment;\r\n  Attach: EquipmentAttachments;\r\n  equipments: Equipment[]\r\n  healthCareUnitsList: HealthCareUnit[];\r\n  priorityList: Priority[];\r\n  statusList: Status[];\r\n  districtsList: HealthDistrict[]\r\n  manufacturerList: Manufacturer[];\r\n  originsList: Origin[];\r\n  categoriesList: Category[];\r\n  departmentsList: Department[];\r\n  suppliersList: Supplier[];\r\n  healthDirectoriesList: healthDirectory[]\r\n  eqscann:scanningDateVm[]\r\n  s: string = '';\r\n  constructor(private inventoyservice: InventoryService,\r\n    private router: Router, private userService: UserService,\r\n    public translate: TranslateService,\r\n    private equipmentService: EquipmentService,\r\n    private sharedService: SharedService,\r\n    private datePipe: DatePipe) {\r\n    this.currentUser = this.userService.currentUserValue;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.inventoyservice.getAllInventories().subscribe(data=>{this.inventories=data,console.log(this.inventories)})\r\n    this.getAll();\r\n    this.sharedService.getAllunits().subscribe(data => { this.healthCareUnitsList = data });\r\n    this.sharedService.getAllstatuses().subscribe(data => { this.statusList = data });\r\n    this.sharedService.getAllpriorities().subscribe(data => { this.priorityList = data });\r\n    this.sharedService.getAllmanufacturer().subscribe(data => { this.manufacturerList = data });\r\n    this.sharedService.getAllOrigins().subscribe(data => { this.originsList = data });\r\n    this.sharedService.getAllCategories().subscribe(data => { this.categoriesList = data, console.log(this.categoriesList) });\r\n    this.sharedService.getAllDepartments().subscribe(data => { this.departmentsList = data });\r\n    this.sharedService.getAllSuppliers().subscribe(data => { this.suppliersList = data, console.log(\"suppliers\", this.suppliersList) });\r\n    this.sharedService.getAllHealthDirectories().subscribe(data => { this.healthDirectoriesList = data, console.log(\"healthDirectoriesList\", data) });\r\n    // this.sharedService.getAllEmployees().subscribe(data => { this.employeesList = data, console.log(\"employeesList\",this.employeesList) });\r\n    this.sharedService.getAllHealthDistrict().subscribe(data => { this.districtsList = data });\r\n    this.equipmentService.getScannedDateWithequipmentsgroups().subscribe(data=>{this.eqscann=data,console.log(data)\r\n   \r\n    })\r\n    console.log(\"currentUser\", this.currentUser);\r\n    //this.getSelectedemployees();\r\n    this.equipmentObj = {\r\n      id: 0,\r\n      equipmentDescription: '',\r\n      equipmentDescriptionAr: '',\r\n      equipmentName: \"\",\r\n      equipmentNameAr: \"\",\r\n      installationDate: new Date(),\r\n      purchaseDate: new Date(),\r\n      priorityId: 0,\r\n      equipmentCategoryId: 0,\r\n      equipmentSubCategoryId: 0,\r\n      equipmentStatuSId: 0,\r\n      statusName: '',\r\n      statusNameAr: '',\r\n      manufacturerId: 0,\r\n      originId: 0,\r\n      healthCareUnitId: 0,\r\n      healthCareUnit: '',\r\n      healthCareUnitName: '',\r\n      healthCareUnitNameAr: '',\r\n      supplierId: 0,\r\n      supplierName: '',\r\n      supplierNameAr: '',\r\n      expectedLifeTime: 0,\r\n      length: 0,\r\n      height: 0,\r\n      weight: 0,\r\n      departmentId: 0,\r\n      departmentName: '',\r\n      departmentNameAr: '',\r\n      room: 0,\r\n      floor: 0,\r\n      remarks: '',\r\n      price: 0,\r\n      modelNumber: '',\r\n      versionNumber: '',\r\n      serialNumber: '',\r\n      internalCode: '',\r\n      upaCode: '',\r\n      barcode: '',\r\n      color: '',\r\n      colorAr: '',\r\n      manufacturerName: '',\r\n      manufacturerNameAr: '',\r\n      healthDirectoryId: 0,\r\n      healthDirectoryName: '',\r\n      healthDirectoryNameAr: '',\r\n      healthDistrictId: 0,\r\n      healthDistrictName: '',\r\n      healthDistrictNameAr: '',\r\n      employeeIDs: [],\r\n      AttachmentIDs: [],\r\n      masterEquipmentId: 0,\r\n      qrImgPath: '',\r\n      createdAt:new Date(),\r\n      organizationName:'',\r\n      organizationNameAr:'',\r\n      time:'',\r\n      recallNumber:0,\r\n      recallDate:new Date(),\r\n      organizationId:0,\r\n      contractRequestId:0,\r\n      organizationrequestid:0,\r\n      contractid:0\r\n    }\r\n    this.Attach = {\r\n      id: 0,\r\n      fileName: '',\r\n      equipmentId: 0\r\n    }\r\n    this.equipmentObj.employeeIDs = [];\r\n   \r\n  }\r\n\r\n  openLink() {\r\n    this.router.navigate(['/pdfCreate']);\r\n  }\r\n  getAll() {\r\n\r\n    this.equipmentService.GetAllEquipmentsforinventory().\r\n      subscribe(data => { this.equipments = data, console.log(this.equipments) })\r\n\r\n  }\r\n}\r\n","<div>\r\n    <div class=\"header\">\r\n        <h3 class=\"title\">{{'equipment.equipmentRecall' | translate}}</h3>\r\n    </div>\r\n    <div>\r\n        <img src=\"./../assets/images/ecg.png\" class=\"img\">\r\n    </div>\r\n    <p-toast posinset=\"top-right\"></p-toast>\r\n</div>\r\n<div *ngIf=\"currentUser.roleName==='Supplier'\">\r\n    <form (ngSubmit)=\"AddEquipmentForm.valid && saveProduct(AddEquipmentForm)\" #AddEquipmentForm=\"ngForm\">\r\n        <div class=\"container\">\r\n\r\n            <fieldset class=\"tab\">\r\n                <!-- <legend>{{'equipment.IndustryDetails' | translate}}</legend> -->\r\n                <div class=\"row\">\r\n\r\n                    <div class=\"col-md-6\">\r\n                        <label for=\"recallNo\">{{'equipmentRecall.recall-number'| translate}}</label>\r\n                        <input type=\"text\" class=\"form-control frmcontrol\" id=\"recallNo\" autofocus\r\n                            pTooltip=\"Enter A recall #\" tooltipPosition=\"bottom\" #recallNo=\"ngModel\"\r\n                            [(ngModel)]=\"recallObj.recallNumber\" [ngModelOptions]=\"{standalone: true}\" />\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6\">\r\n                        <label for=\"recalldate\">{{'equipmentRecall.Recall-date'| translate}}</label>\r\n                        <input type=\"date\" class=\"form-control frmcontrol\" #recalldate=\"ngModel\"\r\n                            [(ngModel)]=\"recallObj.recallDate\" [ngModelOptions]=\"{standalone: true}\" id=\"recalldate\"\r\n                            pTooltip=\"Enter A weight\" tooltipPosition=\"bottom\" />\r\n\r\n                    </div>\r\n                    <br>\r\n                    <br>\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"recallSubject\">{{'equipmentRecall.Recall-Subject'| translate}}</label>\r\n                        <input type=\"text\" class=\"form-control frmcontrol sub-equipment\" id=\"recallSubject\"\r\n                            pTooltip=\"Enter A length\" tooltipPosition=\"bottom\" #recallSubject=\"ngModel\"\r\n                            [(ngModel)]=\"recallObj.recallSubject\" [ngModelOptions]=\"{standalone: true}\" />\r\n                    </div>\r\n                    <br>\r\n                    <br>\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"equipment\">{{'equipmentRecall.equipment'| translate}}</label>\r\n                        <select name=\"masterequipmentName\" #masterequipmentName=\"ngModel\"\r\n                            [(ngModel)]=\"recallObj.masterEquipmentId\" [ngModelOptions]=\"{standalone: true}\"\r\n                            class=\"desc form-control frmcontrol sub-equipment\"\r\n                            (change)=\"getEquipments(recallObj.masterEquipmentId)\" pTooltip=\"Please,Select An Equipment\"\r\n                            tooltipPosition=\"bottom\">\r\n                            <option selected disabled>--select--</option>\r\n                            <option *ngFor=\"let s of masterEquipment\" [value]=\"s.id\">\r\n                                {{s.name}}\r\n                            </option>\r\n                        </select>\r\n\r\n\r\n                    </div>\r\n                    <br>\r\n                    <br>\r\n                    <!-- <div class=\"col-md-12\">\r\n                        <label for=\"supplier\">{{'equipmentRecall.supplier'| translate}}</label>\r\n                        <select name=\"supplierName\" #supplierName=\"ngModel\"\r\n                            [(ngModel)]=\"recallObj.supplierId\"\r\n                            [ngModelOptions]=\"{standalone: true}\"\r\n                             class=\"desc form-control frmcontrol sub-equipment\"                       \r\n                             pTooltip=\"Please,Select An Equipment\"\r\n                            tooltipPosition=\"bottom\">\r\n                            <option selected disabled>--select--</option>\r\n                            <option *ngFor=\"let s of suppliersList\" [value]=\"s.id\">\r\n                                {{s.supplierName}}\r\n                            </option>\r\n                        </select>\r\n\r\n\r\n                    </div>\r\n                    <br>\r\n                    <br> -->\r\n                    <div class=\"col-md-6\">\r\n                        <label for=\"ModelNumber\">{{'equipmentRecall.Model-number'| translate}}</label>\r\n                        <input type=\"number\" class=\"form-control frmcontrol\" #ModelNumber=\"ngModel\"\r\n                            [(ngModel)]=\"recallObj.modelNumber\" [ngModelOptions]=\"{standalone: true}\" id=\"ModelNumber\"\r\n                            autofocus pTooltip=\"Enter the Model-number\" tooltipPosition=\"bottom\" />\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6\">\r\n                        <label class=\"version\" for=\"version-number\">{{'equipmentRecall.version-number'|\r\n                            translate}}</label>\r\n                        <input type=\"number\" class=\"form-control frmcontrol\" id=\"version-number\" name=\"VersionNumber\"\r\n                            #VersionNumber=\"ngModel\" [(ngModel)]=\"recallObj.versionNumber\"\r\n                            [ngModelOptions]=\"{standalone: true}\" pTooltip=\"Enter the version-number\"\r\n                            tooltipPosition=\"bottom\" />\r\n\r\n                    </div>\r\n                    <br>\r\n                    <br>\r\n                    <div class=\"col-md-12\">\r\n                        <label class=\"desc-text\" for=\"description\">{{'equipmentRecall.Description'| translate}}</label>\r\n                        <textarea id=\"description\" class=\"form-control frmcontrol sub-equipment\"\r\n                            pTooltip=\"enter A Description\" tooltipPosition=\"bottom\" rows=\"3\" #description=\"ngModel\"\r\n                            name=\"description\" [(ngModel)]=\"recallObj.description\"\r\n                            [ngModelOptions]=\"{standalone: true}\"></textarea>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <label class=\"recalledEq\" for=\"role\">{{'equipmentRecall.Recalled-eq' |translate}}</label>\r\n\r\n                        <ul class=\"list-group\" tooltipPosition=\"bottom\" pTooltip=\"select an equipment\">\r\n\r\n                            <li class=\"list-group-item form-control\" *ngFor=\"let item of supequipments\">\r\n                                <!-- <input type=\"checkbox\" name=\"recalledeq\" id=\"recalledeq\" [value]=\"item.id\"\r\n                                [(ngModel)]=\"recallObj.equipmentsIDs\" name=\"recalledeq\" \r\n                                (onChange)=\"checkCheckBoxvalue($event)\"\r\n                                /> -->\r\n                                \r\n                                <p-checkbox name=\"groupname\" [value]=\"item.id\" [(ngModel)]=\"recallObj.equipmentsIDs\">\r\n                                </p-checkbox>\r\n                              <span> {{item.serialNumber}}</span> \r\n                               \r\n                            </li><br><br><br>\r\n                     \r\n                        </ul>\r\n\r\n                        <!-- <p-multiSelect [options]=\"supequipments\" (onChange)=\"checkCheckBoxvalue($event)\"\r\n                        defaultLabel=\"Select employee\" optionLabel=\"serialNumber\" \r\n                        pTooltip=\"Please,Select one or more employee\" tooltipPosition=\"bottom\" required>\r\n                    </p-multiSelect> -->\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <br>\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-2\">\r\n                        <button pButton pRipple label=\"{{'Actions.Cancel'|translate}}\" icon=\"pi pi-times\"\r\n                            (click)=\"hideDialog()\" type=\"button\" value=\"cancel\" class=\"btn btn-info\"></button>\r\n                    </div>\r\n                    <div class=\"col-lg-2\">\r\n                        <button pButton pRipple label=\"{{'Actions.Save' |translate}}\" icon=\"pi pi-check\" value=\"save\"\r\n                            type=\"submit\" class=\"btn btn-info\"></button>\r\n                    </div>\r\n                </div>\r\n                <br><br><br>\r\n            </fieldset>\r\n\r\n        </div>\r\n    </form>\r\n</div>\r\n<div\r\n    *ngIf=\"currentUser.roleName==='Admin' || currentUser.roleName==='HeadQuarter'|| currentUser.roleName==='Hospital' || currentUser.roleName==='Organization'\">\r\n    <div class=\"container-fluid\">\r\n\r\n        <div class=\"card\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-11\">\r\n                   \r\n                </div>\r\n                <div class=\"col-md-1\" style=\"text-align: right;\">               \r\n                    <button type=\"button\" pButton pRipple icon=\"pi pi-file-pdf\" (click)=\"exportPdf()\"\r\n                        class=\"p-button-warning download\" pTooltip=\"PDF\" tooltipPosition=\"bottom\"></button>\r\n                </div>\r\n            </div>\r\n            <!-- <p-messages [value]=\"msgs\"></p-messages> -->\r\n            <p-toast posinset=\"top-right\"></p-toast>\r\n            <div class=\"card-body\">\r\n           \r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\"><br /></div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n                        <p-table #dt [value]=\"equipments\" [rows]=\"10\" styleClass=\"p-datatable-responsive-demo\"\r\n                            [paginator]=\"true\" [(selection)]=\"selectedProducts\" [rowHover]=\"true\" dataKey=\"id\"\r\n                            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                            [showCurrentPageReport]=\"true\"\r\n                            [globalFilterFields]=\"['equipmentName','department','manufacturer','supplier']\">\r\n                            <ng-template pTemplate=\"caption\">\r\n                                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n\r\n\r\n                                    <span class=\"p-input-icon-right\">\r\n                                        <i class=\"pi pi-search\"></i>\r\n                                        <input pInputText class=\"form-control\" type=\"text\"\r\n                                            (input)=\"dt.filterGlobal($event.target.value,'contains')\"\r\n                                            placeholder=\"{{'search.Search'|translate}}...\" />\r\n                                    </span>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate=\"header\">\r\n                                <!----------------------------Admin View-------------------->\r\n                                <tr\r\n                                    *ngIf=\"currentUser.roleName==='Admin'|| currentUser.roleName==='HeadQuarter'|| currentUser.roleName==='Hospital' || currentUser.roleName==='Organization'\">\r\n                                    <th pSortableColumn=\"supplierName\">{{'equipment.supplier' | translate}} <p-sortIcon\r\n                                            field=\"supplierName\">\r\n                                        </p-sortIcon>\r\n                                    </th>\r\n                                    <th pSortableColumn=\"recallNumber\">{{'equipmentRecall.recall-number' | translate}}\r\n                                        <p-sortIcon field=\"recallNumber\">\r\n                                        </p-sortIcon>\r\n                                    </th>\r\n                                    <th pSortableColumn=\"recallDate\">{{'equipmentRecall.Recall-date' | translate}}\r\n                                        <p-sortIcon field=\"recallDate\">\r\n                                        </p-sortIcon>\r\n                                    </th>\r\n\r\n                                    <th pSortableColumn=\"manufacturer\">{{'equipment.Manufacturer' | translate}}\r\n                                        <p-sortIcon field=\"manufacturer\"></p-sortIcon>\r\n                                    </th>\r\n                                    <th pSortableColumn=\"equipmentName\">{{'equipment.Name' | translate}} <p-sortIcon\r\n                                            field=\"equipmentName\"></p-sortIcon>\r\n                                    </th>\r\n\r\n                                    <th pSortableColumn=\"modelNumber\">{{'equipment.modelNumber' | translate}}\r\n                                        <p-sortIcon field=\"modelNumber\"></p-sortIcon>\r\n                                    </th>\r\n                                    <th pSortableColumn=\"versionNumber\">{{'equipment.versionNumber' | translate}}\r\n                                        <p-sortIcon field=\"versionNumber\"></p-sortIcon>\r\n                                    </th>\r\n                                    <th pSortableColumn=\"serialNumber\">{{'equipment.serialNumber' | translate}}\r\n                                        <p-sortIcon field=\"serialNumber\"></p-sortIcon>\r\n                                    </th>\r\n                                    <th *ngIf=\"currentUser.roleName==='Admin' || currentUser.roleName==='Organization'\"\r\n                                        pSortableColumn=\"healthCareUnitName\">{{'equipment.healthCareUnit' | translate}}\r\n                                        <p-sortIcon field=\"healthCareUnitName\"></p-sortIcon>\r\n                                    </th>\r\n                                    <th *ngIf=\"currentUser.roleName==='Admin'\" pSortableColumn=\"organizationName\">\r\n                                        {{'equipment.organization' | translate}}\r\n                                        <p-sortIcon field=\"organizationName\"></p-sortIcon>\r\n                                    </th>\r\n                                    <!-- <th>{{'Actions.Action' | translate}}</th> -->\r\n                                </tr>\r\n\r\n\r\n                                <!----------------------------Admin View-------------------->\r\n                                <tr\r\n                                    *ngIf=\"currentUser.roleName==='Admin'|| currentUser.roleName==='HeadQuarter'|| currentUser.roleName==='Hospital' || currentUser.roleName==='Organization'\">\r\n                                    <th>\r\n                                        <input pInputText type=\"text\"\r\n                                            (input)=\"dt.filter($event.target.value, 'supplierName', 'contains')\"\r\n                                            [value]=\"dt.filters['supplierName']?.value\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\"\r\n                                            class=\"p-column-filter form-control\">\r\n                                    </th>\r\n                                    <th>\r\n                                        <input pInputText type=\"text\"\r\n                                            (input)=\"dt.filter($event.target.value, 'recallNumber', 'contains')\"\r\n                                            [value]=\"dt.filters['recallNumber']?.value\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\"\r\n                                            class=\"p-column-filter form-control\">\r\n                                    </th>\r\n                                    <th>\r\n                                        <input pInputText type=\"text\"\r\n                                            (input)=\"dt.filter($event.target.value, 'recallDate', 'contains')\"\r\n                                            [value]=\"dt.filters['recallDate']?.value\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\"\r\n                                            class=\"p-column-filter form-control\">\r\n                                    </th>\r\n                                    <th>\r\n                                        <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"manufacturerList\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerName\"\r\n                                            optionValue=\"manufacturerName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                            (onChange)=\"dt.filter($event.value,'manufacturerName','equals')\"\r\n                                            [filterBy]=\"dt.filters['manufacturerName']?.value\"\r\n                                            styleClass=\"ui-column-filter\" class=\"filterDropdwon\"></p-dropdown>\r\n                                        <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"manufacturerList\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerNameAr\"\r\n                                            optionValue=\"manufacturerNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                            (onChange)=\"dt.filter($event.value,'manufacturerNameAr','equals')\"\r\n                                            [filterBy]=\"dt.filters['manufacturerNameAr']?.value\"\r\n                                            styleClass=\"ui-column-filter\">\r\n                                        </p-dropdown>\r\n                                    </th>\r\n                                    <th>\r\n                                        <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"equipments\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentName\"\r\n                                            optionValue=\"equipmentName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                            (onChange)=\"dt.filter($event.value,'equipmentName','equals')\"\r\n                                            [filterBy]=\"dt.filters['equipmentName']?.value\"\r\n                                            styleClass=\"ui-column-filter\" class=\"filterDropdwon\"></p-dropdown>\r\n                                        <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"equipments\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentNameAr\"\r\n                                            optionValue=\"equipmentNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                            (onChange)=\"dt.filter($event.value,'equipmentNameAr','equals')\"\r\n                                            [filterBy]=\"dt.filters['equipmentNameAr']?.value\"\r\n                                            styleClass=\"ui-column-filter\">\r\n                                        </p-dropdown>\r\n                                    </th>\r\n\r\n                                    <th>\r\n                                        <input pInputText type=\"text\"\r\n                                            (input)=\"dt.filter($event.target.value, 'modelNumber', 'contains')\"\r\n                                            [value]=\"dt.filters['modelNumber']?.value\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\"\r\n                                            class=\"p-column-filter form-control\">\r\n                                    </th>\r\n                                    <th>\r\n                                        <input pInputText type=\"text\"\r\n                                            (input)=\"dt.filter($event.target.value, 'versionNumber', 'contains')\"\r\n                                            [value]=\"dt.filters['versionNumber']?.value\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\"\r\n                                            class=\"p-column-filter form-control\">\r\n                                    </th>\r\n                                    <th>\r\n                                        <input pInputText type=\"text\"\r\n                                            (input)=\"dt.filter($event.target.value, 'serialNumber', 'contains')\"\r\n                                            [value]=\"dt.filters['serialNumber']?.value\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\"\r\n                                            class=\"p-column-filter form-control\">\r\n                                    </th>\r\n                                    <th *ngIf=\"currentUser.roleName==='Admin' || currentUser.roleName==='Organization'\">\r\n                                        <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"healthCareUnitsList\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthCareUnitName\"\r\n                                            optionValue=\"healthCareUnitName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                            (onChange)=\"dt.filter($event.value,'healthCareUnitName','equals')\"\r\n                                            [filterBy]=\"dt.filters['healthCareUnitName']?.value\"\r\n                                            styleClass=\"ui-column-filter\" class=\"filterDropdwon\"></p-dropdown>\r\n                                        <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"healthCareUnitsList\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\"\r\n                                            optionLabel=\"healthCareUnitNameAr\" optionValue=\"healthCareUnitNameAr\"\r\n                                            [showClear]=\"true\" appendTo=\"body\"\r\n                                            (onChange)=\"dt.filter($event.value,'healthCareUnitNameAr','equals')\"\r\n                                            [filterBy]=\"dt.filters['healthCareUnitNameAr']?.value\"\r\n                                            styleClass=\"ui-column-filter\">\r\n                                        </p-dropdown>\r\n                                    </th>\r\n                                    <th *ngIf=\"currentUser.roleName==='Admin'\">\r\n                                        <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"organizations\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"Name\"\r\n                                            optionValue=\"Name\" [showClear]=\"true\" appendTo=\"body\"\r\n                                            (onChange)=\"dt.filter($event.value,'Name','equals')\"\r\n                                            [filterBy]=\"dt.filters['Name']?.value\" styleClass=\"ui-column-filter\"\r\n                                            class=\"filterDropdwon\"></p-dropdown>\r\n                                        <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"organizations\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"NameAr\"\r\n                                            optionValue=\"NameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                            (onChange)=\"dt.filter($event.value,'NameAr','equals')\"\r\n                                            [filterBy]=\"dt.filters['NameAr']?.value\" styleClass=\"ui-column-filter\">\r\n                                        </p-dropdown>\r\n                                    </th>\r\n                                    <!-- <th></th> -->\r\n                                </tr>\r\n\r\n                            </ng-template>\r\n                            <ng-template pTemplate=\"body\" let-eq>\r\n                                <!----------------------------Admin View-------------------->\r\n\r\n                                <tr\r\n                                    *ngIf=\"currentUser.roleName==='Admin' || currentUser.roleName==='HeadQuarter'|| currentUser.roleName==='Hospital' || currentUser.roleName==='Organization'\">\r\n                                    <td>{{eq.supplierName}}</td>\r\n                                    <td>{{eq.recallNumber}}</td>\r\n                                    <td>{{eq.recallDate}}</td>\r\n                                    <td>{{translate.currentLang == \"En\" ? eq.manufacturerName:eq.manufacturerNameAr}}\r\n                                    </td>\r\n                                    <td>{{translate.currentLang == \"En\" ? eq.equipmentName:eq.equipmentNameAr}}</td>\r\n                                    <td>{{eq.modelNumber}}</td>\r\n                                    <td>{{eq.versionNumber}} </td>\r\n                                    <td>{{eq.serialNumber}} </td>\r\n                                    <td *ngIf=\"currentUser.roleName==='Organization'|| currentUser.roleName==='Admin'\">\r\n                                        {{translate.currentLang == \"En\" ?\r\n                                        eq.healthCareUnitName:eq.healthCareUnitNameAr}}</td>\r\n                                    <td *ngIf=\"currentUser.roleName==='Admin'\">{{translate.currentLang == \"En\" ?\r\n                                        eq.organizationName:eq.organizationNameAr}}</td>\r\n                                </tr>\r\n\r\n                            </ng-template>\r\n                            <ng-template pTemplate=\"summary\">\r\n                                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                                    {{'In total there are.In total there are'| translate}} {{equipments ?\r\n                                    equipments.length\r\n                                    : 0 }}\r\n                                    {{'Sidebar.equipments'| translate}}.\r\n                                </div>\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div\r\n    *ngIf=\"currentUser.roleName==='Technician' || currentUser.roleName==='City' || currentUser.roleName==='Governorate' || currentUser.roleName==='DataEntry'\">\r\n    <h2>please,Contact organization for more details</h2>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Equipment } from 'src/app/Shared/Models/Equipment';\r\nimport { EquipmentRecall } from 'src/app/Shared/Models/equipment-recall';\r\nimport { HealthCareUnit } from 'src/app/Shared/Models/HealthCareUnit';\r\nimport { MasterEquipment } from 'src/app/Shared/Models/MasterEquipment';\r\nimport { Supplier } from 'src/app/Shared/Models/Supplier';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\nimport { MasterequipmentService } from 'src/app/Shared/services/masterequipment.service';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { OrganizationService } from 'src/app/Shared/services/organization.service';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\nimport { Organization } from 'src/app/Shared/Models/Organization';\r\nimport { Router } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport './../../../../assets/fonts/Cairo-Regular-normal.js';\r\nimport { DatePipe } from '@angular/common';\r\n@Component({\r\n  selector: 'app-equipment-recall',\r\n  templateUrl: './equipment-recall.component.html',\r\n  styleUrls: ['./equipment-recall.component.css']\r\n})\r\nexport class EquipmentRecallComponent implements OnInit {\r\n  currentUser: User;\r\n  equipments: Equipment[];\r\n  supequipments: Equipment[];\r\n  hospitals: Equipment[];\r\n  masterEquipment: MasterEquipment[];\r\n  recallObj: EquipmentRecall;\r\n  suppliersList: Supplier[];\r\n  suppliers: Equipment[];\r\n  healthCareUnitsList: HealthCareUnit[]\r\n  organizations: Organization[];\r\n  adminList: Equipment[];\r\n  orgs: Equipment[];\r\n  newRows: string[];\r\n  temp: any[];\r\n  constructor(private userService: UserService,\r\n    public translate: TranslateService,\r\n    private equipmentService: EquipmentService,\r\n    private masterEquipmentService: MasterequipmentService,\r\n    private sharedService: SharedService,\r\n    private organizationService: OrganizationService,\r\n    private router: Router,\r\n    private messageService: MessageService,\r\n    private datepipe: DatePipe) { this.currentUser = this.userService.currentUserValue; }\r\n\r\n  ngOnInit(): void {\r\n    this.sharedService.getAllunits().subscribe(data => { this.healthCareUnitsList = data });\r\n    this.organizationService.getAllOrganization().subscribe(data => { this.organizations = data })\r\n    this.recallObj = {\r\n      id: 0,\r\n      masterEquipmentId: 0,\r\n      recallDate: new Date(),\r\n      recallNumber: 0,\r\n      recallSubject: '',\r\n      modelNumber: 0,\r\n      versionNumber: 0,\r\n      description: '',\r\n      equipmentsIDs: [],\r\n      supplierId: 0\r\n    }\r\n\r\n    this.hospitals = []\r\n    this.suppliers = [];\r\n    this.orgs = []\r\n    this.getAll();\r\n    this.masterEquipmentService.getAll().subscribe(data => {\r\n      this.masterEquipment = data;\r\n      //console.log(\"masterEquipment\", this.masterEquipment) \r\n    });\r\n    this.sharedService.getAllSuppliers().subscribe(data => { this.suppliersList = data })\r\n  }\r\n  saveProduct(myform: NgForm) {\r\n    this.recallObj.supplierId = this.currentUser.supplierId\r\n    console.log(myform)\r\n    this.equipmentService.addEquipmentRecall(this.recallObj).subscribe(data => {\r\n      if (this.translate.currentLang == 'En') {\r\n        this.messageService.add({ severity: 'info', detail: 'Equipment Recall Request saved successfully' });\r\n\r\n\r\n      }\r\n      else {\r\n        this.messageService.add({ severity: 'info', detail: 'تم إضافة الطلب بنجاح' });\r\n\r\n      }\r\n\r\n    });\r\n    this.recallObj = {\r\n      id: 0,\r\n      masterEquipmentId: 0,\r\n      recallDate: new Date(),\r\n      recallNumber: 0,\r\n      recallSubject: '',\r\n      modelNumber: 0,\r\n      versionNumber: 0,\r\n      description: '',\r\n      equipmentsIDs: [],\r\n      supplierId: 0\r\n    }\r\n\r\n    console.log(\"yomna\")\r\n  }\r\n  exportPdf() {\r\n    //var tble = document.getElementById('pdfTable')\r\n\r\n    let PDF = new jsPDF('p', 'mm', [297, 250]);\r\n    PDF.addFont(\"../assets/fonts/ARIALUNI.TTF\", \"ARIALUNI\", \"normal\");\r\n    PDF.setFont('ARIALUNI');\r\n    var img = new Image();\r\n    img.src = '../assets/images/biologo.png';\r\n    if (this.translate.currentLang == \"En\") {\r\n      PDF.addImage(img, 'png', 10, 10, 23, 23)\r\n      PDF.text(\"Recalled Equipments\", 50, 25);\r\n    }\r\n    else if (this.translate.currentLang == \"Ar\") {\r\n      PDF.addImage(img, 'png', 210, 10, 23, 23)\r\n      PDF.text(\"الآلات المستدعاه\", 180, 25);\r\n    }\r\n    var y = 0;\r\n    var rows = [];\r\n    this.newRows = [];\r\n\r\n    if (this.equipments.length > 0) {\r\n      if (this.translate.currentLang == \"En\") {\r\n        this.equipments.forEach(equip => {\r\n          this.temp = [equip.supplierName, equip.recallNumber,\r\n          this.datepipe.transform(equip.recallDate, 'yyyy-MM-dd'),\r\n          equip.manufacturerName,equip.equipmentName,equip.modelNumber,equip.versionNumber,\r\n          equip.serialNumber,equip.healthCareUnitName,\r\n          equip.organizationName];\r\n          rows.push(this.temp);\r\n        });\r\n        (PDF as any).autoTable({\r\n          head: [[\r\n            {\r\n            content: \"\", colSpan: 10, styles: {\r\n              fillColor: [255, 255, 255],\r\n              textColor: [0, 0, 0]\r\n            }, font: 'ARIALUNI',\r\n          }],\r\n          [\"Supplier Name\", \"Recall Number\", \"Recall Date\", \"Brand\", \"Equipment Name\",\r\n           \"model #\", \"version #\", \"Serial #\", \"Hospital\", \"Organization\"]],\r\n          startY: y += 40,\r\n          body: rows,\r\n          styles: { font: 'ARIALUNI' },\r\n        });\r\n        rows = [];\r\n      }\r\n      else if (this.translate.currentLang == \"Ar\") {\r\n        this.equipments.forEach(equip => {\r\n          this.temp = [equip.supplierNameAr, equip.recallNumber,\r\n            this.datepipe.transform(equip.recallDate, 'yyyy-MM-dd'),\r\n            equip.manufacturerNameAr,equip.equipmentNameAr,equip.modelNumber,equip.versionNumber,\r\n            equip.serialNumber,equip.healthCareUnitNameAr,\r\n            equip.organizationNameAr];\r\n          rows.push(this.temp);\r\n        });\r\n        (PDF as any).autoTable({\r\n          head: [[{ content: \"\", colSpan: 10, styles: { fillColor: [255, 255, 255], textColor: [0, 0, 0], halign: 'right' }, font: 'ARIALUNI', }],\r\n          [\"المنظمه\", \"المستشفي \", \"الرقم المتسلسل\", \"رقم الاصدار\", \"رقم الموديل\", \"الاسم \", \"الصانع\", \"تاريخ الطلب\",\"رقم الطلب\", \"المورد\"]],\r\n          startY: y += 40,\r\n          body: rows,\r\n          styles: { font: 'ARIALUNI' }\r\n        });\r\n        rows = [];\r\n      }\r\n\r\n    }\r\n    ;\r\n    PDF.save(\"table.pdf\");\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n  getAll() {\r\n    if (this.currentUser.roleName == 'Admin') {\r\n      this.adminList = [];\r\n      this.equipmentService.GetAllRecalledEquipments().\r\n        subscribe(data => {\r\n          this.equipments = data, console.log(this.equipments)\r\n\r\n\r\n        })\r\n    }\r\n\r\n    if (this.currentUser.roleName == 'Supplier') {\r\n      this.equipmentService.GetAllRecalledEquipments().\r\n        subscribe(data => {\r\n          this.equipments = data, console.log(this.equipments)\r\n          this.equipments.forEach(element => {\r\n            if (element.supplierId == this.currentUser.supplierId) {\r\n              this.suppliers.push(element)\r\n            }\r\n            if (this.currentUser.roleName == 'Supplier') {\r\n              this.equipments = this.suppliers\r\n              console.log(this.suppliers)\r\n            }\r\n          });\r\n        })\r\n    }\r\n    if (this.currentUser.roleName == 'Organization') {\r\n      console.log(this.currentUser)\r\n      console.log(\"Organization\")\r\n      this.equipmentService.GetAllRecalledEquipments().\r\n        subscribe(data => {\r\n          this.equipments = data,\r\n            this.equipments.forEach(element => {\r\n              if (element.organizationId == this.currentUser.organizationId) {\r\n                this.orgs.push(element)\r\n              }\r\n              if (this.currentUser.roleName == 'Hospital') {\r\n                this.equipments = this.orgs\r\n                console.log(this.orgs)\r\n              }\r\n            })\r\n        });\r\n    }\r\n\r\n    if (this.currentUser.roleName == 'Hospital') {\r\n      console.log(this.currentUser)\r\n      console.log(\"hospital\")\r\n      this.equipmentService.GetAllRecalledEquipments().\r\n        subscribe(data => {\r\n          this.equipments = data,\r\n            this.equipments.forEach(element => {\r\n              if (element.healthCareUnitId == this.currentUser.healthCareUnitId) {\r\n                this.hospitals.push(element)\r\n              }\r\n              if (this.currentUser.roleName == 'Hospital') {\r\n                this.equipments = this.hospitals\r\n                console.log(this.hospitals)\r\n              }\r\n            })\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n  getEquipments(id: number) {\r\n    this.suppliers = []\r\n    this.supequipments = []\r\n    console.log(\"uni\", this.supequipments, \"sub\", this.suppliers)\r\n    console.log(\"oooo\", this.recallObj)\r\n    if (this.currentUser.roleName == 'Supplier')\r\n      this.equipmentService.GetAllBymaster(id).\r\n        subscribe(data => {\r\n          this.supequipments = data, console.log(this.supequipments)\r\n\r\n          this.supequipments.forEach(element => {\r\n            console.log(this.currentUser.supplierId, element.supplierId)\r\n            if (element.supplierId == this.currentUser.supplierId) {\r\n              this.suppliers.push(element)\r\n              console.log(this.suppliers)\r\n            }\r\n            if (this.currentUser.roleName == 'Supplier') {\r\n              this.supequipments = this.suppliers\r\n              console.log(this.suppliers)\r\n            }\r\n          });\r\n        })\r\n  }\r\n  // checkCheckBoxvalue(event){\r\n  //   var index = this.recallObj.equipmentsIDs.length;\r\n  //   if (event.value.length === index + 1) {\r\n  //     if (event.itemValue.id === event.value[index].id) {\r\n  //       this.recallObj.equipmentsIDs.push(event.value[index].id);\r\n  //       //     console.log(\"after push\", this.equipmentObj.employeeIDs);\r\n  //     }\r\n  //   }\r\n  //   else {\r\n  //     var ind = this.recallObj.equipmentsIDs.indexOf(event.itemValue.id);\r\n  //     this.recallObj.equipmentsIDs.splice(ind, 1);\r\n  //     //   console.log(\"after remove\", this.equipmentObj.employeeIDs);\r\n\r\n  // }\r\n  // }\r\n}\r\n","<!--------------------------------Hospital UI------------------------------------->\r\n<form *ngIf=\"currentUser.roleName==='Hospital'\">\r\n    <div class=\"container\">\r\n        <div class=\"header\">\r\n            <h3 class=\"title\" style=\"text-align: center;\">{{'ContractRequest.MaintenanceContractRequest'|translate}}\r\n            </h3>\r\n        </div>\r\n        <p-toast posinset=\"top-right\" life=\"2000\"></p-toast>\r\n        <hr style=\"width: 50%;\">\r\n        <br>\r\n        <button class=\"btn btn-primary\" routerLink=\"/home/ContractRequest\">\r\n            <i class=\"fa fa-arrow-left\"></i></button>\r\n            <br><br><br>\r\n        <div class=\"row\" *ngIf=\"vewid==undefined\">\r\n            <div class=\"col-lg-2\" *ngIf=\"RequestObj.status==0\">\r\n                <input type=\"submit\" (click)=\"onSave('sent')\" value=\"{{'ContractRequest.SendToOrganizatopn'|translate}}\"\r\n                    class=\"btnSubmit btn btn-info\">\r\n            </div>\r\n            <div class=\"col-lg-2\">\r\n                <input type=\"submit\" (click)=\"onSave('save')\" value=\"{{'ContractRequest.Save'|translate}}\"\r\n                    class=\"btnSubmit btn btn-info\">\r\n            </div>\r\n        </div>\r\n        <br><br>\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-2\">\r\n                <label>{{'ContractRequest.RequestNumber' |translate}}</label>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n                <input type=\"number\" pInputText id=\"requestNumber\" class=\"form-control\" name=\"requestNumber\"\r\n                    [(ngModel)]=\"RequestObj.number\" required #barCode=\"ngModel\" disabled />\r\n            </div>\r\n            <div class=\"col-lg-1\">\r\n                <label for=\"date\">{{'ContractRequest.Date'|translate}}</label>\r\n            </div>\r\n            <div class=\"col-lg-5\">\r\n                <input type=\"date\" class=\"form-control\" id=\"Date\" name=\"Date\" placeholder=\"Date\"\r\n                    [(ngModel)]=\"hospitalRequestdate\" disabled>\r\n            </div>\r\n        </div>\r\n        <br><br>\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-2\">\r\n                <label for=\"Description\">{{'ContractRequest.Comment'|translate}}</label>\r\n            </div>\r\n            <div class=\"col-lg-10\" *ngIf=\"vewid==undefined\">\r\n                <textarea class=\"form-control\" id=\"Description\" type=\"text\" [(ngModel)]=\"RequestObj.comments\"\r\n                    [ngModelOptions]=\"{standalone: true}\"></textarea>\r\n            </div>\r\n            <div class=\"col-lg-10\" *ngIf=\"vewid!=undefined\">\r\n                <textarea class=\"form-control\" id=\"Description\" type=\"text\" [(ngModel)]=\"RequestObj.comments\"\r\n                    [ngModelOptions]=\"{standalone: true}\" [disabled]=\"true\"></textarea>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n                <label>\r\n                    <h5>{{'ContractRequest.EquipmentList'|translate}}</h5>\r\n                </label>\r\n            </div>\r\n        </div>\r\n        <br><br>\r\n        <div>\r\n            <h5 style=\"color: blue;\">{{MSG}}</h5>\r\n        </div>\r\n\r\n        <div class=\"row\" *ngIf=\"MSG==undefined ||''\">\r\n\r\n            <div class=\"col-lg-5\">\r\n\r\n                <!--------------------------------All For Add New-------------------->\r\n                <p-table #dt [value]=\"EquipmentList\" [rows]=\"10\" styleClass=\"p-datatable-responsive-demo\"\r\n                    [paginator]=\"true\" [rowHover]=\"true\" dataKey=\"id\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    [showCurrentPageReport]=\"true\" *ngIf=\"RequestID== undefined || RequestID==null\">\r\n                    <h2>fggggggg</h2>\r\n                    <ng-template pTemplate=\"header\">\r\n                        <tr>\r\n                            <th pSortableColumn=\"Code\">{{'equipment.internalCode' | translate}} <p-sortIcon\r\n                                    field=\"Code\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"upaCode\">{{'equipment.upaCode' | translate}} <p-sortIcon\r\n                                    field=\"upaCode\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"equipmentName\">{{'equipment.Name' | translate}} <p-sortIcon\r\n                                    field=\"equipmentName\"></p-sortIcon>\r\n                            </th>\r\n                            <th>{{'equipment.select'|translate}}</th>\r\n                            <!-- <th>{{'equipment.Status'|translate}}</th> -->\r\n                        </tr>\r\n                        <tr>\r\n                            <th>\r\n                                <input pInputText type=\"text\"\r\n                                    (input)=\"dt.filter($event.target.value, 'internalCode', 'contains')\"\r\n                                    [value]=\"dt.filters['internalCode']?.value\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" class=\"p-column-filter form-control\">\r\n                            </th>\r\n                            <th>\r\n                                <input pInputText type=\"text\"\r\n                                    (input)=\"dt.filter($event.target.value, 'upaCode', 'contains')\"\r\n                                    [value]=\"dt.filters['upaCode']?.value\" placeholder=\"{{'search.Search'|translate}}\"\r\n                                    class=\"p-column-filter form-control\">\r\n                            </th>\r\n                            <th>\r\n                                <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"EquipmentList\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentName\"\r\n                                    optionValue=\"equipmentName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                    (onChange)=\"dt.filter($event.value,'equipmentName','equals')\"\r\n                                    [filterBy]=\"dt.filters['equipmentName']?.value\" styleClass=\"ui-column-filter\"\r\n                                    class=\"filterDropdwon\"></p-dropdown>\r\n                                <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"EquipmentList\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentNameAr\"\r\n                                    optionValue=\"equipmentNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                    (onChange)=\"dt.filter($event.value,'equipmentNameAr','equals')\"\r\n                                    [filterBy]=\"dt.filters['equipmentNameAr']?.value\" styleClass=\"ui-column-filter\">\r\n                                </p-dropdown>\r\n                            </th>\r\n                            <th></th>\r\n                            <!-- <th></th> -->\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"body\" let-eq>\r\n                        <tr>\r\n                            <td>{{eq.internalCode}}</td>\r\n                            <td>{{eq.upaCode}}</td>\r\n                            <td>{{translate.currentLang == \"En\" ? eq.equipmentName:eq.equipmentNameAr}}</td>\r\n                            <td *ngIf=\"eq.contractRequestId==null\">\r\n                                <p-checkbox name=\"group1\" [value]=\"eq.id\" [(ngModel)]=\"EquipmentIDs\"></p-checkbox>\r\n                            </td>\r\n                            <td *ngIf=\"eq.contractRequestId!=null && RequestID!=undefined\">\r\n                                <p-checkbox name=\"{{eq.id}}\" [value]=\"eq.id\" id=\"{{eq.id}}\" [(ngModel)]=\"EquipmentIDs\"\r\n                                    binary=\"true\"></p-checkbox>\r\n                            </td>\r\n                            <td *ngIf=\"eq.contractRequestId!=null && RequestID==undefined\">\r\n                                <p-checkbox name=\"group3\" [(ngModel)]=\"EquipmentIDs\" binary=\"true\" [disabled]=\"true\">\r\n                                </p-checkbox>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n                <!--------------------------------All Edit-------------------->\r\n\r\n                <p-table #dt [value]=\"EquipmentListToEdit\" [rows]=\"10\" styleClass=\"p-datatable-responsive-demo\"\r\n                    [paginator]=\"true\" [rowHover]=\"true\" dataKey=\"id\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    [showCurrentPageReport]=\"true\" *ngIf=\"RequestID!=undefined && vewid==undefined\">\r\n                    <ng-template pTemplate=\"header\">\r\n                        <tr>\r\n                            <!-- <th>lllllll</th> -->\r\n                            <th pSortableColumn=\"Code\">{{'equipment.internalCode' | translate}} <p-sortIcon\r\n                                    field=\"Code\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"upaCode\">{{'equipment.upaCode' | translate}} <p-sortIcon\r\n                                    field=\"upaCode\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"equipmentName\">{{'equipment.Name' | translate}} <p-sortIcon\r\n                                    field=\"equipmentName\"></p-sortIcon>\r\n                            </th>\r\n                            <th>{{'equipment.select'|translate}}</th>\r\n                            <!-- <th>{{'equipment.Status'|translate}}</th> -->\r\n                        </tr>\r\n                        <tr>\r\n                            <th>\r\n                                <input pInputText type=\"text\"\r\n                                    (input)=\"dt.filter($event.target.value, 'internalCode', 'contains')\"\r\n                                    [value]=\"dt.filters['internalCode']?.value\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" class=\"p-column-filter form-control\">\r\n                            </th>\r\n                            <th>\r\n                                <input pInputText type=\"text\"\r\n                                    (input)=\"dt.filter($event.target.value, 'upaCode', 'contains')\"\r\n                                    [value]=\"dt.filters['upaCode']?.value\" placeholder=\"{{'search.Search'|translate}}\"\r\n                                    class=\"p-column-filter form-control\">\r\n                            </th>\r\n                            <th>\r\n                                <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"EquipmentList\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentName\"\r\n                                    optionValue=\"equipmentName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                    (onChange)=\"dt.filter($event.value,'equipmentName','equals')\"\r\n                                    [filterBy]=\"dt.filters['equipmentName']?.value\" styleClass=\"ui-column-filter\"\r\n                                    class=\"filterDropdwon\"></p-dropdown>\r\n                                <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"EquipmentList\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentNameAr\"\r\n                                    optionValue=\"equipmentNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                    (onChange)=\"dt.filter($event.value,'equipmentNameAr','equals')\"\r\n                                    [filterBy]=\"dt.filters['equipmentNameAr']?.value\" styleClass=\"ui-column-filter\">\r\n                                </p-dropdown>\r\n                            </th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"body\" let-eq>\r\n                        <tr>\r\n                            <td>{{eq.internalCode}}</td>\r\n                            <td>{{eq.upaCode}}</td>\r\n                            <td>{{translate.currentLang == \"En\" ? eq.equipmentName:eq.equipmentNameAr}}</td>\r\n                            <td *ngIf=\"eq.contractRequestId==null\">\r\n                                <p-checkbox name=\"group1\" [value]=\"eq.id\" [(ngModel)]=\"EquipmentIDs\"></p-checkbox>\r\n                            </td>\r\n                            <td *ngIf=\"eq.contractRequestId!=null && RequestID!=undefined\">\r\n                                <p-checkbox name=\"{{eq.id}}\" [value]=\"eq.id\" id=\"{{eq.id}}\" [(ngModel)]=\"EquipmentIDs\"\r\n                                    binary=\"true\"></p-checkbox>\r\n                            </td>\r\n                            <td *ngIf=\"eq.contractRequestId!=null && RequestID==undefined\">\r\n                                <p-checkbox name=\"group3\" [(ngModel)]=\"EquipmentIDs\" binary=\"true\" [disabled]=\"true\">\r\n                                </p-checkbox>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n            </div>\r\n            <!-- <div> -->\r\n            <div class=\"col-lg-2 btns\" *ngIf=\"translate.currentLang==='En' && vewid==undefined\">\r\n                <div class=\"row\">\r\n                    <button class=\"btnIn btn btn-info\" (click)=\"selectEquipment()\">\r\n                        <i class=\"fa fa-arrow-right\"></i></button>\r\n                </div>\r\n                <br>\r\n                <div class=\"row\">\r\n                    <button class=\"btnIn btn btn-info\" (click)=\"outEquipment()\">\r\n                        <i class=\"fa fa-arrow-left\"></i></button>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-2 btnsAr\" *ngIf=\"translate.currentLang==='Ar' && vewid==undefined\">\r\n                <div class=\"row\">\r\n                    <button class=\"btnIn btn btn-info\" (click)=\"selectEquipment()\">\r\n                        <i class=\"fa fa-arrow-left\"></i>\r\n                    </button>\r\n                </div>\r\n                <br>\r\n                <div class=\"row\">\r\n                    <button class=\"btnIn btn btn-info\" (click)=\"outEquipment()\">\r\n                        <i class=\"fa fa-arrow-right\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <!-- </div> -->\r\n            <div class=\"col-lg-5\">\r\n                <!-----------------------------Add New------------------------>\r\n                <p-table #dtt [value]=\"SelectedEquipmentList\" [rows]=\"10\" styleClass=\"p-datatable-responsive-demo\"\r\n                    [paginator]=\"true\" [rowHover]=\"true\" dataKey=\"id\" [showCurrentPageReport]=\"true\"\r\n                    selectionMode=\"single\" *ngIf=\"RequestID==undefined\">\r\n                    <ng-template pTemplate=\"header\">\r\n                        <tr>\r\n                            <th pSortableColumn=\"Code\">{{'equipment.internalCode' | translate}} <p-sortIcon\r\n                                    field=\"Code\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"upaCode\">{{'equipment.upaCode' | translate}} <p-sortIcon\r\n                                    field=\"upaCode\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"equipmentName\">{{'equipment.Name' | translate}} <p-sortIcon\r\n                                    field=\"equipmentName\"></p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"manufacturer\">{{'equipment.Manufacturer' | translate}} <p-sortIcon\r\n                                    field=\"manufacturer\"></p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"serialNumber\">{{'equipment.modelNumber' | translate}} <p-sortIcon\r\n                                    field=\"serialNumber\"></p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"serialNumber\">{{'equipment.serialNumber' | translate}} <p-sortIcon\r\n                                    field=\"serialNumber\"></p-sortIcon>\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>\r\n                                <input pInputText type=\"text\"\r\n                                    (input)=\"dtt.filter($event.target.value, 'internalCode', 'contains')\"\r\n                                    [value]=\"dtt.filters['internalCode']?.value\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" class=\"p-column-filter form-control\">\r\n                            </th>\r\n                            <th>\r\n                                <input pInputText type=\"text\"\r\n                                    (input)=\"dtt.filter($event.target.value, 'upaCode', 'contains')\"\r\n                                    [value]=\"dtt.filters['upaCode']?.value\" placeholder=\"{{'search.Search'|translate}}\"\r\n                                    class=\"p-column-filter form-control\">\r\n                            </th>\r\n                            <th>\r\n                                <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"SelectedEquipmentList\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentName\"\r\n                                    optionValue=\"equipmentName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                    (onChange)=\"dtt.filter($event.value,'equipmentName','equals')\"\r\n                                    [filterBy]=\"dtt.filters['equipmentName']?.value\" styleClass=\"ui-column-filter\"\r\n                                    class=\"filterDropdwon\"></p-dropdown>\r\n                                <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"SelectedEquipmentList\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentNameAr\"\r\n                                    optionValue=\"equipmentNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                    (onChange)=\"dtt.filter($event.value,'equipmentNameAr','equals')\"\r\n                                    [filterBy]=\"dtt.filters['equipmentNameAr']?.value\" styleClass=\"ui-column-filter\">\r\n                                </p-dropdown>\r\n                            </th>\r\n                            <th>\r\n                                <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"manufacturerList\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerName\"\r\n                                    optionValue=\"manufacturerName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                    (onChange)=\"dtt.filter($event.value,'manufacturerName','equals')\"\r\n                                    [filterBy]=\"dtt.filters['manufacturerName']?.value\" styleClass=\"ui-column-filter\"\r\n                                    class=\"filterDropdwon\"></p-dropdown>\r\n                                <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"manufacturerList\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerNameAr\"\r\n                                    optionValue=\"manufacturerNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                    (onChange)=\"dtt.filter($event.value,'manufacturerNameAr','equals')\"\r\n                                    [filterBy]=\"dtt.filters['manufacturerNameAr']?.value\" styleClass=\"ui-column-filter\">\r\n                                </p-dropdown>\r\n                            </th>\r\n                            <th>\r\n                                <input pInputText type=\"text\"\r\n                                    (input)=\"dtt.filter($event.target.value, 'modelNumber', 'contains')\"\r\n                                    [value]=\"dtt.filters['modelNumber']?.value\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" class=\"p-column-filter form-control\">\r\n                            </th>\r\n                            <th>\r\n                                <input pInputText type=\"text\"\r\n                                    (input)=\"dtt.filter($event.target.value, 'serialNumber', 'contains')\"\r\n                                    [value]=\"dtt.filters['serialNumber']?.value\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" class=\"p-column-filter form-control\">\r\n                            </th>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"body\" let-eq>\r\n                        <tr id=\"{{eq.id}}\" (click)=\"selectEquipmentToOut(eq.id)\">\r\n                            <td>{{eq.internalCode}}</td>\r\n                            <td>{{eq.upaCode}}</td>\r\n                            <td>{{translate.currentLang == \"En\" ? eq.equipmentName:eq.equipmentNameAr}}</td>\r\n                            <td>{{translate.currentLang == \"En\" ? eq.manufacturerName:eq.manufacturerNameAr}}</td>\r\n                            <td>{{eq.modelNumber}}</td>\r\n                            <td>{{eq.serialNumber}}</td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n                <!-----------------------------Edit------------------------>\r\n                <p-table #dtt [value]=\"RequestObj.equipments\" [rows]=\"10\" styleClass=\"p-datatable-responsive-demo\"\r\n                    [paginator]=\"true\" [rowHover]=\"true\" dataKey=\"id\" [showCurrentPageReport]=\"true\"\r\n                    selectionMode=\"single\" *ngIf=\"RequestID!=undefined && vewid==undefined\">\r\n\r\n                    <ng-template pTemplate=\"header\">\r\n                        <tr>\r\n                            <th pSortableColumn=\"Code\">{{'equipment.internalCode' | translate}} <p-sortIcon\r\n                                    field=\"Code\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"upaCode\">{{'equipment.upaCode' | translate}} <p-sortIcon\r\n                                    field=\"upaCode\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"equipmentName\">{{'equipment.Name' | translate}} <p-sortIcon\r\n                                    field=\"equipmentName\"></p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"manufacturer\">{{'equipment.Manufacturer' | translate}} <p-sortIcon\r\n                                    field=\"manufacturer\"></p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"serialNumber\">{{'equipment.modelNumber' | translate}} <p-sortIcon\r\n                                    field=\"serialNumber\"></p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"serialNumber\">{{'equipment.serialNumber' | translate}} <p-sortIcon\r\n                                    field=\"serialNumber\"></p-sortIcon>\r\n                            </th>\r\n                            <th></th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>\r\n                                <input pInputText type=\"text\"\r\n                                    (input)=\"dtt.filter($event.target.value, 'internalCode', 'contains')\"\r\n                                    [value]=\"dtt.filters['internalCode']?.value\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" class=\"p-column-filter form-control\">\r\n                            </th>\r\n                            <th>\r\n                                <input pInputText type=\"text\"\r\n                                    (input)=\"dtt.filter($event.target.value, 'upaCode', 'contains')\"\r\n                                    [value]=\"dtt.filters['upaCode']?.value\" placeholder=\"{{'search.Search'|translate}}\"\r\n                                    class=\"p-column-filter form-control\">\r\n                            </th>\r\n                            <th>\r\n                                <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"SelectedEquipmentList\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentName\"\r\n                                    optionValue=\"equipmentName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                    (onChange)=\"dtt.filter($event.value,'equipmentName','equals')\"\r\n                                    [filterBy]=\"dtt.filters['equipmentName']?.value\" styleClass=\"ui-column-filter\"\r\n                                    class=\"filterDropdwon\"></p-dropdown>\r\n                                <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"SelectedEquipmentList\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentNameAr\"\r\n                                    optionValue=\"equipmentNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                    (onChange)=\"dtt.filter($event.value,'equipmentNameAr','equals')\"\r\n                                    [filterBy]=\"dtt.filters['equipmentNameAr']?.value\" styleClass=\"ui-column-filter\">\r\n                                </p-dropdown>\r\n                            </th>\r\n                            <th>\r\n                                <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"manufacturerList\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerName\"\r\n                                    optionValue=\"manufacturerName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                    (onChange)=\"dtt.filter($event.value,'manufacturerName','equals')\"\r\n                                    [filterBy]=\"dtt.filters['manufacturerName']?.value\" styleClass=\"ui-column-filter\"\r\n                                    class=\"filterDropdwon\"></p-dropdown>\r\n                                <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"manufacturerList\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerNameAr\"\r\n                                    optionValue=\"manufacturerNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                    (onChange)=\"dtt.filter($event.value,'manufacturerNameAr','equals')\"\r\n                                    [filterBy]=\"dtt.filters['manufacturerNameAr']?.value\" styleClass=\"ui-column-filter\">\r\n                                </p-dropdown>\r\n                            </th>\r\n                            <th>\r\n                                <input pInputText type=\"text\"\r\n                                    (input)=\"dtt.filter($event.target.value, 'modelNumber', 'contains')\"\r\n                                    [value]=\"dtt.filters['modelNumber']?.value\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" class=\"p-column-filter form-control\">\r\n                            </th>\r\n                            <th>\r\n                                <input pInputText type=\"text\"\r\n                                    (input)=\"dtt.filter($event.target.value, 'serialNumber', 'contains')\"\r\n                                    [value]=\"dtt.filters['serialNumber']?.value\"\r\n                                    placeholder=\"{{'search.Search'|translate}}\" class=\"p-column-filter form-control\">\r\n                            </th>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"body\" let-eq>\r\n                        <!--  -->\r\n                        <tr id=\"{{eq.id}}\" (click)=\"selectEquipmentToOut(eq.id)\">\r\n                            <!-- (click)=\"outEquipment(eq.id)\" -->\r\n                            <td>{{eq.internalCode}}</td>\r\n                            <td>{{eq.upaCode}}</td>\r\n                            <td>{{translate.currentLang == \"En\" ? eq.equipmentName:eq.equipmentNameAr}}</td>\r\n                            <td>{{translate.currentLang == \"En\" ? eq.manufacturerName:eq.manufacturerNameAr}}</td>\r\n                            <td>{{eq.modelNumber}}</td>\r\n                            <td>{{eq.serialNumber}}</td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n\r\n\r\n            </div>\r\n        </div>\r\n        <!----------------------------------View--------------------------->\r\n        <p-table #dtt [value]=\"RequestObj.equipments\" [rows]=\"10\" styleClass=\"p-datatable-responsive-demo\"\r\n            [paginator]=\"true\" [rowHover]=\"true\" dataKey=\"id\" [showCurrentPageReport]=\"true\" selectionMode=\"single\"\r\n            *ngIf=\"vewid!=undefined\">\r\n\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th >{{'equipment.internalCode' | translate}}\r\n                    </th>\r\n                    <th >{{'equipment.upaCode' | translate}}\r\n                    </th>\r\n                    <th >{{'equipment.Name' | translate}} \r\n                    </th>\r\n                    <th>{{'equipment.Manufacturer' | translate}} \r\n                    </th>\r\n                    <th>{{'equipment.modelNumber' | translate}} \r\n                    </th>\r\n                    <th>{{'equipment.serialNumber' | translate}}\r\n                    </th>\r\n                    <!-- <th></th> -->\r\n                </tr>\r\n                <tr>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dtt.filter($event.target.value, 'internalCode', 'contains')\"\r\n                            [value]=\"dtt.filters['internalCode']?.value\" placeholder=\"{{'search.Search'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th>\r\n                        <input pInputText type=\"text\" (input)=\"dtt.filter($event.target.value, 'upaCode', 'contains')\"\r\n                            [value]=\"dtt.filters['upaCode']?.value\" placeholder=\"{{'search.Search'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th>\r\n                        <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"SelectedEquipmentList\"\r\n                            placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentName\"\r\n                            optionValue=\"equipmentName\" [showClear]=\"true\" appendTo=\"body\"\r\n                            (onChange)=\"dtt.filter($event.value,'equipmentName','equals')\"\r\n                            [filterBy]=\"dtt.filters['equipmentName']?.value\" styleClass=\"ui-column-filter\"\r\n                            class=\"filterDropdwon\"></p-dropdown>\r\n                        <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"SelectedEquipmentList\"\r\n                            placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentNameAr\"\r\n                            optionValue=\"equipmentNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                            (onChange)=\"dtt.filter($event.value,'equipmentNameAr','equals')\"\r\n                            [filterBy]=\"dtt.filters['equipmentNameAr']?.value\" styleClass=\"ui-column-filter\">\r\n                        </p-dropdown>\r\n                    </th>\r\n                    <th>\r\n                        <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"manufacturerList\"\r\n                            placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerName\"\r\n                            optionValue=\"manufacturerName\" [showClear]=\"true\" appendTo=\"body\"\r\n                            (onChange)=\"dtt.filter($event.value,'manufacturerName','equals')\"\r\n                            [filterBy]=\"dtt.filters['manufacturerName']?.value\" styleClass=\"ui-column-filter\"\r\n                            class=\"filterDropdwon\"></p-dropdown>\r\n                        <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"manufacturerList\"\r\n                            placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerNameAr\"\r\n                            optionValue=\"manufacturerNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                            (onChange)=\"dtt.filter($event.value,'manufacturerNameAr','equals')\"\r\n                            [filterBy]=\"dtt.filters['manufacturerNameAr']?.value\" styleClass=\"ui-column-filter\">\r\n                        </p-dropdown>\r\n                    </th>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dtt.filter($event.target.value, 'modelNumber', 'contains')\"\r\n                            [value]=\"dtt.filters['modelNumber']?.value\" placeholder=\"{{'search.Search'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                    <th>\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"dtt.filter($event.target.value, 'serialNumber', 'contains')\"\r\n                            [value]=\"dtt.filters['serialNumber']?.value\" placeholder=\"{{'search.Search'|translate}}\"\r\n                            class=\"p-column-filter form-control\">\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-eq>\r\n                <!--  -->\r\n                <tr id=\"{{eq.id}}\" (click)=\"selectEquipmentToOut(eq.id)\">\r\n                    <!-- (click)=\"outEquipment(eq.id)\" -->\r\n                    <td>{{eq.internalCode}}</td>\r\n                    <td>{{eq.upaCode}}</td>\r\n                    <td>{{translate.currentLang == \"En\" ? eq.equipmentName:eq.equipmentNameAr}}</td>\r\n                    <td>{{translate.currentLang == \"En\" ? eq.manufacturerName:eq.manufacturerNameAr}}</td>\r\n                    <td>{{eq.modelNumber}}</td>\r\n                    <td>{{eq.serialNumber}}</td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n\r\n</form>\r\n\r\n<!--------------------------------Organization UI------------------------------------->\r\n<form *ngIf=\"currentUser.roleName==='Organization'\">\r\n    <div class=\"container\">\r\n        <div class=\"header\">\r\n            <h3 class=\"title\" style=\"text-align: center;\">{{'ContractRequest.SendMaintenanceContractRequest'|translate}}\r\n            </h3>\r\n        </div>\r\n        <p-toast posinset=\"top-right\" life=\"3000\"></p-toast>\r\n        <hr style=\"width: 50%;\">\r\n        <br>\r\n        <div class=\"row\">\r\n            <input type=\"submit\" (click)=\"onOrgRequestSave()\" value=\"{{'ContractRequest.SendToUPA'|translate}}\"\r\n                class=\"btnSubmit btn btn-info\">\r\n        </div>\r\n        <br><br>\r\n        <!-- <div class=\"row\"> -->\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6\">\r\n                <!-- <div class=\"col-lg-1\"> -->\r\n                <label>{{'ContractRequest.RequestNumber' |translate}}</label>\r\n                <!-- </div> -->\r\n                <!-- <div class=\"col-lg-4\"> -->\r\n                <input type=\"number\" pInputText id=\"requestNumber\" class=\"form-control\" name=\"requestNumber\"\r\n                    [(ngModel)]=\"RequestObj.number\" required #barCode=\"ngModel\" disabled />\r\n                <!-- </div> -->\r\n                <!-- <div class=\"col-lg-1\"> -->\r\n                <label for=\"date\">{{'ContractRequest.Date'|translate}}</label>\r\n                <!-- </div> -->\r\n                <!-- /<div class=\"col-lg-5\"> -->\r\n                <input type=\"date\" class=\"form-control\" id=\"Date\" name=\"Date\" placeholder=\"Date\"\r\n                    [(ngModel)]=\"organizationRequestdate\" disabled>\r\n                <!-- </div> -->\r\n            </div>\r\n            <!----------------------------------Search From To Date---------------------->\r\n            <div class=\"col-lg-6\">\r\n                <!-- <div class=\"col-lg-1\"> -->\r\n                <label>{{'ContractRequest.From'|translate}}</label>\r\n                <!-- </div> -->\r\n                <!-- <div class=\"col-lg-4\"> -->\r\n                <input type=\"date\" placeholder=\"{{'search.Search'|translate}}\" #reqDate name=\"requestDate\" id=\"FromDate\"\r\n                    (change)=\"filterFromDate()\" class=\"form-control\">\r\n                <i *ngIf=\"translate.currentLang=='En'\" class=\"form-control-clear pi pi-times\" (click)=\"ClearFromDate()\"\r\n                    id=\"filterBetweenFromDateIdEn\" [hidden]=\"visibleFrom\"></i>\r\n                <i *ngIf=\"translate.currentLang=='Ar'\" class=\"form-control-clear pi pi-times\" (click)=\"ClearFromDate()\"\r\n                    id=\"filterBetweenFromDateIdAr\" [hidden]=\"visibleFrom\"></i>\r\n                <!-- </div> -->\r\n                <!-- <div class=\"col-lg-1\"> -->\r\n                <label>{{'ContractRequest.To'|translate}}</label>\r\n                <!-- </div> -->\r\n                <!-- <div class=\"col-lg-4\"> -->\r\n                <input type=\"date\" placeholder=\"{{'search.Search'|translate}}\" #reqDate name=\"requestDate\" id=\"ToDate\"\r\n                    (change)=\"filterToDate()\" class=\"form-control\">\r\n                <i *ngIf=\"translate.currentLang=='En'\" class=\"form-control-clear pi pi-times\" (click)=\"ClearToDate()\"\r\n                    id=\"filterBetweenToDateIdEn\" [hidden]=\"visibleTo\"></i>\r\n                <i *ngIf=\"translate.currentLang=='Ar'\" class=\"form-control-clear pi pi-times\" (click)=\"ClearToDate()\"\r\n                    id=\"filterBetweenToDateIdAr\" [hidden]=\"visibleTo\"></i>\r\n                <!-- </div> -->\r\n            </div>\r\n        </div>\r\n\r\n        <!-- </div> -->\r\n\r\n        <br><br>\r\n        <h5 style=\"color:red\">{{nullablMSG}}</h5><br>\r\n        <div *ngFor=\"let request of hospitalWithRequestList\" style=\"width: 900px\">\r\n\r\n            <p-accordion>\r\n                <p-accordionTab header=\"{{translate.currentLang == 'En' ? request.hospitalName:request.hospitalNameAr}}\"\r\n                    [selected]=\"true\">\r\n                    <p-table #dt [value]=\"request.contractRequests\" [rows]=\"10\" styleClass=\"p-datatable-responsive-demo\"\r\n                        [paginator]=\"true\" [rowHover]=\"true\" dataKey=\"id\" [showCurrentPageReport]=\"true\">\r\n                        <ng-template pTemplate=\"header\">\r\n                            <tr>\r\n                                <th pSortableColumn=\"Number\">{{'ContractRequest.RequestNumber'|translate}}\r\n                                    <p-sortIcon field=\"Number\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                                <th pSortableColumn=\"Date\">{{'ContractRequest.Date'|translate}} <p-sortIcon\r\n                                        field=\"Date\">\r\n                                    </p-sortIcon>\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>\r\n                                    <input pInputText type=\"text\"\r\n                                        (input)=\"dt.filter($event.target.value, 'number', 'contains')\"\r\n                                        [value]=\"dt.filters['number']?.value\"\r\n                                        placeholder=\"{{'search.Search'|translate}}\"\r\n                                        class=\"p-column-filter form-control\">\r\n\r\n                                </th>\r\n                                <th>\r\n                                    <input pInputText type=\"date\"\r\n                                        (input)=\"dt.filter($event.target.value, 'date', 'contains')\"\r\n                                        [value]=\"dt.filters['date']?.value\" placeholder=\"{{'search.Search'|translate}}\"\r\n                                        class=\"p-column-filter form-control\" #reqDate id=\"{{request.id}}\"\r\n                                        name=\"requestDate\" (change)=\"OnchangDate(request.id,request.hospitalName)\">\r\n                                    <i class=\"form-control-clear pi pi-times\" id=\"{{request.hospitalName}}\"\r\n                                        (click)=\"FilterByDate(request.hospitalName)\" style=\"display: none;\"></i>\r\n                                </th>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"body\" let-req>\r\n                            <tr>\r\n                                <a data-toggle=\"collapse\"\r\n                                    class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle groupLabel\"\r\n                                    href=\"#{{req.id}}\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n                                    <td>\r\n                                        {{req.number}}\r\n                                    </td>\r\n                                </a>\r\n                                <td>{{req.date |date:'medium'}}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <div id=\"{{req.id}}\" class=\"panel-collapse collapse\" style=\"width: 850px\">\r\n                                    <p-table class=\"col-md-9\" #dt [value]=\"req.equipments\" [rows]=\"10\"\r\n                                        styleClass=\"p-datatable-responsive-demo\" [(selection)]=\"selectedProducts\"\r\n                                        [rowHover]=\"true\" dataKey=\"id\" [showCurrentPageReport]=\"true\">\r\n                                        <ng-template pTemplate=\"header\">\r\n                            <tr style=\"font-size: 18px;\">\r\n                                <th>{{'equipment.upaCode'|translate}}</th>\r\n                                <th>{{'equipment.Name'|translate}}</th>\r\n                                <th>{{'equipment.Manufacturer'|translate}}</th>\r\n                                <th>{{'equipment.serialNumber'|translate}}</th>\r\n                                <th>{{'equipment.Department'|translate}}\r\n\r\n                                </th>\r\n                                <th pSortableColumn=\"purchaseDate\">{{'equipment.PurchaseDate'|translate}}</th>\r\n                                <th>{{'equipment.select'|translate}}</th>\r\n                                <th>status</th>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"body\" let-eq>\r\n                            <tr style=\"font-size: 17px;\">\r\n                                <td>{{eq.internalCode}}</td>\r\n                                <td>{{translate.currentLang == \"En\" ? eq.equipmentName:eq.equipmentNameAr}}\r\n                                </td>\r\n                                <td>{{translate.currentLang == \"En\" ?\r\n                                    eq.manufacturerName:eq.manufacturerNameAr}}</td>\r\n                                <td>{{eq.serialNumber}}\r\n                                </td>\r\n                                <td>{{translate.currentLang == \"En\" ?\r\n                                    eq.departmentName:eq.departmentNameAr}}\r\n                                </td>\r\n                                <td>{{eq.purchaseDate | date:'shortDate'}}\r\n                                </td>\r\n                                <td *ngIf=\"eq.organizationRequestId==null\">\r\n                                    <p-checkbox name=\"group1\" [value]=\"eq.id\" [(ngModel)]=\"OrganizationEquipmentIDs\">\r\n                                    </p-checkbox>\r\n                                </td>\r\n                                <td *ngIf=\"eq.organizationRequestId!=null\">\r\n                                    <p-checkbox name=\"group2\" [(ngModel)]=\"OrganizationEquipmentIDs\" binary=\"true\"\r\n                                        [disabled]=\"true\"></p-checkbox>\r\n                                </td>\r\n                                <td *ngIf=\"eq.organizationRequestId!=null\">\r\n                                    sent to UPA\r\n                                </td>\r\n                            </tr>\r\n                        </ng-template>\r\n                    </p-table>\r\n        </div>\r\n        </tr>\r\n        </ng-template>\r\n        </p-table>\r\n        </p-accordionTab>\r\n        </p-accordion>\r\n\r\n    </div>\r\n    </div>\r\n</form>\r\n\r\n<!------------------------------------UPA UI------------------------------------------->\r\n<div class=\"card\" style=\"padding: 2%;\" *ngIf=\" currentUser.roleName==='Admin' \">\r\n    <p-toast></p-toast>\r\n    <p-steps [model]=\"items\" [(activeIndex)]=\"activeIndex\" *ngIf=\"currentUser.roleName==='Admin'\"\r\n        [readonly]=\"true\">\r\n    </p-steps>\r\n</div>\r\n<br><br>\r\n<p-card *ngIf=\"currentUser.roleName==='Admin'\">\r\n    <div [ngSwitch]=\"activeIndex\" *ngIf=\"currentUser.roleName==='Admin'\">\r\n        <div *ngSwitchCase=\"pageNames.page1\">\r\n            <p-toast posinset=\"top-right\"></p-toast>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6\">\r\n                    <div class=\"header\">\r\n                        <h4 class=\"title\">{{'ContractRequest.PrepareMiantenanaceContractRequest'|translate}}</h4>\r\n                        <hr *ngIf=\"translate.currentLang=='En'\" style=\"width: 50%; float: left;\">\r\n                        <hr *ngIf=\"translate.currentLang=='Ar'\" style=\"width: 50%; float: right;\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                    <input type=\"button\" (click)=\"InformHospital()\"\r\n                        value=\"{{'ContractRequest.InformHospital'|translate}}\" class=\"btnSubmit btn btn-info\">\r\n                </div>\r\n            </div>\r\n            <br><br>\r\n            <h5 style=\"color:red\">{{nullablMSG}}</h5><br>\r\n            <div *ngFor=\"let request of orgRequestList\" style=\"width: 850px\">\r\n                <p-accordion>\r\n                    <p-accordionTab\r\n                        header=\"{{translate.currentLang == 'En' ? request.organizationName:request.organizationNameAr}}\"\r\n                        [selected]=\"true\">\r\n                        <p-table #dt [value]=\"request.orgRequests\" [rows]=\"10\" styleClass=\"p-datatable-responsive-demo\"\r\n                            [paginator]=\"true\" [rowHover]=\"true\" dataKey=\"id\" [showCurrentPageReport]=\"true\">\r\n                            <ng-template pTemplate=\"header\">\r\n                                <tr>\r\n                                    <th pSortableColumn=\"Number\">{{'ContractRequest.RequestNumber'|translate}}\r\n                                        <p-sortIcon field=\"Number\">\r\n                                        </p-sortIcon>\r\n                                    </th>\r\n                                    <th pSortableColumn=\"Date\">{{'ContractRequest.Date'|translate}} <p-sortIcon\r\n                                            field=\"Date\">\r\n                                        </p-sortIcon>\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>\r\n                                        <input pInputText type=\"text\"\r\n                                            (input)=\"dt.filter($event.target.value, 'number', 'contains')\"\r\n                                            [value]=\"dt.filters['number']?.value\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\"\r\n                                            class=\"p-column-filter form-control\">\r\n                                    </th>\r\n                                    <th>\r\n                                        <input pInputText type=\"date\"\r\n                                            (input)=\"dt.filter($event.target.value, 'date', 'contains')\"\r\n                                            [value]=\"dt.filters['date']?.value\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\"\r\n                                            class=\"p-column-filter form-control\" #reqDate id=\"{{request.id}}\"\r\n                                            name=\"requestDate\"\r\n                                            (change)=\"OnchangDateInOrg(request.id,request.organizationName)\">\r\n                                        <i class=\"form-control-clear pi pi-times\" id=\"{{request.organizationName}}\"\r\n                                            (click)=\"FilterByDateInOrg(request.organizationName)\"\r\n                                            style=\"display: none;\"></i>\r\n                                    </th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate=\"body\" let-req>\r\n                                <tr>\r\n                                    <a data-toggle=\"collapse\"\r\n                                        class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle groupLabel\"\r\n                                        href=\"#{{req.id}}\" role=\"button\" aria-expanded=\"false\"\r\n                                        aria-controls=\"collapseExample\">\r\n                                        <td>\r\n                                            {{req.number}}\r\n                                        </td>\r\n                                    </a>\r\n                                    <td>{{req.date}}</td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <div id=\"{{req.id}}\" class=\"panel-collapse collapse\" style=\"width: 830px\">\r\n                                        <p-table #dt [value]=\"req.equipments\" [rows]=\"10\"\r\n                                            styleClass=\"p-datatable-responsive-demo\" [(selection)]=\"selectedProducts\"\r\n                                            [rowHover]=\"true\" dataKey=\"id\" [showCurrentPageReport]=\"true\"\r\n                                            class=\"rowtbl\">\r\n                                            <ng-template pTemplate=\"header\">\r\n                                <tr style=\"font-size: 18px;\">\r\n                                    <th>{{'equipment.internalCode'|translate}}</th>\r\n                                    <th>{{'equipment.upaCode'|translate}}</th>\r\n                                    <th>{{'equipment.Name'|translate}}</th>\r\n                                    <th>{{'equipment.Manufacturer'|translate}}</th>\r\n                                    <th>{{'equipment.healthDirectory'|translate}}</th>\r\n                                    <th>{{'equipment.healthDistrict'|translate}}</th>\r\n                                    <th>{{'equipment.healthCareUnit'|translate}}</th>\r\n                                    <th>{{'equipment.select'|translate}}</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>\r\n                                        <input pInputText type=\"text\"\r\n                                            (input)=\"dt.filter($event.target.value, 'internalCode', 'contains')\"\r\n                                            [value]=\"dt.filters['internalCode']?.value\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\"\r\n                                            class=\"p-column-filter form-control\">\r\n                                    </th>\r\n                                    <th>\r\n                                        <input pInputText type=\"text\"\r\n                                            (input)=\"dt.filter($event.target.value, 'upaCode', 'contains')\"\r\n                                            [value]=\"dt.filters['upaCode']?.value\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\"\r\n                                            class=\"p-column-filter form-control\">\r\n                                    </th>\r\n                                    <th>\r\n                                        <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"req.equipments\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentName\"\r\n                                            optionValue=\"equipmentName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                            (onChange)=\"dt.filter($event.value,'equipmentName','equals')\"\r\n                                            [filterBy]=\"dt.filters['equipmentName']?.value\"\r\n                                            styleClass=\"ui-column-filter\" class=\"filterDropdwon\"></p-dropdown>\r\n                                        <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"req.equipments\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"equipmentNameAr\"\r\n                                            optionValue=\"equipmentNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                            (onChange)=\"dt.filter($event.value,'equipmentNameAr','equals')\"\r\n                                            [filterBy]=\"dt.filters['equipmentNameAr']?.value\"\r\n                                            styleClass=\"ui-column-filter\">\r\n                                        </p-dropdown>\r\n                                    </th>\r\n                                    <th>\r\n                                        <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"manufacturerList\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerName\"\r\n                                            optionValue=\"manufacturerName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                            (onChange)=\"dt.filter($event.value,'manufacturerName','equals')\"\r\n                                            [filterBy]=\"dt.filters['manufacturerName']?.value\"\r\n                                            styleClass=\"ui-column-filter\" class=\"filterDropdwon\"></p-dropdown>\r\n                                        <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"manufacturerList\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"manufacturerNameAr\"\r\n                                            optionValue=\"manufacturerNameAr\" [showClear]=\"true\" appendTo=\"body\"\r\n                                            (onChange)=\"dt.filter($event.value,'manufacturerNameAr','equals')\"\r\n                                            [filterBy]=\"dt.filters['manufacturerNameAr']?.value\"\r\n                                            styleClass=\"ui-column-filter\">\r\n                                        </p-dropdown>\r\n                                    </th>\r\n                                    <th>\r\n                                        <p-dropdown *ngIf=\"translate.currentLang==='En'\"\r\n                                            [options]=\"healthDirectoriesList\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\"\r\n                                            optionLabel=\"healthDirectoryName\" optionValue=\"healthDirectoryName\"\r\n                                            [showClear]=\"true\" appendTo=\"body\" optionKey=\"id\" filterBy=\"label\"\r\n                                            (onChange)=\"dt.filter($event.value,'healthDirectoryName','equals') ;fillDistrict($event.value)\"\r\n                                            [filterBy]=\"dt.filters['healthDirectoryName']\" styleClass=\"ui-column-filter\"\r\n                                            class=\"filterDropdwon\"></p-dropdown>\r\n                                        <p-dropdown *ngIf=\"translate.currentLang==='Ar'\"\r\n                                            [options]=\"healthDirectoriesList\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\"\r\n                                            optionLabel=\"healthDirectoryNameAr\" optionValue=\"healthDirectoryNameAr\"\r\n                                            [showClear]=\"true\" appendTo=\"body\"\r\n                                            (onChange)=\"dt.filter($event.value,'healthDirectoryNameAr','contains') ;fillDistrict($event.value)\"\r\n                                            [filterBy]=\"dt.filters['healthDirectoryNameAr']?.value\"\r\n                                            styleClass=\"ui-column-filter\">\r\n                                        </p-dropdown>\r\n                                    </th>\r\n                                    <th>\r\n                                        <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"HealthDistrictsList\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthDistrictName\"\r\n                                            optionValue=\"healthDistrictName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                            (onChange)=\"dt.filter($event.value,'healthDistrictName','contains') ; fillHospital($event.value)\"\r\n                                            [filterBy]=\"dt.filters['healthDistrictName']?.value\"\r\n                                            styleClass=\"ui-column-filter\" class=\"filterDropdwon\"></p-dropdown>\r\n                                        <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"HealthDistrictsList\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\"\r\n                                            optionLabel=\"healthDistrictNameAr\" optionValue=\"healthDistrictNameAr\"\r\n                                            [showClear]=\"true\" appendTo=\"body\"\r\n                                            (onChange)=\"dt.filter($event.value,'healthDistrictNameAr','contains'); fillHospital($event.value)\"\r\n                                            [filterBy]=\"dt.filters['healthDistrictNameAr']?.value\"\r\n                                            styleClass=\"ui-column-filter\">\r\n                                        </p-dropdown>\r\n                                    </th>\r\n                                    <th>\r\n                                        <p-dropdown *ngIf=\"translate.currentLang==='En'\" [options]=\"healthCareUnits\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\" optionLabel=\"healthCareUnitName\"\r\n                                            optionValue=\"healthCareUnitName\" [showClear]=\"true\" appendTo=\"body\"\r\n                                            (onChange)=\"dt.filter($event.value,'healthCareUnitName','equals')\"\r\n                                            [filterBy]=\"dt.filters['healthCareUnitName']?.value\"\r\n                                            styleClass=\"ui-column-filter\" class=\"filterDropdwon\"></p-dropdown>\r\n                                        <p-dropdown *ngIf=\"translate.currentLang==='Ar'\" [options]=\"healthCareUnits\"\r\n                                            placeholder=\"{{'search.Search'|translate}}\"\r\n                                            optionLabel=\"healthCareUnitNameAr\" optionValue=\"healthCareUnitNameAr\"\r\n                                            [showClear]=\"true\" appendTo=\"body\"\r\n                                            (onChange)=\"dt.filter($event.value,'healthCareUnitNameAr','equals')\"\r\n                                            [filterBy]=\"dt.filters['healthCareUnitNameAr']?.value\"\r\n                                            styleClass=\"ui-column-filter\">\r\n                                        </p-dropdown>\r\n                                    </th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate=\"body\" let-eq>\r\n                                <tr style=\"font-size: 17px;\">\r\n                                    <td>{{eq.internalCode}}</td>\r\n                                    <td>{{eq.upaCode}}</td>\r\n                                    <td>{{translate.currentLang == \"En\" ? eq.equipmentName:eq.equipmentNameAr}}\r\n                                    </td>\r\n                                    <td>{{translate.currentLang == \"En\" ?\r\n                                        eq.manufacturerName:eq.manufacturerNameAr}}\r\n                                    </td>\r\n                                    <td>{{translate.currentLang == \"En\" ?\r\n                                        eq.healthDirectoryName:eq.healthDirectoryNameAr}}\r\n                                    </td>\r\n                                    <td>{{translate.currentLang == \"En\" ?\r\n                                        eq.healthDistrictName:eq.healthDistrictNameAr}}\r\n                                    </td>\r\n                                    <td>{{translate.currentLang == \"En\" ?\r\n                                        eq.healthCareUnitName:eq.healthCareUnitNameAr}}\r\n                                    </td>\r\n                                    <td *ngIf=\"eq.contractId==null\">\r\n                                        <p-checkbox name=\"group1\" [value]=\"eq.id\" [(ngModel)]=\"UPAEquipmentIDs\">\r\n                                        </p-checkbox>\r\n                                    </td>\r\n                                    <td *ngIf=\"eq.contractId!=null\">\r\n                                        <p-checkbox name=\"group1\" [value]=\"eq.id\" [(ngModel)]=\"UPAEquipmentIDs\"\r\n                                            binary=\"true\" [disabled]=\"true\"></p-checkbox>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                        </p-table>\r\n            </div>\r\n            </tr>\r\n            </ng-template>\r\n            </p-table>\r\n            </p-accordionTab>\r\n            </p-accordion>\r\n            <br><br>\r\n        </div>\r\n        <div *ngIf=\"translate.currentLang=='En'\" class=\"p-grid p-nogutter p-justify-end btnSubmit\"\r\n            style=\"float: right; margin-top: -5%;\">\r\n            <p-button label=\"Next\" (onClick)=\"nextPage()\" icon=\"pi pi-angle-right\" iconPos=\"right\"></p-button>\r\n        </div>\r\n        <div *ngIf=\"translate.currentLang=='Ar'\" class=\"p-grid p-nogutter p-justify-end btnSubmit\"\r\n            style=\"float: right; margin-top: -3%;\">\r\n            <p-button label=\"التالي\" (onClick)=\"nextPage()\" icon=\"pi pi-angle-right\" iconPos=\"right\"></p-button>\r\n        </div>\r\n    </div>\r\n    <div *ngSwitchCase=\"pageNames.page2\">\r\n        <div class=\"header\">\r\n            <h3 class=\"title\" style=\"text-align: center;\">{{'ContractRequest.CreateMaintenanceContract'|translate}}\r\n            </h3>\r\n        </div>\r\n        <p-toast posinset=\"top-right\"></p-toast>\r\n        <hr style=\"width: 50%;\">\r\n        <br><br>\r\n        <form (ngSubmit)=\"AddContract.valid && CreateContract(AddContract)\" #AddContract=\"ngForm\">\r\n\r\n            <!-- <button pButton pRipple label=\"{{'Actions.Save' |translate}}\" icon=\"pi pi-check\" value=\"save\" type=\"submit\"\r\n                class=\"btn btn-info\"></button> -->\r\n\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-1\">\r\n                    <label>{{'ContractRequest.ContractNumber'|translate}}</label>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                    <input type=\"number\" pInputText id=\"requestNumber\" class=\"form-control\"\r\n                        [(ngModel)]=\"contractObj.number\" [ngModelOptions]=\"{standalone: true}\" disabled />\r\n                </div>\r\n                <div class=\"col-lg-1\">\r\n                    <label>{{'ContractRequest.Supplier'|translate}}</label>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                    <select class=\"form-control\" #supplierName=\"ngModel\" [(ngModel)]=\"contractObj.supplierId\"\r\n                        [ngModelOptions]=\"{standalone: true}\"\r\n                        [class.is-invalid]=\"supplierName.touched && supplierName.errors || AddContract.submitted\"\r\n                        [class.is-valid]=\"supplierName.valid && AddContract.submitted\" required>\r\n\r\n                        <option selected disabled>--select--</option>\r\n                        <option *ngFor=\"let s of suppliersList\" [value]=\"s.id\">\r\n                            {{translate.currentLang == \"En\" ? s.supplierName:s.supplierNameAr}}\r\n                        </option>\r\n                    </select>\r\n                    <div *ngIf=\"(supplierName.touched || AddContract.submitted) && supplierName.errors?.required\">\r\n                        <span class=\"text-danger\">\r\n                            supplier Name is required\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div><br><br>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-1\">\r\n                    <label>{{'ContractRequest.StartDate'|translate}}</label>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                    <input type=\"date\" #fDate=\"ngModel\" id=\"FromDate\" (change)=\"filterBetweenDate()\"\r\n                        class=\"form-control\" [(ngModel)]=\"contractObj.startDate\" [ngModelOptions]=\"{standalone: true}\"\r\n                        [class.is-invalid]=\"fDate.touched && fDate.errors || AddContract.submitted\"\r\n                        [class.is-valid]=\"fDate.valid && AddContract.submitted\" required>\r\n                    <i class=\"form-control-clear pi pi-times\" style=\"display: none;\"></i>\r\n                    <div *ngIf=\"(fDate.touched || AddContract.submitted) && fDate.errors?.required\">\r\n                        <span class=\"text-danger\">\r\n                            From Date is required\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-1\">\r\n                    <label>{{'ContractRequest.EndDate'|translate}}</label>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                    <input type=\"date\" #tDate=\"ngModel\" id=\"ToDate\" (change)=\"filterBetweenDate()\" class=\"form-control\"\r\n                        [(ngModel)]=\"contractObj.endDate\" [ngModelOptions]=\"{standalone: true}\"\r\n                        [class.is-invalid]=\"tDate.touched && tDate.errors || AddContract.submitted\"\r\n                        [class.is-valid]=\"tDate.valid && AddContract.submitted\" required>\r\n                    <i class=\"form-control-clear pi pi-times\" style=\"display: none;\"></i>\r\n                    <div *ngIf=\"(tDate.touched || AddContract.submitted) && tDate.errors?.required\">\r\n                        <span class=\"text-danger\">\r\n                            End Date is required\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div><br><br>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-1\">\r\n                    <label>{{'ContractRequest.Subject'|translate}}</label>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                    <input type=\"text\" #subject=\"ngModel\" id=\"requestSubject\" class=\"form-control\" name=\"reqsub\"\r\n                        [(ngModel)]=\"contractObj.subject\"\r\n                        [class.is-invalid]=\"subject.touched && subject.errors || AddContract.submitted\"\r\n                        [class.is-valid]=\"subject.valid && AddContract.submitted\" required>\r\n                    <div *ngIf=\"(subject.touched || AddContract.submitted)  && subject.errors?.required\">\r\n                        <span class=\"text-danger\">\r\n                            subject is required\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-1\">\r\n                    <label>{{'ContractRequest.Content'|translate}}</label>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"contractObj.contents\"\r\n                        [ngModelOptions]=\"{standalone: true}\"> </textarea>\r\n                </div>\r\n            </div><br><br>\r\n\r\n            <p-table #dt [value]=\"contractEquipment\" [rows]=\"10\" styleClass=\"p-datatable-responsive-demo\"\r\n                [rowHover]=\"true\" dataKey=\"id\" [showCurrentPageReport]=\"true\" class=\"rowtbl\">\r\n                <ng-template pTemplate=\"header\">\r\n                    <tr style=\"font-size: 18px;\">\r\n                        <th>{{'equipment.upaCode'|translate}}</th>\r\n                        <th>{{'equipment.Name'|translate}}</th>\r\n                        <th>{{'equipment.Manufacturer'|translate}}</th>\r\n                        <th>{{'equipment.serialNumber'|translate}}</th>\r\n                        <th>{{'equipment.Department'|translate}}</th>\r\n                        <th>{{'equipment.PurchaseDate'|translate}}</th>\r\n\r\n                    </tr>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"body\" let-eq>\r\n                    <tr style=\"font-size: 17px;\">\r\n                        <td>{{eq.internalCode}}</td>\r\n                        <td>{{translate.currentLang == \"En\" ? eq.equipmentName:eq.equipmentNameAr}}\r\n                        </td>\r\n                        <td>{{translate.currentLang == \"En\" ?\r\n                            eq.manufacturerName:eq.manufacturerNameAr}}</td>\r\n                        <td>{{eq.serialNumber}}\r\n                        </td>\r\n                        <td>{{translate.currentLang == \"En\" ?\r\n                            eq.departmentName:eq.departmentNameAr}}\r\n                        </td>\r\n                        <td>{{eq.purchaseDate | date:'shortDate'}}\r\n                        </td>\r\n                    </tr>\r\n                </ng-template>\r\n            </p-table>\r\n            <br>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-4\">\r\n                    <div class=\"p-grid p-nogutter p-justify-between btnSubmit\">\r\n                        <p-button label=\"{{'ContractRequest.Back'|translate}}\" (onClick)=\"prevPage()\"\r\n                            icon=\"pi pi-angle-left\"></p-button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-8\">\r\n\r\n                    <button pButton pRipple label=\"{{'Actions.Save' |translate}}\" icon=\"pi pi-check\" value=\"save\"\r\n                        type=\"submit\" class=\"btn btn-info\"></button>\r\n                    <!-- <input type=\"submit\" value=\"Save\" class=\"btnSubmit btn btn-primary\"\r\n                        style=\"float: right;width: 70px;\"> -->\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </form>\r\n        <br>\r\n\r\n    </div>\r\n    </div>\r\n</p-card>","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ContractRequest, ContractRequestVM, ContractVM, OrganizationRequests } from 'src/app/Shared/Models/ContractRequest';\r\nimport { Equipment, EquipmentVM } from 'src/app/Shared/Models/Equipment';\r\nimport { EquipmentService } from 'src/app/Shared/services/equipment.service';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\nimport { data } from 'jquery';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\nimport { ContractService } from 'src/app/Shared/services/contract.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { MessageService } from 'primeng/api';\r\nimport { HealthCareUnit } from 'src/app/Shared/Models/HealthCareUnit';\r\nimport { OrganizationContractRequest } from 'src/app/Shared/Models/OrganizationContractRequest';\r\nimport { Manufacturer } from 'src/app/Shared/Models/Manufacturer';\r\nimport { SharedService } from 'src/app/Shared/services/shared.service';\r\nimport { dateVM } from 'src/app/Shared/Models/dateVM';\r\nimport { element } from 'protractor';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { healthDirectory } from 'src/app/Shared/Models/healthDirectory';\r\nimport { HealthDistrict } from 'src/app/Shared/Models/HealthDistrict';\r\nimport { Contract } from 'src/app/Shared/Models/Contract';\r\nimport { Supplier } from 'src/app/Shared/Models/Supplier';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\nimport { RequestStatus } from 'src/app/Shared/Models/RequestStatus';\r\nexport enum pageNames {\r\n  page1,\r\n  page2\r\n}\r\n@Component({\r\n  selector: 'app-contract-request',\r\n  templateUrl: './contract-request.component.html',\r\n  styleUrls: ['./contract-request.component.css']\r\n})\r\nexport class ContractRequestComponent implements OnInit {\r\n  RequestObj: ContractRequestVM;\r\n  // RequestObjToEdit: ContractRequestVM;\r\n  OrganizationRequestObj: OrganizationContractRequest;\r\n  EquipmentList: Equipment[];\r\n  EquipmentListToEdit: Equipment[];\r\n  EquipmentIDs: number[] = [];\r\n  OrganizationEquipmentIDs: number[] = [];\r\n  UPAEquipmentIDs: number[] = [];\r\n  SelectedEquipmentList: Equipment[] = [];\r\n  SelectedEquipmentListForEdit: Equipment[];\r\n  ALLEquipmentListForEdit: Equipment[] = [];\r\n  SelectedtList: Equipment[] = [];\r\n  isFound: boolean = false;\r\n  isFoundInEdit: boolean = false;\r\n  isFoundInList: boolean = false;\r\n  newEquip: Equipment;\r\n  currentUser: User;\r\n  hospitalRequestdate: string;\r\n  organizationRequestdate: string;\r\n  errorMsg: string;\r\n  successMsg: string;\r\n  hospitalList: ContractVM[];\r\n  hospitalWithRequestList: ContractVM[] = [];\r\n  hospitalWithRequestList1: ContractVM[] = [];\r\n  nullablMSG: string;\r\n  MSG: string;\r\n  manufacturerList: Manufacturer[];\r\n  orgId: number;\r\n  d: dateVM;\r\n  dfrom: string;\r\n  dto: string;\r\n  items: MenuItem[];\r\n  RequestID:number;\r\n  vewid:number;\r\n  organizationRequestList: OrganizationRequests[];\r\n  orgRequestList: OrganizationRequests[] = [];\r\n  healthDirectoriesList: healthDirectory[];\r\n  HealthDistrictsList: HealthDistrict[];\r\n  healthCareUnits: HealthCareUnit[];\r\n  suppliersList: Supplier[];\r\n  equipmentInContract: Equipment[];\r\n  contractObj: Contract;\r\n  contractEquipment: Equipment[];\r\n  EquipmentInEachContract: Equipment[];\r\n  contractList: Contract[];\r\n  contract: Contract;\r\n  pageNames = pageNames;\r\n  visibleFrom:boolean=true;\r\n  visibleTo:boolean=true;\r\n  requestStatus:RequestStatus;\r\n  activeIndex = pageNames.page1;\r\n  selected:boolean=false;\r\n \r\n  constructor(public translate: TranslateService, private equipmentService: EquipmentService,\r\n    private primengConfig: PrimeNGConfig, private userService: UserService,\r\n    private contractRequestService: ContractService, private datePipe: DatePipe,\r\n    private messageService: MessageService, private sharedService: SharedService,\r\n    private router:Router,private activeRoute: ActivatedRoute) { this.currentUser = this.userService.currentUserValue; }\r\n\r\n  ngOnInit(): void {\r\n    this.SelectedEquipmentListForEdit=[];\r\n    console.log('SelectedEquipmentListForEdit from oninit',this.SelectedEquipmentListForEdit)\r\n\r\n    this.RequestID = this.activeRoute.snapshot.params['id'];\r\n    this.vewid= this.activeRoute.snapshot.params['vewid'];\r\n    \r\n    this.primengConfig.ripple = true;\r\n    this.requestStatus={\r\n      Status:'',\r\n      StatusAr:'',\r\n      id:0\r\n    }\r\n    \r\n    this.RequestObj = {\r\n      id: 0,\r\n      hospitalId: 0,\r\n      number: 0,\r\n      date: new Date,\r\n      comments: '',\r\n      status:0,\r\n      equipments: [],\r\n      numberOfEquipment:0\r\n    }\r\n    this.OrganizationRequestObj = {\r\n      id: 0,\r\n      organizationId: 0,\r\n      number: 0,\r\n      date: new Date,\r\n      equipmentIDs: []\r\n    }\r\n    this.contractObj = {\r\n      id: 0,\r\n      number: 0,\r\n      startDate: null,\r\n      endDate: null,\r\n      contents: '',\r\n      healthCareUnitId: null,\r\n      subject: '',\r\n      supplierId: null,\r\n      supplierName: '',\r\n      supplierNameAr: '',\r\n      equipmentIDs: []\r\n    }\r\n    this.d = {\r\n      from: null,\r\n      to: null\r\n    }\r\n    if(this.RequestID!=undefined)\r\n    {\r\n      this.getRequestToEdit(this.RequestID);\r\n    }\r\n    this.sharedService.getAllmanufacturer().subscribe(data => { this.manufacturerList = data });\r\n    this.hospitalRequestdate = this.datePipe.transform(this.RequestObj.date, 'yyyy-MM-dd');\r\n    this.organizationRequestdate = this.datePipe.transform(this.OrganizationRequestObj.date, 'yyyy-MM-dd');\r\n    this.RequestObj.number = Math.floor((Math.random() * 1000) + 1);\r\n    this.RequestObj.hospitalId = this.currentUser.healthCareUnitId;\r\n    this.OrganizationRequestObj.organizationId = this.currentUser.organizationId;\r\n    this.OrganizationRequestObj.number = Math.floor((Math.random() * 1000) + 1);\r\n    if (this.currentUser.roleName == \"Hospital\") {\r\n      this.getAllEquipment(this.currentUser.healthCareUnitId);\r\n    }\r\n    if (this.currentUser.roleName == \"Organization\") {\r\n      this.getAllRequestsForOrg();\r\n    }\r\n    this.orgId = this.currentUser.organizationId;\r\n    this.sharedService.getAllmanufacturer().subscribe(data => { this.manufacturerList = data });\r\n    this.sharedService.getAllHealthDirectories().subscribe(data => { this.healthDirectoriesList = data });\r\n    this.sharedService.getAllSuppliers().subscribe(data => { this.suppliersList = data });\r\n    if (this.currentUser.roleName == \"Admin\") {\r\n      this.getRequestForUPA();\r\n    }\r\n    this.items = [{\r\n      label: 'Prepare Contract Request'\r\n    },\r\n    {\r\n      label: 'Create Contract'\r\n    }];\r\n  }\r\n\r\n  getAllEquipment(hosId) {\r\n    this.equipmentService.getEquipmentInHospital(hosId).subscribe(data => {\r\n      this.EquipmentList = data\r\n      if (this.EquipmentList.length == 0) {\r\n        this.MSG = \"there is no equipment need to be in request\";\r\n      }\r\n    });\r\n  }\r\n\r\n  selectEquipment() \r\n  {\r\n    this.EquipmentIDs.forEach(id => {\r\n      this.equipmentService.getEquipmentById(id).subscribe(data => {\r\n        const index = this.EquipmentList.findIndex(item => item.id === data.id);\r\n        if(this.RequestID!=undefined)\r\n        {\r\n          var indexForEditSelectedList=this.EquipmentListToEdit.findIndex(item=>item.id === data.id);\r\n        }\r\n        if (this.RequestObj.equipments.length > 0 && this.SelectedEquipmentList.length > 0) {\r\n          this.RequestObj.equipments.forEach(eq => {\r\n            if (eq.id == data.id) {\r\n              this.isFound = true;\r\n            }\r\n          });\r\n          if (!this.isFound) {\r\n            this.RequestObj.equipments.push(data);\r\n            this.SelectedEquipmentList.push(data);\r\n            this.EquipmentList.splice(index, 1);\r\n            this.EquipmentListToEdit.splice(indexForEditSelectedList,1);\r\n          }\r\n          this.isFound = false;\r\n        }\r\n        else {\r\n          this.RequestObj.equipments.push(data);\r\n          this.SelectedEquipmentList.push(data);\r\n          this.EquipmentList.splice(index, 1);\r\n          this.EquipmentListToEdit.splice(indexForEditSelectedList,1);\r\n        }\r\n      });\r\n    });\r\n    // this.SelectedEquipmentList.forEach(element=>{\r\n    //   this.SelectedEquipmentListForEdit.push(element);\r\n    // })\r\n    // console.log(\"this.SelectedEquipmentList\",this.SelectedEquipmentList)\r\n  }\r\n  outEquipment() {\r\n    console.log(\"this.SelectedtList\",this.SelectedtList)\r\n    this.SelectedtList.forEach(equip => {\r\n      const indexInSelected = this.SelectedEquipmentList.findIndex(item => item.id === equip.id);\r\n      const indexInObj = this.RequestObj.equipments.findIndex(item => item.id === equip.id);\r\n      const indexInNewList = this.SelectedtList.findIndex(item => item.id === equip.id);\r\n      if (this.RequestObj.equipments.length > 0 && this.SelectedEquipmentList.length > 0) {\r\n        if(this.RequestID==undefined)\r\n        {\r\n          this.EquipmentList.forEach(eq => {\r\n            if (eq.id == equip.id) {\r\n              this.isFound = true;\r\n            }\r\n          });\r\n        }\r\n        else \r\n        {\r\n          this.EquipmentListToEdit.forEach(eq => {\r\n            if (eq.id == equip.id) {\r\n              this.isFoundInEdit = true;\r\n            }\r\n          });\r\n        }\r\n        if (!this.isFound && this.RequestID==undefined) {\r\n          this.EquipmentList.push(equip);\r\n          this.SelectedEquipmentList.splice(indexInSelected, 1);\r\n          this.RequestObj.equipments.splice(indexInObj, 1);\r\n          this.SelectedtList.splice(indexInNewList, 1);\r\n        }       \r\n        this.isFound = false;\r\n        if (!this.isFoundInEdit  && this.RequestID!=undefined) {\r\n          this.EquipmentListToEdit.push(equip);\r\n          this.RequestObj.equipments.splice(indexInObj, 1);\r\n          this.SelectedtList.splice(indexInNewList, 1);\r\n        }\r\n        this.isFoundInEdit = false;\r\n      }\r\n      else {\r\n        this.EquipmentListToEdit.push(equip);\r\n        this.RequestObj.equipments.splice(indexInObj, 1);\r\n     }\r\n    });\r\n  }\r\n  selectEquipmentToOut(id) {\r\n  document.getElementById(id).style.backgroundColor=\"silver\";\r\n    const indexInNewList = this.SelectedtList.findIndex(item => item.id === id);\r\n    this.equipmentService.getEquipmentById(id).subscribe(data => {\r\n      if (this.SelectedtList.length > 0) {\r\n        this.SelectedtList.forEach(elem => {\r\n          if (elem.id == data.id) {\r\n            this.isFoundInList = true;\r\n          }\r\n        });\r\n        if (!this.isFoundInList) {\r\n          this.SelectedtList.push(data);\r\n        }\r\n        else {\r\n          this.SelectedtList.splice(indexInNewList, 1);\r\n        }\r\n        this.isFoundInList = false;\r\n      }\r\n      else {\r\n        this.SelectedtList.push(data);\r\n      }\r\n    });\r\n  }\r\n  onSave(arg) {\r\n    if(arg===\"Save\")\r\n    {\r\n      this.RequestObj.status=0;\r\n    }\r\n    else if(arg===\"sent\") \r\n    {\r\n      this.RequestObj.status=1;\r\n    }\r\n    if(this.RequestID==undefined)\r\n    {\r\n      this.contractRequestService.AddContractRequest(this.RequestObj).subscribe(data => {\r\n        this.successMsg = data;\r\n        if (this.translate.currentLang == 'En') {\r\n          this.messageService.add({ severity: 'info', detail: data.message });\r\n          window.location.reload();\r\n        }\r\n        else {\r\n          this.messageService.add({ severity: 'info', detail: data.messageAr });\r\n          window.location.reload();\r\n        }\r\n      },\r\n        error => {\r\n          if (this.translate.currentLang == 'En')\r\n            this.messageService.add({ severity: 'info', detail: error.error.message });\r\n          else\r\n            this.messageService.add({ severity: 'info', detail: error.error.messageAr });\r\n        }\r\n      );\r\n    }\r\n    else\r\n    {\r\n      this.contractRequestService.updateContractRequest(this.RequestObj).subscribe(data => {\r\n        this.successMsg = data;\r\n        if (this.translate.currentLang == 'En') {\r\n          this.messageService.add({ severity: 'info', detail: data.message });\r\n          window.location.reload();\r\n        }\r\n        else {\r\n          this.messageService.add({ severity: 'info', detail: data.messageAr });\r\n          window.location.reload();\r\n        }\r\n      },\r\n        error => {\r\n          if (this.translate.currentLang == 'En')\r\n            this.messageService.add({ severity: 'info', detail: error.error.message });\r\n          else\r\n            this.messageService.add({ severity: 'info', detail: error.error.messageAr });\r\n        }\r\n      );\r\n    }\r\n    this.router.navigate(['/home/ContractRequest'])\r\n  }\r\n  onOrgRequestSave() {\r\n    this.OrganizationRequestObj.equipmentIDs = this.OrganizationEquipmentIDs;\r\n    this.contractRequestService.AddOrganizationContractRequest(this.OrganizationRequestObj).subscribe(data => {\r\n      this.successMsg = data;\r\n      if (this.translate.currentLang == 'En') {\r\n        this.messageService.add({ severity: 'info', detail: data.message });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 3000)\r\n      }\r\n      else {\r\n        this.messageService.add({ severity: 'info', detail: data.messageAr });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 30000)\r\n\r\n      }\r\n    },\r\n      error => {\r\n        if (this.translate.currentLang == 'En')\r\n          this.messageService.add({ severity: 'dander', detail: error.error.message });\r\n        else\r\n          this.messageService.add({ severity: 'info', detail: error.error.messageAr });\r\n      }\r\n    )\r\n  }\r\n  InformByEmail(){\r\n    \r\n  }\r\n  getAllRequestsForOrg() {\r\n    this.contractRequestService.getHosForOrg(this.currentUser.organizationId).subscribe(data => {\r\n      this.hospitalList = data,\r\n        this.hospitalList.forEach(elem => {\r\n          if (elem.contractRequests.length > 0) {\r\n            // if($('#FromDate').val()!=undefined && $('#ToDate').val()!=undefined)\r\n            //   {\r\n            //     elem.contractRequests.forEach(req=>{\r\n            //       if(this.datePipe.transform(req.date,'yyyy-MM-dd')>=$('#FromDate').val() && \r\n            //       this.datePipe.transform(req.date,'yyyy-MM-dd')<=$('#ToDate').val())\r\n            //       {\r\n            //         this.hospitalWithRequestList.push(elem);\r\n            //       }\r\n            //     })               \r\n            //   }\r\n              this.hospitalWithRequestList.push(elem);\r\n          }\r\n        })\r\n        console.log(\"this.hospitalWithRequestList\",this.hospitalWithRequestList)\r\n      if (this.hospitalWithRequestList.length == 0) {\r\n        this.nullablMSG = \"there is no new request.\";\r\n      }\r\n    });\r\n    \r\n    // if($('#FromDate').val()!=undefined && $('#ToDate').val()!=undefined)\r\n    // {     \r\n    //   this.hospitalWithRequestList.forEach(element=>{\r\n    //     element.contractRequests.forEach(el=>{\r\n    //       console.log(\"$('#FromDate').val()\",$('#FromDate').val());\r\n    //       console.log(\"pipe\",(this.datePipe.transform(el.date,'yyyy-MM-dd')));\r\n\r\n    //       if(this.datePipe.transform(el.date,'yyyy-MM-dd')>=$('#FromDate').val() && \r\n    //       this.datePipe.transform(el.date,'yyyy-MM-dd')<=$('#ToDate').val())\r\n    //       {\r\n    //         console.log(\"equuuals\");\r\n    //         this.hospitalWithRequestList1.forEach(e=>\r\n    //           {\r\n    //             e.contractRequests.push(el);\r\n    //           })\r\n    //       }\r\n    //       else\r\n    //       {\r\n    //         this.hospitalWithRequestList1=this.hospitalWithRequestList;\r\n    //       }\r\n    //     })\r\n    //     console.log(\"this.hospitalWithRequestList\", this.hospitalWithRequestList1)\r\n    //   })\r\n    // }\r\n  }\r\n  FilterByDate(hosName) {\r\n    document.getElementById(hosName).style.display = \"none\";\r\n    $('#requestDate').val(\"\");\r\n    this.hospitalWithRequestList = [];\r\n    this.contractRequestService.getHosForOrg(this.currentUser.organizationId).subscribe(data => {\r\n      this.hospitalList = data,\r\n        this.hospitalList.forEach(elem => {\r\n          if (elem.contractRequests.length > 0) {\r\n            this.hospitalWithRequestList.push(elem);\r\n          }\r\n        })\r\n      if (this.hospitalWithRequestList.length == 0) {\r\n        this.nullablMSG = \"there is no new request.\";\r\n      }\r\n    });\r\n  }\r\n  OnchangDate(id, hosName) {\r\n    if (this.translate.currentLang == \"En\") {\r\n      if ($('#' + id).val() == undefined) {\r\n        document.getElementById(hosName).style.display = \"none\";\r\n      }\r\n      else {\r\n        console.log(\"iiiiid\", hosName);\r\n        document.getElementById(hosName).style.display = \"block\";\r\n        document.getElementById(hosName).style.marginTop = \"-1.2rem\";\r\n        document.getElementById(hosName).style.marginLeft = \"7rem\";\r\n      }\r\n    }\r\n    else {\r\n      if ($('#' + id).val() == undefined) {\r\n        document.getElementById(hosName).style.display = \"none\";\r\n      }\r\n      else {\r\n        document.getElementById(hosName).style.display = \"block\";\r\n        document.getElementById(hosName).style.marginTop = \"-1.2rem\";\r\n        document.getElementById(hosName).style.marginRight = \"15rem\";\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  OnchangDateInOrg(id, orgName)\r\n  {\r\n    if (this.translate.currentLang == \"En\") {\r\n      if ($('#' + id).val() == undefined) {\r\n        document.getElementById(orgName).style.display = \"none\";\r\n      }\r\n      else {\r\n      //  console.log(\"iiiiid\", orgName);\r\n        document.getElementById(orgName).style.display = \"block\";\r\n        document.getElementById(orgName).style.marginTop = \"-1.2rem\";\r\n        document.getElementById(orgName).style.marginLeft = \"7rem\";\r\n      }\r\n    }\r\n    else {\r\n      if ($('#' + id).val() == undefined) {\r\n        document.getElementById(orgName).style.display = \"none\";\r\n      }\r\n      else {\r\n        document.getElementById(orgName).style.display = \"block\";\r\n        document.getElementById(orgName).style.marginTop = \"-1.2rem\";\r\n        document.getElementById(orgName).style.marginRight = \"15rem\";\r\n      }\r\n    }\r\n  }\r\n  FilterByDateInOrg(orgName) {\r\n    document.getElementById(orgName).style.display = \"none\";\r\n    $('#requestDate').val(\"\");\r\n    // this.hospitalWithRequestList = [];\r\n    // this.contractRequestService.getHosForOrg(this.currentUser.organizationId).subscribe(data => {\r\n    //   this.hospitalList = data,\r\n    //     this.hospitalList.forEach(elem => {\r\n    //       if (elem.contractRequests.length > 0) {\r\n    //         this.hospitalWithRequestList.push(elem);\r\n    //       }\r\n    //     })\r\n    //   if (this.hospitalWithRequestList.length == 0) {\r\n    //     this.nullablMSG = \"there is no new request.\";\r\n    //   }\r\n    // });\r\n    this.orgRequestList=[];\r\n    this.getRequestForUPA();\r\n  }\r\n  filterFromDate() {\r\n    this.visibleFrom=false;\r\n    this.hospitalList=[];\r\n    this.hospitalWithRequestList=[];\r\n    this.d.from=new Date($(\"#FromDate\").val().toString());\r\n    this.d.to=new Date($(\"#ToDate\").val().toString());\r\n     this.contractRequestService.getRequestbetweenDates(this.currentUser.organizationId,this.d).subscribe(data=>{\r\n       console.log(\"daata\",data),\r\n       this.hospitalList = data,\r\n        this.hospitalList.forEach(elem => {\r\n          if (elem.contractRequests.length > 0) {\r\n              this.hospitalWithRequestList.push(elem);\r\n          }\r\n        })\r\n     });\r\n  }\r\n  filterToDate()\r\n  {\r\n    this.visibleTo=false;\r\n    this.hospitalList=[];\r\n    this.hospitalWithRequestList=[];\r\n    this.d.from=new Date($(\"#FromDate\").val().toString());\r\n    this.d.to=new Date($(\"#ToDate\").val().toString());\r\n     this.contractRequestService.getRequestbetweenDates(this.currentUser.organizationId,this.d).subscribe(data=>{\r\n       console.log(\"daata\",data),\r\n       this.hospitalList = data,\r\n        this.hospitalList.forEach(elem => {\r\n          if (elem.contractRequests.length > 0) {\r\n              this.hospitalWithRequestList.push(elem);\r\n          }\r\n        })\r\n     });\r\n  }\r\n  ClearFromDate()\r\n  {\r\n    this.hospitalList=[];\r\n    this.hospitalWithRequestList=[];\r\n    this.visibleFrom=true;\r\n    $(\"#FromDate\").val(\"\");\r\n    this.getAllRequestsForOrg();\r\n  }\r\n  ClearToDate()\r\n  {\r\n    this.hospitalList=[];\r\n    this.hospitalWithRequestList=[];\r\n    this.visibleTo=true;\r\n    $(\"#ToDate\").val(\"\");\r\n    this.getAllRequestsForOrg();\r\n  }\r\n  getRequestForUPA() {\r\n     console.log(\"in geeeeeeeeet\")\r\n    this.contractRequestService.getRequestForUPA().subscribe(data => {\r\n      this.organizationRequestList = data;\r\n      this.organizationRequestList.forEach(elem => {\r\n        if (elem.orgRequests.length > 0) { \r\n           this.orgRequestList.push(elem);\r\n         }\r\n         else\r\n         {\r\n           this.nullablMSG = \"there is no new request.\";\r\n           console.log(\"this.nullablMSG\",this.nullablMSG)\r\n         }\r\n       })\r\n      if (this.organizationRequestList.length == 0) {\r\n        this.nullablMSG = \"there is no new request.\";\r\n      }\r\n    })\r\n  }\r\n  nextPage() {\r\n    this.contractRequestService.getEquipmentInContract(this.UPAEquipmentIDs).subscribe(data => {\r\n      this.contractEquipment = data,\r\n        this.contractObj.number = Math.floor((Math.random() * 1000) + 1),\r\n        this.activeIndex++;\r\n    },\r\n      error => {\r\n        if (this.translate.currentLang == 'En')\r\n          this.messageService.add({ severity: 'info', detail: error.error.message });\r\n        else\r\n          this.messageService.add({ severity: 'info', detail: error.error.messageAr });\r\n      })\r\n  }\r\n  prevPage() {\r\n    this.activeIndex--;\r\n  }\r\n  CreateContract(myForrm:NgForm) {\r\n    this.contractObj.equipmentIDs = this.UPAEquipmentIDs;\r\n    console.log(\"this.contractObj\",this.contractObj,this.contractObj.equipmentIDs);\r\n    this.contractRequestService.addNewContract(this.contractObj).subscribe(data => {\r\n      window.location.reload();\r\n    })\r\n    \r\n  }\r\n  fillDistrict(name: string) {\r\n    this.sharedService.getDirectoryIdByname(name).subscribe(data => {\r\n      this.sharedService.getAllHealthDistricts(data).subscribe(data => {\r\n        this.HealthDistrictsList = data\r\n      });\r\n    });\r\n\r\n  }\r\n  fillHospital(name: string) {\r\n    this.sharedService.getDirectoryIdByname(name).subscribe(data => {\r\n      this.sharedService.getAllunitsByDistrictId(data).subscribe(data => {\r\n        this.healthCareUnits = data;\r\n      })\r\n    })\r\n  }\r\n  InformHospital()\r\n  {\r\n    this.router.navigate(['home/Informhospital'])\r\n  }\r\n  // getRequest(id)\r\n  // {\r\n  //   this.contractRequestService.getRequest(id).subscribe(data=>{\r\n  //     this.RequestObj=data;\r\n  //     console.log('equips',this.RequestObj);\r\n  //     this.RequestObj.equipmentIDs.forEach(eqId=>{\r\n  //       this.equipmentService.getEquipmentInHospitalToEdit(eqId).subscribe(data=>{\r\n  //         this.EquipmentListToEdit=data;\r\n  //       });\r\n  //     });\r\n  //   })\r\n  // }\r\n  getRequestToEdit(id)\r\n  {\r\n    this.contractRequestService.getRequestToEdit(id).subscribe(data=>{\r\n      this.RequestObj=data;\r\n      this.RequestObj.hospitalId=this.currentUser.healthCareUnitId;\r\n        this.equipmentService.getEquipmentInHospitalToEdit(this.RequestObj.equipments,this.currentUser.healthCareUnitId).subscribe(data=>{\r\n          this.EquipmentListToEdit=data;\r\n          console.log('eq',this.RequestObj.equipments)\r\n        });\r\n      if(this.RequestObj.status==1 && this.vewid==undefined)\r\n      {\r\n        this.router.navigate(['/home/ContractRequest/'])\r\n      }\r\n    })\r\n  }\r\n}\r\n","<!-----------------------------------InForm Hospital UI--------------------------------->\r\n<div class=\"container\" *ngIf=\"currentUser.roleName==='Admin' \">\r\n    <div class=\"header\">\r\n        <h3 class=\"title\" style=\"text-align: center;\">Maintenance Contract_Hospital Notification\r\n        </h3>\r\n    </div>\r\n    <p-toast posinset=\"top-right\"></p-toast>\r\n    <hr style=\"width: 50%;\">\r\n    <br>\r\n    <div class=\"row\">\r\n        <!-- <input type=\"submit\" value=\"back to requests\" (click)=\"backToRequest()\" class=\"btnSubmit btn btn-info\"> -->\r\n        <div class=\"p-grid p-nogutter p-justify-between btnSubmit\">\r\n            <p-button label=\"back to requests\" (click)=\"backToRequest()\" icon=\"pi pi-angle-left\"></p-button>\r\n        </div>\r\n        <div class=\"col-lg-6\">\r\n            <input type=\"button\" (click)=\"InformHospital()\" value=\"Inform Hospital\" class=\"inform btn btn-info\"\r\n                >\r\n        </div>\r\n    </div>\r\n    <br><br>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-2\">\r\n            <label>{{'ContractRequest.RequestNumber' |translate}}</label>\r\n        </div>\r\n        <div class=\"col-lg-4\">\r\n            <select class=\"form-control\" name=\"contract\" required\r\n                id=\"contractId\" (change)=\"onSelectContract()\">\r\n                <option selected disabled>--select--</option>\r\n                <option *ngFor=\"let c of contractList\" [value]=\"c.id\">\r\n                    {{c.number}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n        <div class=\"col-lg-1\">\r\n            <label for=\"supplier\">Supplier</label>\r\n        </div>\r\n        <div class=\"col-lg-5\">\r\n            <input type=\"text\" class=\"form-control\" id=\"supplier\" name=\"supplier\" [value]=\"\" disabled>\r\n        </div>\r\n    </div><br>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-2\">\r\n            <label for=\"startdate\">Start Date</label>\r\n        </div>\r\n        <div class=\"col-lg-4\">\r\n            <input type=\"date\" class=\"form-control\" id=\"startDate\" name=\"startDate\" [value]=\"\" disabled>\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n            <label for=\"endDate\">End Date</label>\r\n        </div>\r\n        <div class=\"col-lg-4\">\r\n            <input type=\"date\" class=\"form-control\" id=\"endDate\" name=\"endDate\" [value]=\"\" disabled>\r\n        </div>\r\n    </div><br>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-2\">\r\n            <label for=\"subject\">Subject</label>\r\n        </div>\r\n        <div class=\"col-lg-6\">\r\n            <input type=\"text\" class=\"form-control\" id=\"subject\" name=\"subject\" [value]=\"\" disabled>\r\n        </div>\r\n    </div>\r\n    <br><br>\r\n    <p-table [value]=\"EquipmentInEachContract\" [rows]=\"10\" styleClass=\"p-datatable-responsive-demo\"\r\n         [rowHover]=\"true\" dataKey=\"id\" [showCurrentPageReport]=\"true\" >\r\n        <ng-template pTemplate=\"header\">\r\n            <tr style=\"font-size: 18px;\">\r\n                <th>{{'equipment.upaCode'|translate}}</th>\r\n                <th>{{'equipment.Name'|translate}}</th>\r\n                <th>{{'equipment.Manufacturer'|translate}}</th>\r\n                <th>{{'equipment.organization'|translate}}</th>\r\n                <th>{{'equipment.healthDirectory'|translate}}</th>\r\n                <th>{{'equipment.healthDistrict'|translate}}</th>\r\n                <th>{{'equipment.healthCareUnit'|translate}}</th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-eqqq>\r\n            <tr style=\"font-size: 17px;\">\r\n                <td>{{eqqq.internalCode}}</td>\r\n                <td>{{translate.currentLang == \"En\" ? eqqq.equipmentName:eq.equipmentNameAr}}\r\n                </td>\r\n                <td>{{translate.currentLang == \"En\" ?\r\n                    eqqq.manufacturerName:eq.manufacturerNameAr}}</td>\r\n                    <td>{{translate.currentLang == \"En\" ?\r\n                        eqqq.organizationName:eq.organizationNameAr}}</td>\r\n                <td>{{translate.currentLang == \"En\" ?\r\n                    eqqq.healthDirectoryName:eqqq.healthDirectoryNameAr}}\r\n                </td>\r\n                <td>{{translate.currentLang == \"En\" ?\r\n                    eqqq.healthDistrictName:eqqq.healthDistrictNameAr}}\r\n                </td>\r\n                <td>{{translate.currentLang == \"En\" ?\r\n                    eqqq.healthCareUnitName:eqqq.healthCareUnitNameAr}}\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</div>","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Contract } from 'src/app/Shared/Models/Contract';\r\nimport { Equipment } from 'src/app/Shared/Models/Equipment';\r\nimport { User } from 'src/app/Shared/Models/User';\r\nimport { ContractService } from 'src/app/Shared/services/contract.service';\r\nimport { UserService } from 'src/app/Shared/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-inform-hospital',\r\n  templateUrl: './inform-hospital.component.html',\r\n  styleUrls: ['./inform-hospital.component.css']\r\n})\r\nexport class InformHospitalComponent implements OnInit {\r\n\r\n  constructor(private contractRequestService: ContractService, private datePipe: DatePipe,\r\n    private userService: UserService,public translate: TranslateService,private router:Router,\r\n    private messageService: MessageService,) \r\n  { this.currentUser = this.userService.currentUserValue;}\r\n  contract: Contract;\r\n  EquipmentInEachContract: Equipment[];\r\n  currentUser: User;\r\n  contractList: Contract[];\r\n  ngOnInit(): void {\r\n    this.contractRequestService.getAllContracts().subscribe(data => {\r\n      this.contractList = data;\r\n      console.log(\"this.contractList\", this.contractList)\r\n    })\r\n  }\r\n  onSelectContract() {\r\n    // this.EquipmentInEachContract=[];\r\n    var cId = Number($(\"#contractId\").val());\r\n    this.contractRequestService.getOneContract(cId).subscribe(data => {\r\n      this.contract = data,\r\n      $(\"#supplier\").val(this.contract.supplierName);\r\n      $(\"#startDate\").val(this.datePipe.transform(this.contract.startDate, 'yyyy-MM-dd'));\r\n      $(\"#endDate\").val(this.datePipe.transform(this.contract.endDate, 'yyyy-MM-dd'));\r\n      $(\"#subject\").val(this.contract.subject);\r\n      this.contractRequestService.EquipmentInContract(this.contract.id).subscribe(eq => {\r\n        this.EquipmentInEachContract=eq\r\n        \r\n      });\r\n    })\r\n  }\r\n  backToRequest()\r\n  {\r\n    this.router.navigate(['home/ContractRequest'])\r\n  }\r\n  InformHospital(){\r\n    this.contractRequestService.InformHospital(this.contract.id).subscribe(data=>{console.log(data)\r\n      if (this.translate.currentLang == 'En') {\r\n        this.messageService.add({ severity: 'info', detail: 'hospital will be notified with email' });\r\n        \r\n      }\r\n      else {\r\n        this.messageService.add({ severity: 'info', detail: 'سوف يتم اخطار المستشفي بالايميل' });\r\n      \r\n      }});\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\n    <div class=\"card\">\n        <p-toast posinset=\"top-right\"></p-toast>\n        <div class=\"card-body\">\n            <div class=\"row\">\n                <div class=\"col-md-11\">\n                    <h5>{{'ContractRequest.MaintenanceContractRequest'|translate}}</h5>\n                </div>\n                <div class=\"col-md-1\" style=\"text-align: right;\">\n                    <button pButton pRipple icon=\"pi pi-plus\" class=\"p-button-primary  p-button-rounded p-mr-2 new\"\n                        routerLink=\"/home/AddContractRequest\" pTooltip=\"Add a New Equipment\" tooltipPosition=\"right\"></button>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\"><br /></div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\n                    <p-table #dt [value]=\"requestsInHospital\" [rows]=\"10\" styleClass=\"p-datatable-responsive-demo\"\n                        [paginator]=\"true\" [rowHover]=\"true\" dataKey=\"id\"\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n                        [showCurrentPageReport]=\"true\"\n                        [rowsPerPageOptions]=\"[5,10,15,20]\"\n                        [totalRecords]=\"{count}\"\n                        [globalFilterFields]=\"['number','date','comments']\">\n                        <ng-template pTemplate=\"caption\">\n                            <div class=\"p-d-flex p-ai-center p-jc-between\">\n                                <span class=\"p-input-icon-right\">\n                                    <i class=\"pi pi-search\"></i>\n                                    <input pInputText class=\"form-control\" type=\"text\"\n                                        (input)=\"dt.filterGlobal($event.target.value,'contains')\"\n                                        placeholder=\"{{'search.Search'|translate}}...\" />\n                                </span>\n                            </div>\n                        </ng-template>\n                        <ng-template pTemplate=\"header\" *ngIf=\"currentUser.roleName==='Hospital'\">\n                            <!----------------------------Hospital View-------------------->\n                            <tr>\n                                <th pSortableColumn=\"Number\">{{'ContractRequest.RequestNumber'|translate}}\n                                    <p-sortIcon field=\"Number\">\n                                    </p-sortIcon>\n                                </th>\n                                <th pSortableColumn=\"Date\">{{'ContractRequest.Date'|translate}} <p-sortIcon\n                                        field=\"Date\">\n                                    </p-sortIcon>\n                                </th>\n                                <th pSortableColumn=\"Number\">{{'ContractRequest.Subject'|translate}}\n                                    <p-sortIcon field=\"Number\">\n                                    </p-sortIcon>\n                                </th>\n                                <th pSortableColumn=\"Date\">{{'ContractRequest.NumberOfEquipment'|translate}} <p-sortIcon\n                                        field=\"Date\">\n                                    </p-sortIcon>\n                                </th>\n                                <th pSortableColumn=\"Date\">{{'ContractRequest.Status'|translate}} <p-sortIcon\n                                    field=\"Date\">\n                                    </p-sortIcon>\n                                </th>\n                                <th pSortableColumn=\"Date\" style=\"width: 25%;\">{{'Actions.Action'|translate}} \n                                </th>\n                               <th></th>\n                            </tr>\n                            <tr >\n                                <th>\n                                    <input pInputText type=\"text\"\n                                        (input)=\"dt.filter($event.target.value, 'number', 'contains')\"\n                                        [value]=\"dt.filters['number']?.value\"\n                                        placeholder=\"{{'search.Search'|translate}}\"\n                                        class=\"p-column-filter form-control\">\n                                </th>\n                                <th>\n                                    <input pInputText type=\"text\"\n                                        (input)=\"dt.filter($event.target.value, 'date', 'contains')\"\n                                        [value]=\"dt.filters['date']?.value\"\n                                        placeholder=\"{{'search.Search'|translate}}\"\n                                        class=\"p-column-filter form-control\">\n                                </th>\n                                <th>\n                                    <input pInputText type=\"text\"\n                                    (input)=\"dt.filter($event.target.value, 'subject', 'contains')\"\n                                    [value]=\"dt.filters['subject']?.value\"\n                                    placeholder=\"{{'search.Search'|translate}}\"\n                                    class=\"p-column-filter form-control\">\n                                </th>\n                                <th>\n                                    <input pInputText type=\"text\"\n                                    (input)=\"dt.filter($event.target.value, 'equipment', 'contains')\"\n                                    [value]=\"dt.filters['equipment']?.value\"\n                                    placeholder=\"{{'search.Search'|translate}}\"\n                                    class=\"p-column-filter form-control\">\n                                </th>\n                                <th>\n                                    <input pInputText type=\"text\"\n                                        (input)=\"dt.filter($event.target.value, 'status', 'contains')\"\n                                        [value]=\"dt.filters['status']?.value\"\n                                        placeholder=\"{{'search.Search'|translate}}\"\n                                        class=\"p-column-filter form-control\">\n                                </th>                       \n                                <th></th>\n                                <th>\n                                    \n                                </th>\n                            </tr>\n                        </ng-template>\n                        <ng-template pTemplate=\"body\" let-req>\n                            <!----------------------------Hospital View-------------------->\n\n                            <tr *ngIf=\"currentUser.roleName==='Hospital'\">\n                                <td>{{req.number}}</td>\n                                <td>{{req.date |date :'short'}}</td>\n                                <td>{{req.comments}}</td>\n                                <td>{{req.numberOfEquipment}}</td>\n                                <td *ngIf=\"req.status==0\">{{'ContractRequest.New'|translate}}</td>\n                                <td *ngIf=\"req.status!=0\">{{'ContractRequest.SentToOrganization'|translate}}</td>\n\n                                <td>\n                                    <button pButton pRipple pTooltip=\"edit\" tooltipPosition=\"top\"\n                                        icon=\"pi pi-pencil\" routerLink=\"/home/AddContractRequest/{{req.id}}\"\n                                        class=\"p-button-rounded p-button-info\" *ngIf=\"req.status==0\" >\n                                    </button> \n                                    <button pButton pRipple pTooltip=\"edit\" tooltipPosition=\"top\"\n                                        icon=\"pi pi-pencil\" routerLink=\"/home/AddContractRequest/{{req.id}}\"\n                                        class=\"p-button-rounded p-button-info \"*ngIf=\"req.status==1\" [disabled]=\"true\">\n                                    </button>\n                                    <button pButton pRipple pTooltip=\"send\" tooltipPosition=\"top\"\n                                        icon=\"pi pi-envelope\" (click)=\"sendToOrg(req.id)\"\n                                        class=\"p-button-rounded p-button-info \" \n                                        *ngIf=\"req.status==0\" >\n                                    </button>\n                                    <button pButton pRipple pTooltip=\"send\" tooltipPosition=\"top\"\n                                        icon=\"pi pi-envelope\" (click)=\"sendToOrg(req.id)\"\n                                        class=\"p-button-rounded p-button-info \" \n                                        *ngIf=\"req.status==1\" [disabled]=\"true\">\n                                    </button >\n                                    <button pButton pRipple pTooltip=\"delete\" tooltipPosition=\"top\"\n                                        icon=\"pi pi-trash\"\n                                        class=\"p-button-rounded p-button-danger\" \n                                        *ngIf=\"req.status==0\" (click)=confirmDelete(req.id)>\n                                    </button>\n                                    <button pButton pRipple pTooltip=\"delete\" tooltipPosition=\"top\"\n                                        icon=\"pi pi-trash\"\n                                        class=\"p-button-rounded p-button-danger\"\n                                        *ngIf=\"req.status==1\" [disabled]=\"true\">\n                                    </button>\n                                    <button pButton pRipple pTooltip=\"view\" tooltipPosition=\"top\"\n                                        icon=\"pi pi-eye\"\n                                        class=\"p-button-rounded p-button-secondary\" \n                                        routerLink=\"/home/AddContractRequest/{{req.id}}/1\">\n                                    </button>\n                                </td>\n                            </tr>\n                        </ng-template>\n                        <ng-template pTemplate=\"summary\">\n                            <div class=\"p-d-flex p-ai-center p-jc-between\">\n                                {{'In total there are.In total there are'| translate}} {{equipments ? equipments.length\n                                : 0 }}\n                                {{'Sidebar.equipments'| translate}}.\n                            </div>\n                        </ng-template>\n                    </p-table>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmationService, Message, MessageService } from 'primeng/api';\nimport { Observable } from 'rxjs';\nimport { ContractRequestVM } from 'src/app/Shared/Models/ContractRequest';\nimport { Paging } from 'src/app/Shared/Models/Paging';\nimport { RequestStatus } from 'src/app/Shared/Models/RequestStatus';\nimport { User } from 'src/app/Shared/Models/User';\nimport { ContractService } from 'src/app/Shared/services/contract.service';\nimport { UserService } from 'src/app/Shared/services/user.service';\n\n@Component({\n  selector: 'app-request-list',\n  templateUrl: './request-list.component.html',\n  styleUrls: ['./request-list.component.css']\n})\nexport class RequestListComponent implements OnInit {\n  page: Paging;\n  currentUser: User;\n  requestsInHospital:ContractRequestVM[];\n  requestStatus:RequestStatus;\n  count: number;\n  numberOfEquipment: number;\n  msgs: Message[] = [];\n  constructor(private _contractRequestService:ContractService,private userService: UserService,\n    public translate: TranslateService,private confirmationService: ConfirmationService,\n    private messageservice: MessageService) \n  {this.currentUser = this.userService.currentUserValue; }\n\n  ngOnInit(): void {\n    this.requestStatus={\n      Status:'',\n      StatusAr:'',\n      id:0\n    }\n    this.page={\n      pagenumber:1,\n      pagesize:10\n    }\n    this._contractRequestService.getcount().subscribe(data=>\n    {\n        this.count=data\n    })\n    this.getAllHospitalRequests();\n  }\ngetAllHospitalRequests()\n{\n  this._contractRequestService.getRequestInHospitals(this.page,this.currentUser.healthCareUnitId).subscribe(data=>{\n    this.requestsInHospital=data;\n    console.log('reqss',this.requestsInHospital);\n  })\n}\nsendToOrg(id)\n{\n  this._contractRequestService.updateStatus(id).subscribe(data=>{\n    window.location.reload();\n  });\n}\ndelete(id)\n{\n  this._contractRequestService.delete(id).subscribe(data=>{\n    this.getAllHospitalRequests();\n  });\n}\nconfirmDelete(eqId) {\n  if (this.translate.currentLang == 'En') {\n\n    this.confirmationService.confirm({\n      message: 'Are you sure',\n      header: 'Delete Confirmation',\n      icon: 'pi pi-info-circle',\n      accept: () => {\n        this.delete(eqId)\n        this.messageservice.add({ severity: 'info', detail: 'Record deleted' });\n\n      },\n      reject: () => {\n        this.messageservice.add({ severity: 'info', detail: 'Delete rejected' });\n      },\n      acceptLabel: \"yes\",\n      rejectLabel: \"No\"\n    });\n  }\n  else if (this.translate.currentLang == 'Ar') {\n    this.confirmationService.confirm({\n      message: 'هل أنت متأكد',\n      header: 'تاكيد عملية المسح',\n      icon: 'pi pi-info-circle',\n\n      accept: () => {\n        this.delete(eqId)\n        this.msgs = [{ severity: 'info', detail: 'تم المسح' }]\n\n\n      },\n      reject: () => {\n        this.msgs = [{ severity: 'info', detail: 'رفض عمليه المسح' }];\n      },\n      acceptLabel: \"نعم\",\n      rejectLabel: \"لا\",\n    });\n  }\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport FeatureLayer from '@arcgis/core/layers/FeatureLayer';\nimport { environment } from 'src/environments/environment';\nimport Map from '@arcgis/core/Map';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeaturesMapService {\n  public HOSP_ELSHARKYA: FeatureLayer;\n  public ADMIN_ELSHARKYA: FeatureLayer;\n  public ELSHARKYA: FeatureLayer;\n\n  public HOSP_ELSHARKYA_En: FeatureLayer;\n  public ADMIN_ELSHARKYA_En: FeatureLayer;\n  public ELSHARKYA_En: FeatureLayer;\n\n  public HOSP_ELSHARKYAUrl =\n  environment.arcgisServerUrl + 'healthAPP/FeatureServer/0/query';\npublic ADMIN_ELSHARKYAUrl =\n  environment.arcgisServerUrl + 'healthAPP/FeatureServer/1/query';\npublic ELSHARKYAUrl =\n  environment.arcgisServerUrl + 'healthAPP/FeatureServer/2/query';\n  \n  public HOSP_ELSHARKYAUrl_En =\n  environment.arcgisServerUrl + 'healthAPP_Eng/FeatureServer/0/query';\n  public ADMIN_ELSHARKYAUrl_En =\n  environment.arcgisServerUrl + 'healthAPP_En/FeatureServer/1/query';\npublic ELSHARKYAUrl_En =\n  environment.arcgisServerUrl + 'healthAPP_En/FeatureServer/2/query';\n\n  constructor() { }\n\n  FeatureADMIN_ELSHARKYA(mapInstance: Map, trans: number, query: string) {\n    this.ADMIN_ELSHARKYA = new FeatureLayer({\n      url: environment.arcgisServerUrl + 'healthAPP/FeatureServer/1',\n      opacity: trans,\n      definitionExpression: query,\n    });\n    mapInstance.add(this.ADMIN_ELSHARKYA);\n  }\n  FeatureADMIN_ELSHARKYA_En(mapInstance: Map, trans: number, query: string) {\n    this.ADMIN_ELSHARKYA = new FeatureLayer({\n      url: environment.arcgisServerUrl + 'healthAPP_Eng/FeatureServer/1',\n      opacity: trans,\n      definitionExpression: query,\n    });\n    mapInstance.add(this.ADMIN_ELSHARKYA);\n  }\n  FeatureELSHARKYA(mapInstance: Map, trans: number, query: string) {\n    this.ELSHARKYA = new FeatureLayer({\n      url: environment.arcgisServerUrl + 'healthAPP/FeatureServer/2',\n      opacity: trans,\n      definitionExpression: query,\n    });\n    mapInstance.add(this.ELSHARKYA);\n  }\n  FeatureELSHARKYA_En(mapInstance: Map, trans: number, query: string) {\n    this.ELSHARKYA_En = new FeatureLayer({\n      url: environment.arcgisServerUrl + 'healthAPP_Eng/FeatureServer/2',\n      opacity: trans,\n      definitionExpression: query,\n    });\n    mapInstance.add(this.ELSHARKYA_En);\n  }\n\n  FeatureHOSP_ELSHARKYA(\n    mapInstance: Map,\n    trans: number,\n    popupTemp,\n    query: string\n  ) {\n    this.HOSP_ELSHARKYA = new FeatureLayer({\n      url: environment.arcgisServerUrl + 'healthAPP/FeatureServer/0',\n      outFields: ['*'],\n      popupEnabled: true,\n      popupTemplate: popupTemp,\n      opacity: trans,\n      definitionExpression: query,\n    });\n    mapInstance.add(this.HOSP_ELSHARKYA);\n  }\n  FeatureHOSP_ELSHARKYA_En(\n    mapInstance: Map,\n    trans: number,\n    popupTemp,\n    query: string\n  ) {\n    this.HOSP_ELSHARKYA_En = new FeatureLayer({\n      url: environment.arcgisServerUrl + 'healthAPP_Eng/FeatureServer/0',\n      outFields: ['*'],\n      popupEnabled: true,\n      popupTemplate: popupTemp,\n      opacity: trans,\n      definitionExpression: query,\n    });\n    mapInstance.add(this.HOSP_ELSHARKYA_En);\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { DepartmemtByHospitalCodeViewModels } from '../Models/DepartmemtByHospitalCodeViewModels';\nimport { HealthCareDevicesViewModels } from '../Models/HealthCareDevicesViewModels';\nimport { modelIDsViewModel } from '../Models/modelIDsViewModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetStaticApiService {\n  public expropriationRequestUrl = environment.APIUrl + 'HealthInfo/';\n  headers = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n    // withCredentials: false,\n  };\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Accept: '*/*',\n    }),\n  };\n  constructor(private http: HttpClient) { }\n  GetOrginisations( model:modelIDsViewModel) {\n    return this.http\n      .post(\n        this.expropriationRequestUrl +\n        'GetOrginisations' , model\n      )\n      .pipe();\n  }\n  GetDepartmantsData( model:modelIDsViewModel) {\n    return this.http\n      .post(\n        this.expropriationRequestUrl +\n        'GetDepartmantsData' , model\n      )\n      .pipe();\n  }\n  GetHealthData(\n    hospitalId: number,\n    departmantId: number\n  ): Observable<HealthCareDevicesViewModels> {\n    return this.http\n      .get<HealthCareDevicesViewModels>(\n        this.expropriationRequestUrl +\n          'GetHealthData?hospitalId=' +\n          hospitalId +\n          '&departmantId=' +\n          departmantId\n      )\n      .pipe();\n  }\n  GetDepartmantData( id) {\n    return this.http\n      .get(\n        this.expropriationRequestUrl +\n        'GetDepartmantData?id='+id\n      )\n      .pipe();\n  }\n  GetSubOrginisations( model:modelIDsViewModel) {\n    \n    return this.http\n      .post(\n        this.expropriationRequestUrl +\n        'GetSubOrginisations' , model\n        \n      )\n      .pipe();\n  }\n  GetBrands( model:number[]) {\n    return this.http\n      .post(\n        this.expropriationRequestUrl +\n        'GetBrands' , model\n      )\n      .pipe();\n  }\n  GetSuppliers( model:modelIDsViewModel) {\n    return this.http\n      .post(\n        this.expropriationRequestUrl +\n        'GetSuppliers' , model\n      )\n      .pipe();\n  }\n  GetDevice(id: number): Observable<DepartmemtByHospitalCodeViewModels> {\n    return this.http\n      .get<DepartmemtByHospitalCodeViewModels>(\n        this.expropriationRequestUrl + 'GetDevice?id=' + id\n      )\n      .pipe();\n  }\n}\n","<div class=\"row\">\n<aside class=\"col-5 col-md-2 \">\n    <div class=\"accordion\" id=\"accordionExample\">\n      <div class=\"accordion-item\">\n\n        <!-- //////////////////////// Directories-->\n          <a data-toggle=\"collapse\" class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle\"  href=\"#collapse2\" role=\"button\" aria-expanded=\"false\" \n              aria-controls=\"collapseExample\">{{'equipment.healthDirectory' |translate}}</a>\n                <div id=\"collapse2\"  class=\"panel-collapse collapse\" aria-labelledby=\"headingOne\"\n                    data-bs-parent=\"#accordionExample\">\n                    <div class=\"accordion-body p-0\" style=\"margin-top: -20px;\">\n                        <div style=\"display: block;\" class=\"input-group\">\n                        <div class=\"form-outline \">\n                            <label class=\"form-label\" for=\"formS1\"></label>\n                        </div>\n                        </div>\n                        <ul class=\"list-group p-1\" style=\"height: auto;max-height: 300px;width: auto; max-width: 100vm; overflow: auto;\">\n                            <li class=\"list-group-item\" *ngFor=\"let item of this.ELSHARKYAArr\">\n                                <!-- <input class=\"form-check-input me-1\" (click)=\"selectMohafza($event)\" type=\"checkbox\"\n                                            [value]=\"item.code\">\n                                             {{item.arName}} -->\n                                <p-checkbox name=\"group1\" [value]=\"item.code\" [(ngModel)]=\"mohafazatCode\"\n                                                (click)=\"selectMohafza()\"></p-checkbox>\n                                                <!-- {{item.arName}} -->\n                                {{translate.currentLang == \"En\" ?\n                                item.enName:item.arName}}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n\n\n\n        <!------------------Cities-------------------------->\n        <a data-toggle=\"collapse\" class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle\"  href=\"#collapse3\" role=\"button\" aria-expanded=\"false\" \n              aria-controls=\"collapseExample\">{{'equipment.district' |translate}}</a>\n                <div id=\"collapse3\"  class=\"panel-collapse collapse\" aria-labelledby=\"headingOne\"\n                    data-bs-parent=\"#accordionExample\">\n                    <div class=\"accordion-body p-0\" style=\"margin-top: -20px;\">\n                        <div style=\"display: block;\" class=\"input-group\">\n                        <div class=\"form-outline \">\n                            <label class=\"form-label\" for=\"formS1\"></label>\n                        </div>\n                        </div>\n                        <ul class=\"list-group p-1\" style=\"height: auto;max-height: 300px;width: auto; max-width: 100vm; overflow: auto;\">\n                            <li class=\"list-group-item\" *ngFor=\"let item of this.ADMIN_ELSHARKYAArr\">\n                                <!-- <input class=\"form-check-input me-1\" (click)=\"selectMohafza($event)\" type=\"checkbox\"\n                                            [value]=\"item.code\">\n                                             {{item.arName}} -->\n                                <p-checkbox name=\"group1\" [value]=\"item.cityCode\" [(ngModel)]=\"ctyCode\"\n                                                (click)=\"selectCity()\"></p-checkbox>\n                                                <!-- {{item.arName}} -->\n                                {{translate.currentLang == \"En\" ?\n                                item.enName:item.arName}}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n\n        <!--------------------Organizations------------------->\n        <a data-toggle=\"collapse\" class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle\"  href=\"#collapse4\" role=\"button\" aria-expanded=\"false\" \n              aria-controls=\"collapseExample\">{{'equipment.organization' |translate}}</a>\n                <div id=\"collapse4\"  class=\"panel-collapse collapse\" aria-labelledby=\"headingOne\"\n                    data-bs-parent=\"#accordionExample\">\n                    <div class=\"accordion-body p-0\" style=\"margin-top: -20px;\">\n                        <div style=\"display: block;\" class=\"input-group\">\n                        <div class=\"form-outline \">\n                            <label class=\"form-label\" for=\"formS1\"></label>\n                        </div>\n                        </div>\n                        <ul class=\"list-group p-1\" style=\"height: auto;max-height: 300px;width: auto; max-width: 100vm; overflow: auto;\">\n                            <li class=\"list-group-item\" *ngFor=\"let item of orginataions\">\n                                <!-- <input class=\"form-check-input me-1\" (click)=\"selectMohafza($event)\" type=\"checkbox\"\n                                            [value]=\"item.code\">\n                                             {{item.arName}} -->\n                                <p-checkbox name=\"group1\" [value]=\"item.hospitalId\" [(ngModel)]=\"organizationIds\"\n                                (click)=\"selectOrginataions()\"></p-checkbox>\n                                                <!-- {{item[0].nameAr}} -->\n                                {{translate.currentLang == \"En\" ?\n                                item.name:item.nameAr}}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n        <!-----------------------SubOrganization--------------------------->\n\n        <a data-toggle=\"collapse\" class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle\"  href=\"#collapse5\" role=\"button\" aria-expanded=\"false\" \n              aria-controls=\"collapseExample\">{{'equipment.SubOrganization' |translate}}</a>\n                <div id=\"collapse5\"  class=\"panel-collapse collapse\" aria-labelledby=\"headingOne\"\n                    data-bs-parent=\"#accordionExample\">\n                    <div class=\"accordion-body p-0\" style=\"margin-top: -20px;\">\n                        <div style=\"display: block;\" class=\"input-group\">\n                        <div class=\"form-outline \">\n                            <label class=\"form-label\" for=\"formS1\"></label>\n                        </div>\n                        </div>\n                        <ul class=\"list-group p-1\" style=\"height: auto;max-height: 300px;width: auto; max-width: 100vm; overflow: auto;\">\n                            <li class=\"list-group-item\" *ngFor=\"let item of subOrginataions\">\n                                <!-- <input class=\"form-check-input me-1\" (click)=\"selectMohafza($event)\" type=\"checkbox\"\n                                            [value]=\"item.code\">\n                                             {{item.arName}} -->\n                                <p-checkbox name=\"group1\" [value]=\"item.hospitaIds\" [(ngModel)]=\"subOrganizationIds\"\n                                (click)=\"selectSubOrginataions()\"></p-checkbox>\n                                                <!-- {{item.name}} -->\n                                {{translate.currentLang == \"En\" ?\n                                item.name:item.nameAr}}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n\n        <!-----------------------Department----------------------------->\n        <a data-toggle=\"collapse\" class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle\"  href=\"#collapse6\" role=\"button\" aria-expanded=\"false\" \n              aria-controls=\"collapseExample\">{{'equipment.Department' |translate}}</a>\n                <div id=\"collapse6\"  class=\"panel-collapse collapse\" aria-labelledby=\"headingOne\"\n                    data-bs-parent=\"#accordionExample\">\n                    <div class=\"accordion-body p-0\" style=\"margin-top: -20px;\">\n                        <div style=\"display: block;\" class=\"input-group\">\n                        <div class=\"form-outline \">\n                            <label class=\"form-label\" for=\"formS1\"></label>\n                        </div>\n                        </div>\n                        <ul class=\"list-group p-1\" style=\"height: auto;max-height: 300px;width: auto; max-width: 100vm; overflow: auto;\">\n                            <li class=\"list-group-item\" *ngFor=\"let item of DepartmantsData\">\n                                <!-- <input class=\"form-check-input me-1\" (click)=\"selectMohafza($event)\" type=\"checkbox\"\n                                            [value]=\"item.code\">\n                                             {{item.arName}} -->\n                                <p-checkbox name=\"group1\" [value]=\"item.departmentID\" [(ngModel)]=\"departmentIds\"\n                                (click)=\"selectDepartmants()\"></p-checkbox>\n                                                <!-- {{item.name}} -->\n                                {{translate.currentLang == \"En\" ?\n                                item.departmentEngName:item.departmentArName}}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n\n        <!-----------------------Manufacturer----------------------------->\n        <a data-toggle=\"collapse\" class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle\"  href=\"#collapse7\" role=\"button\" aria-expanded=\"false\" \n              aria-controls=\"collapseExample\">{{'equipment.Manufacturer' |translate}}</a>\n                <div id=\"collapse7\"  class=\"panel-collapse collapse\" aria-labelledby=\"headingOne\"\n                    data-bs-parent=\"#accordionExample\">\n                    <div class=\"accordion-body p-0\" style=\"margin-top: -20px;\">\n                        <div style=\"display: block;\" class=\"input-group\">\n                        <div class=\"form-outline \">\n                            <label class=\"form-label\" for=\"formS1\"></label>\n                        </div>\n                        </div>\n                        <ul class=\"list-group p-1\" style=\"height: auto;max-height: 300px;width: auto; max-width: 100vm; overflow: auto;\">\n                            <li class=\"list-group-item\" *ngFor=\"let item of brands\">\n                                <!-- <input class=\"form-check-input me-1\" (click)=\"selectMohafza($event)\" type=\"checkbox\"\n                                            [value]=\"item.code\">\n                                             {{item.arName}} -->\n                                <p-checkbox name=\"group1\" [value]=\"item.hospitalCode\" [(ngModel)]=\"brandIds\"\n                                (click)=\"selectBrand()\"></p-checkbox>\n                                                <!-- {{item.name}} -->\n                                {{translate.currentLang == \"En\" ?\n                                item.manFactureName:item.manFactureNameAr}}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n        \n        <!-----------------------Suppliers----------------------------->\n        <a data-toggle=\"collapse\" class=\"list-group-item list-group-item-action   dropdown-toggle sidetoggle\"  href=\"#collapse8\" role=\"button\" aria-expanded=\"false\" \n        aria-controls=\"collapseExample\">{{'equipment.Supplier' |translate}}</a>\n          <div id=\"collapse8\"  class=\"panel-collapse collapse\" aria-labelledby=\"headingOne\"\n              data-bs-parent=\"#accordionExample\">\n              <div class=\"accordion-body p-0\" style=\"margin-top: -20px;\">\n                  <div style=\"display: block;\" class=\"input-group\">\n                  <div class=\"form-outline \">\n                      <label class=\"form-label\" for=\"formS1\"></label>\n                  </div>\n                  </div>\n                  <ul class=\"list-group p-1\" style=\"height: auto;max-height: 300px;width: auto; max-width: 100vm; overflow: auto;\">\n                      <li class=\"list-group-item\" *ngFor=\"let item of supplierNames\">\n                          <!-- <input class=\"form-check-input me-1\" (click)=\"selectMohafza($event)\" type=\"checkbox\"\n                                      [value]=\"item.code\">\n                                       {{item.arName}} -->\n                          <p-checkbox name=\"group1\" [value]=\"item.id\" [(ngModel)]=\"supplierIds\"\n                          ></p-checkbox>\n                                          <!-- {{item.name}} -->\n                          {{translate.currentLang == \"En\" ?\n                          item.name:item.nameAr}}\n                      </li>\n                  </ul>\n              </div>\n          </div>\n      </div>\n    </div>\n</aside>\n\n<!-- <div *ngIf=\"translate.currentLang==='Ar'\" class=\"col-7  col-md-10\" style=\"height: 100vh;\">\n    <div id=\"viewDiv\" class=\"w-100 h-100 \"></div>\n</div> -->\n<div class=\"col-7 col-md-10\" style=\"height: 100vh;\">\n    <div id=\"viewDiv\" class=\"w-100 h-100 \"></div>\n</div>\n\n</div>","import { Component,NgZone,OnInit} from '@angular/core';\nimport GraphicsLayer from '@arcgis/core/layers/GraphicsLayer';\nimport Map from '@arcgis/core/WebMap';\nimport MapView from '@arcgis/core/views/MapView';\nimport Home from '@arcgis/core/widgets/Home';\nimport Compass from '@arcgis/core/widgets/Compass';\nimport ScaleBar from '@arcgis/core/widgets/ScaleBar';\nimport BasemapToggle from '@arcgis/core/widgets/BasemapToggle';\nimport { MenuItem } from 'primeng/api';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { healthDirectory } from 'src/app/Shared/Models/healthDirectory';\nimport { FeaturesMapService } from 'src/app/Shared/services/features-map.service';\nimport { modelIDsViewModel } from 'src/app/Shared/Models/modelIDsViewModel';\nimport { GetStaticApiService } from 'src/app/Shared/services/get-static-api.service';\nimport Request from '@arcgis/core/request';\nimport esriConfig from '@arcgis/core/config.js';\nimport Basemap from \"@arcgis/core/Basemap\";\nimport TileLayer from \"@arcgis/core/layers/TileLayer\"\nimport { loadModules } from 'esri-loader';\nimport esri = __esri;\n// import * as enFunc from '../../../../../assets';\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit{\n  view: MapView;\n   map: Map;\n  // view?: esri.MapView;\n  // map?: esri.Map;\n   items: MenuItem[];\n   text:string;\n   title = 'ng-cli';\n   tt=\"BBBBB\"\n   txt:string;\n   mohafazatCode:number[]=[];\n   citycode:any[]=[]\n   ELSHARKYAArr: any[] = [];\n   ADMIN_ELSHARKYAArr: any[] = [];\n   ctyCode: string[] = [];\n   hospitalCode: number[] = [];\n   orginataions:any[]=[];\n  subOrginataions:any=[];\n  DepartmantsData:any=[];\n  supplierNames:any=[];\n  brands:any=[];\n  HOSP_ELSHARKYAArr: any[] = [];\n  organizationIds:string[]=[];\n  subOrganizationIds:number[]=[];\n  departmentIds:number[]=[];\n  brandIds:number[]=[];\n  supplierIds:number[]=[]\n  healthDirectoriesList: healthDirectory[];\n  getDeviceId: number;\n  getDeviceName: string;\n  i:number=0;\n  organizationIDS:number[]=[];\n  bufferLayer:GraphicsLayer;\n  homeWidget:Home;\n  compass:Compass;\n  scaleBar:ScaleBar;\n  basemapToggle:BasemapToggle;\n  graphicLayer:GraphicsLayer;\n  defaultBaseMap: string;\n   model:modelIDsViewModel={\n    id:[]\n  }\n  constructor(public translate: TranslateService,private zone: NgZone,\n    private featureService:FeaturesMapService,private getStaticAPIService: GetStaticApiService) {\n      this.defaultBaseMap = 'streets';\n      this.translate.onLangChange.subscribe((event: LangChangeEvent) =>\n      {\n        // this.ngOnInit();\n         if(event.lang == 'Ar')\n         {\n           if(this.organizationIds!=null && this.ctyCode.length!=0)\n           {\n             this.selectOrginataions();\n            }\n            else if(this.ctyCode!=null && this.ctyCode.length!=0)\n            {\n              this.selectCity();\n            }\n            else\n            {\n              this.selectMohafza();\n            }\n        } \n        else       \n        {\n          if(this.organizationIds!=null && this.organizationIds.length!=0)\n          {\n            this.selectOrginataions();\n          }\n          else if(this.ctyCode!=null && this.ctyCode.length!=0)\n          {\n            this.selectCity();\n          }\n          else\n          {\n            this.selectMohafza();\n          }\n        }\n      });\n   }\n  ngOnInit(): void {\n    this.generateSelectFeatures();\n    esriConfig.assetsPath = '/assets';\n    const apiKey =\n      'AAPK3dec25c93f77440089acb335a76a63aeRp1-RNQrf3ZDSmSdPcr0qALRsafRK1ieC5iBM7mNBcmj30-BjG0Bucuu5kwLCkLV';\n    esriConfig.apiKey = apiKey;\n    this.initializeMap()\n  }\n\n  generateSelectFeatures() {\n    let queryOption: any = {\n      responseType: 'json',\n      query: {\n        f: 'json',\n        // where: `Section = N'${name}'`,\n        where: `1=1`,\n        returnCountOnly: false,\n        outFields: '*',\n        returnGeometry: true,\n      },\n    };\n\n    //get ELSHARKYa feature\n    Request(this.featureService.ELSHARKYAUrl, queryOption).then(\n      (response: any) => {\n        console.log(\"response\",response)\n        for (let i = 0; i < response.data.features.length; i++) {\n          let arr = [\n            {\n              enName: response.data.features[i].attributes.Gov_name_E,\n              arName: response.data.features[i].attributes.Gov_name_A,\n              code: response.data.features[i].attributes.MohafazaCode,\n            },\n          ];\n          this.ELSHARKYAArr.push(...arr);\n        }\n      }\n    );\n  }\n\n//    initializeMap() {\n//     //  const [Map, MapView] = await loadModules(['esri/Map', 'esri/views/MapView']);\n//     const bufferLayer = new GraphicsLayer({\n//       blendMode: 'hard-light',\n//     });\n//     (window as any)._bufferLayer = bufferLayer;\n\n//     this.map = new Map({\n//       basemap: 'streets',\n//       layers: [bufferLayer],\n//     });\n//     (window as any)._map = this.map;\n//     const view = new MapView({\n//       map: this.map,\n//       container: 'viewDiv',\n//       center: [31.31652832030437, 30.417887641063995],\n//       zoom: 8,\n//       popup: {\n//         dockEnabled: true,\n//         dockOptions: {\n//           buttonEnabled: true,\n//           breakpoint: {\n//             width: 600,\n//             height: 1000,\n//           },\n//           position: 'top-left',\n//         },\n//       },\n//     });\n//     if(view.map==null || view.map==undefined)\n//     {\n//       console.log(\"gggggggggggggg\")\n//     }\n//     else \n//     {\n//       console.log(\"rrrrrrrrrrrrrr\")\n//     }\n// //view.map=this.map;\n//     (window as any)._view = view;\n\n//     const homeWidget = new Home({\n//       view: (window as any)._view,\n//     });\n//     const compass = new Compass({\n//       view: (window as any)._view,\n//     });\n//     const scaleBar = new ScaleBar({\n//       view: (window as any)._view,\n//       unit: 'metric',\n//       style: 'ruler',\n//     });\n    \n\n//     const basemapToggle = new BasemapToggle({\n//       view: (window as any)._view,\n//       nextBasemap: 'satellite',\n//     });\n\n//     (window as any)._view.ui.add([\n//       {\n//         component: homeWidget,\n//         position: 'top-left',\n//         index: 2,\n//       },\n//       {\n//         component: basemapToggle,\n//         position: 'bottom-right',\n//         index: 2,\n//       },\n//       {\n//         component: compass,\n//         position: 'top-left',\n//         index: 4,\n//       },\n//       {\n//         component: scaleBar,\n//         position: 'bottom-left',\n//         index: 2,\n//       },\n//     ]);\n\n//     let graphicLayer = new GraphicsLayer();\n//       (window as any)._map.add(graphicLayer);\n//      (window as any)._graphicLayer = graphicLayer;\n//     //this.map.add(graphicLayer);\n//     // (window as any)._graphicLayer = graphicLayer;\n\n//     this.view = view;\n//     // console.log(\"this.view\",this.view)\n//     return this.view.when();\n//   }\n\n initializeMap(){\n  //const [Map, MapView] = await loadModules(['esri/Map', 'esri/views/MapView']);\n  const bufferLayer = new GraphicsLayer({\n    blendMode: 'hard-light',\n  });\n  (window as any)._bufferLayer = bufferLayer;\n//  const tileLayer=new TileLayer({\n//    blendMode:'hard-light'\n//  });\n//  (window as any)._bufferLayer = tileLayer;\n\n  // let basemap = new Basemap({\n  //   // portalItem: {\n  //   //   id: \"8dda0e7b5e2d4fafa80132d59122268c\"  // WGS84 Streets Vector webmap\n  //   // }\n  // });\n// console.log(\"basemap\",basemap)\nthis.map = new Map({\n  basemap: 'streets',\n  layers: [bufferLayer]\n});\n\n  // this.map = new Map({\n  //   basemap: 'streets-navigation-vector',\n  //   layers:[bufferLayer]\n  //   // layers: [\n  //   //   new TileLayer({\n  //   //     url:\n  //   //       \"https://gis.ngdc.noaa.gov/arcgis/rest/services/arctic_ps/arctic_basemap/MapServer\"\n  //   //   })\n  //   // ]\n  // });\n  console.log(\"mapmap\",this.map);\n  (window as any)._map = this.map;\n  const view = new MapView({\n    map: this.map,\n    container: 'viewDiv',\n    center: [31.31652832030437, 30.417887641063995],\n    zoom: 8,\n    popup: {\n      dockEnabled: true,\n      dockOptions: {\n        buttonEnabled: true,\n        breakpoint: {\n          width: 600,\n          height: 1000,\n        },\n        position: 'top-left',\n      },\n    },\n  });\n\n (window as any)._view = view;\n\n  const homeWidget = new Home({\n    view: (window as any)._view,\n  });\n  const compass = new Compass({\n    view: (window as any)._view,\n  });\n  const scaleBar = new ScaleBar({\n    view: (window as any)._view,\n    unit: 'metric',\n    style: 'ruler',\n  });\n  \n\n  const basemapToggle = new BasemapToggle({\n    view: (window as any)._view,\n    nextBasemap: 'satellite',\n  });\n\n  (window as any)._view.ui.add([\n    {\n      component: homeWidget,\n      position: 'top-left',\n      index: 2,\n    },\n    {\n      component: basemapToggle,\n      position: 'bottom-right',\n      index: 2,\n    },\n    {\n      component: compass,\n      position: 'top-left',\n      index: 4,\n    },\n    {\n      component: scaleBar,\n      position: 'bottom-left',\n      index: 2,\n    },\n  ]);\n\n  let graphicLayer = new GraphicsLayer();\n  (window as any)._map.add(graphicLayer);\n  (window as any)._graphicLayer = graphicLayer;\n\n  this.view = view;\n  return this.view.when();\n}\n  selectMohafza()\n  {\n    console.log(\"remove\",this.map);\n      // this.map.remove(this.featureService.ELSHARKYA);\n      // this.map.remove(this.featureService.ELSHARKYA_En);\n      // this.map.remove(this.featureService.ADMIN_ELSHARKYA);\n      // this.map.remove(this.featureService.HOSP_ELSHARKYA);\n      // this.map.remove(this.featureService.ADMIN_ELSHARKYA_En);\n      // this.map.remove(this.featureService.HOSP_ELSHARKYA_En);\n     if(this.mohafazatCode.length>0)\n     {\n      this.organizationIds=[];\n      this.ctyCode=[];\n      if(this.translate.currentLang==\"Ar\")\n      {         \n        //  this.map.remove(this.featureService.HOSP_ELSHARKYA_En);\n         this.featureService.FeatureELSHARKYA(\n          this.map,\n          1,\n          `MohafazaCode in (${this.mohafazatCode})`\n        );\n  \n        let queryOption: any = {\n          responseType: 'json',\n          query: {\n            f: 'json',\n            where: `MohafazaCode in (${this.mohafazatCode})`,\n            returnCountOnly: false,\n            outFields: '*',\n            returnGeometry: true,\n          },\n        };\n        //get ELSHARKYa admin feature\n        Request(this.featureService.ADMIN_ELSHARKYAUrl, queryOption).then(\n          (response: any) => {\n            this.ADMIN_ELSHARKYAArr = [];\n            for (let i = 0; i < response.data.features.length; i++) {\n              let arr = [\n                {\n                  arName: response.data.features[i].attributes.EDARA_NAME,\n                  enName:response.data.features[i].attributes.EDAEn_NAME,\n                  code: response.data.features[i].attributes.COD,\n                  cityCode:response.data.features[i].attributes.CityCode\n                },\n              ];\n              this.ADMIN_ELSHARKYAArr.push(...arr);\n            }\n    \n            let queryOptionCity: any = {\n              responseType: 'json',\n              query: {\n                f: 'json',\n                where: `MohafazaCode in (${this.mohafazatCode})`,\n                returnCountOnly: false,\n                outFields: '*',\n                returnGeometry: true,\n              },\n            };\n           //get cityCode feature\n           Request(this.featureService.ADMIN_ELSHARKYAUrl, queryOptionCity).then(\n            (response: any) => {\n             this.citycode=[]\n              for (let i = 0; i < response.data.features.length; i++) {\n                 this.citycode.push(response.data.features[i].attributes.CityCode)\n    \n              }\n              \n              //draw hospitals\n              let queryOptionHospitals: any = {\n                responseType: 'json',\n                query: {\n                  f: 'json',\n                  where: `CityCode in (${this.citycode})`,\n                  returnCountOnly: false,\n                  outFields: '*',\n                  returnGeometry: false,\n                },\n              };\n               //get cityCode feature\n               Request(this.featureService.HOSP_ELSHARKYAUrl, queryOptionHospitals).then(\n                (response: any) => {\n                  let hspitalCode=[]\n                  for (let i = 0; i < response.data.features.length; i++) {\n                    hspitalCode.push(response.data.features[i].attributes.COD)\n                  }  \n                   this.selectHospital(true,hspitalCode)\n                });\n    \n              })\n          })\n      }\n      else if(this.translate.currentLang==\"En\")\n      {\n        // this.map.remove(this.featureService.HOSP_ELSHARKYA);\n        this.featureService.FeatureELSHARKYA_En(\n          this.map,\n          1,\n          `MohafazaCode in (${this.mohafazatCode})`\n        );\n  \n        let queryOption: any = {\n          responseType: 'json',\n          query: {\n            f: 'json',\n            where: `MohafazaCode in (${this.mohafazatCode})`,\n            returnCountOnly: false,\n            outFields: '*',\n            returnGeometry: true,\n          },\n        };\n        //get ELSHARKYa admin feature\n        Request(this.featureService.ADMIN_ELSHARKYAUrl, queryOption).then(\n          (response: any) => {\n            this.ADMIN_ELSHARKYAArr = [];\n            for (let i = 0; i < response.data.features.length; i++) {\n              let arr = [\n                {\n                  arName: response.data.features[i].attributes.EDARA_NAME,\n                  enName:response.data.features[i].attributes.EDAEn_NAME,\n                  code: response.data.features[i].attributes.COD,\n                  cityCode:response.data.features[i].attributes.CityCode\n                },\n              ];\n              this.ADMIN_ELSHARKYAArr.push(...arr);\n            }    \n            let queryOptionCity: any = {\n              responseType: 'json',\n              query: {\n                f: 'json',\n                where: `MohafazaCode in (${this.mohafazatCode})`,\n                returnCountOnly: false,\n                outFields: '*',\n                returnGeometry: true,\n              },\n            };\n           //get cityCode feature\n           Request(this.featureService.ADMIN_ELSHARKYAUrl, queryOptionCity).then(\n            (response: any) => {\n             this.citycode=[]\n              for (let i = 0; i < response.data.features.length; i++) {\n                 this.citycode.push(response.data.features[i].attributes.CityCode)\n    \n              }\n              \n              //draw hospitals\n              let queryOptionHospitals: any = {\n                responseType: 'json',\n                query: {\n                  f: 'json',\n                  where: `CityCode in (${this.citycode})`,\n                  returnCountOnly: false,\n                  outFields: '*',\n                  returnGeometry: false,\n                },\n              };\n               //get cityCode feature\n               Request(this.featureService.HOSP_ELSHARKYAUrl_En, queryOptionHospitals).then(\n                (response: any) => {\n                  let hspitalCode=[]\n                  for (let i = 0; i < response.data.features.length; i++) {\n                    hspitalCode.push(response.data.features[i].attributes.COD)\n                  }  \n                   this.selectHospital(true,hspitalCode)\n                });\n    \n              })\n          })\n      }\n    }\n     else\n     {\n      this.orginataions=[];\n      this.subOrginataions=[];\n      this.DepartmantsData=[];\n      this.brands=[];\n      this.supplierNames=[];\n    //   this.map.remove(this.featureService.ELSHARKYA);\n    //   this.map.remove(this.featureService.ELSHARKYA_En);\n    //   this.map.remove(this.featureService.ADMIN_ELSHARKYA);\n    //   this.map.remove(this.featureService.HOSP_ELSHARKYA);\n    //   this.map.remove(this.featureService.ADMIN_ELSHARKYA_En);\n    //   this.map.remove(this.featureService.HOSP_ELSHARKYA_En);\n    //   this.ADMIN_ELSHARKYAArr = [];\n    //   let queryOptionCitys: any = {\n    //     responseType: 'json',\n    //     query: {\n    //       f: 'json',\n    //       where: `MohafazaCode in (${this.mohafazatCode})`,\n    //       returnCountOnly: false,\n    //       outFields: '*',\n    //       returnGeometry: true,\n    //     },\n    //   };\n\n    //   //get cityCode feature\n    //   Request(this.featureService.ADMIN_ELSHARKYAUrl, queryOptionCitys).then(\n    //     (response: any) => {\n    //       this.citycode=[]\n    //       for (let i = 0; i < response.data.features.length; i++) {\n    //         this.citycode.push(response.data.features[i].attributes.CityCode)\n\n    //       }\n\n    //       //draw hospitals\n    //       let queryOptionHospitals: any = {\n    //         responseType: 'json',\n    //         query: {\n    //           f: 'json',\n    //           where: `CityCode in (${this.citycode})`,\n    //           returnCountOnly: false,\n    //           outFields: '*',\n    //           returnGeometry: false,\n    //         },\n    //       };\n\n    //       //get cityCode feature\n    //       Request(this.featureService.HOSP_ELSHARKYAUrl, queryOptionHospitals).then(\n    //         (response: any) => {\n\n    //           let hspitalCodeInMohafza=[]\n    //           for (let i = 0; i < response.data.features.length; i++) {\n    //             hspitalCodeInMohafza.push(response.data.features[i].attributes.COD)\n    //           }\n\n    //         //  this.selectHospital(true,hspitalCodeInMohafza)\n    //         }\n    //       );\n    //     }\n    //   );\n\n    //   this.map.remove(this.featureService.ELSHARKYA);\n    //   this.map.remove(this.featureService.HOSP_ELSHARKYA);\n\n    //   this.ctyCode = [];\n    //   this.featureService.FeatureELSHARKYA(\n    //     this.map,\n    //     1,\n    //     `MohafazaCode in (${this.mohafazatCode})`\n    //   );\n\n    //   // this.featureService.FeatureHOSP_ELSHARKYA(\n    //   //   this.map,\n    //   //   1,\n    //   //   this.popupHOSPLayer,\n    //   //   `CityCode in (${this.citycode})`\n    //   // );\n\n    //   let queryOption: any = {\n    //     responseType: 'json',\n    //     query: {\n    //       f: 'json',\n    //       where: `MohafazaCode in (${this.mohafazatCode})`,\n    //       returnCountOnly: false,\n    //       outFields: '*',\n    //       returnGeometry: true,\n    //     },\n    //   };\n    //   //get ELSHARKYa admin feature\n    //   Request(this.featureService.ADMIN_ELSHARKYAUrl, queryOption).then(\n    //     (response: any) => {\n\n    //       this.ADMIN_ELSHARKYAArr = [];\n\n    //       for (let i = 0; i < response.data.features.length; i++) {\n    //         let arr = [\n    //           {\n    //             arName: response.data.features[i].attributes.EDARA_NAME,\n    //             code: response.data.features[i].attributes.COD,\n    //           },\n    //         ];\n    //         this.ADMIN_ELSHARKYAArr.push(...arr);\n    //       }\n    //       this.map.remove(this.featureService.ADMIN_ELSHARKYA);\n    //       this.featureService.FeatureADMIN_ELSHARKYA(\n    //         this.map,\n    //         1,\n    //         `MohafazaCode in (${this.ADMIN_ELSHARKYAArr})`\n    //       );\n    //     });\n\n    //   let citycode=[]\n\n    //   let queryOptionCity: any = {\n    //     responseType: 'json',\n    //     query: {\n    //       f: 'json',\n    //       where: `MohafazaCode in (${this.mohafazatCode})`,\n    //       returnCountOnly: false,\n    //       outFields: '*',\n    //       returnGeometry: true,\n    //     },\n    //   };\n\n    //   //get cityCode feature\n    //   Request(this.featureService.ADMIN_ELSHARKYAUrl, queryOptionCity).then(\n    //     (response: any) => {\n    //       for (let i = 0; i < response.data.features.length; i++) {\n    //         citycode .push(response.data.features[i].attributes.CityCode)\n\n    //       }\n\n    //       //draw hospitals\n    //       let queryOptionHospitals: any = {\n    //         responseType: 'json',\n    //         query: {\n    //           f: 'json',\n    //           where: `CityCode in (${citycode})`,\n    //           returnCountOnly: false,\n    //           outFields: '*',\n    //           returnGeometry: false,\n    //         },\n    //       };\n    //       //get cityCode feature\n    //       Request(this.featureService.HOSP_ELSHARKYAUrl, queryOptionHospitals).then(\n    //         (response: any) => {\n    \n    //           let hspitalCode=[]\n    //           for (let i = 0; i < response.data.features.length; i++) {\n    //             hspitalCode.push(response.data.features[i].attributes.COD)\n    //           }\n    //          // this.selectHospital(true,hspitalCode)\n    //         });\n    //     });\n     }\n  }\n  selectCity()\n  {\n      // this.map.remove(this.featureService.ADMIN_ELSHARKYA);\n      // this.map.remove(this.featureService.HOSP_ELSHARKYA);\n    if(this.ctyCode.length>0)\n    {\n      if(this.translate.currentLang==\"Ar\")\n      {\n           this.map.remove(this.featureService.HOSP_ELSHARKYA_En);\n          this.featureService.FeatureADMIN_ELSHARKYA(\n            this.map,\n            1,\n            `CityCode in (${this.ctyCode})`\n          );\n          this.hospitalCode = [];\n          this.model.id = this.ctyCode\n          this.getStaticAPIService\n            .GetOrginisations(this.model)\n            .subscribe((res:any) => {\n              this.orginataions=res;\n              let getHospitals=[]\n              for (let i = 0; i < res.length; i++) {\n                getHospitals.push(res[i].hospitalId)\n              }\n              this.selectHospital(true,getHospitals)\n            });\n            //draw hospitals\n            let queryOptionHospitals: any = {\n              responseType: 'json',\n              query: {\n                f: 'json',\n                where: `CityCode in (${this.ctyCode})`,\n                returnCountOnly: false,\n                outFields: '*',\n                returnGeometry: false,\n              },\n            };\n            //get cityCode feature\n            Request(this.featureService.HOSP_ELSHARKYAUrl, queryOptionHospitals).then(\n              (response: any) => {\n                let hspitalCode=[]\n                for (let i = 0; i < response.data.features.length; i++) {\n                  hspitalCode.push(response.data.features[i].attributes.COD)\n                }  \n                this.selectHospital(true,hspitalCode)\n              });\n      }\n      else if(this.translate.currentLang==\"En\")\n      {\n        this.map.remove(this.featureService.HOSP_ELSHARKYA);\n        this.featureService.FeatureADMIN_ELSHARKYA_En(\n          this.map,\n          1,\n          `CityCode in (${this.ctyCode})`\n        );\n        this.hospitalCode = [];\n        this.model.id = this.ctyCode\n        this.getStaticAPIService\n          .GetOrginisations(this.model)\n          .subscribe((res:any) => {\n            this.orginataions=res;\n            let getHospitals=[]\n            for (let i = 0; i < res.length; i++) {\n              getHospitals.push(res[i].hospitalId)\n            }\n            this.selectHospital(true,getHospitals)\n          });\n          //draw hospitals\n          let queryOptionHospitals: any = {\n            responseType: 'json',\n            query: {\n              f: 'json',\n              where: `CityCode in (${this.ctyCode})`,\n              returnCountOnly: false,\n              outFields: '*',\n              returnGeometry: false,\n            },\n          };\n          //get cityCode feature\n          Request(this.featureService.HOSP_ELSHARKYAUrl, queryOptionHospitals).then(\n            (response: any) => {\n              let hspitalCode=[]\n              for (let i = 0; i < response.data.features.length; i++) {\n                hspitalCode.push(response.data.features[i].attributes.COD)\n              }  \n              this.selectHospital(true,hspitalCode)\n            });\n      }\n    }\n     else {\n      this.orginataions=[];\n      this.subOrginataions=[];\n      this.DepartmantsData=[];\n      this.brands=[];\n      this.supplierNames=[];\n     this.map.remove(this.featureService.ADMIN_ELSHARKYA);\n     this.map.remove(this.featureService.HOSP_ELSHARKYA);\n      this.hospitalCode = [];\n      this.featureService.FeatureADMIN_ELSHARKYA(\n        this.map,\n        1,\n        `CityCode in (${this.citycode})`\n      );\n      let queryOption: any = {\n        responseType: 'json',\n        query: {\n          f: 'json',\n          where: `CityCode in(${this.citycode})`,\n          returnCountOnly: false,\n          outFields: '*',\n          returnGeometry: true,\n        },\n      };\n      //get ELSHARKYa hospital feature\n      Request(this.featureService.HOSP_ELSHARKYAUrl, queryOption).then(\n        (response: any) => {\n          this.HOSP_ELSHARKYAArr = [];\n          for (let i = 0; i < response.data.features.length; i++) {\n            let arr = [\n              {\n                arName: response.data.features[i].attributes.EST_NAME,\n                code: response.data.features[i].attributes.COD,\n              },\n            ];\n            this.HOSP_ELSHARKYAArr.push(...arr);\n          }});\n      //draw hospitals\n      let queryOptionHospitals: any = {\n        responseType: 'json',\n        query: {\n          f: 'json',\n          where: `CityCode in (${this.citycode})`,\n          returnCountOnly: false,\n          outFields: '*',\n          returnGeometry: false,\n        },\n      };\n      //get cityCode feature\n      Request(this.featureService.HOSP_ELSHARKYAUrl, queryOptionHospitals).then(\n        (response: any) => {\n          let hspitalCode=[]\n          for (let i = 0; i < response.data.features.length; i++) {\n            hspitalCode.push(response.data.features[i].attributes.COD)\n          }  \n          this.selectHospital(true,hspitalCode)\n        });\n     }\n    \n  }\n  \n  selectHospital(event,hospitalCode:any)\n  {\n    if(this.translate.currentLang==\"Ar\")\n    {\n      if(event==true)\n      {\n        this.hospitalCode=[]\n        this.hospitalCode.push(hospitalCode);\n        this.map.remove(this.featureService.HOSP_ELSHARKYA);\n  \n         //popup\n         var root = this;\n         function buildPopupHOSPLayer(feature: any) {\n           let ContainerDiv = document.createElement('div');\n           ContainerDiv.innerHTML = `<div class=\"container\">    </div>`;\n   \n           let gisData = document.createElement('div');\n           gisData.innerHTML = ` <table class=\"popupTableInfo\">\n               <tr>\n                 <td>المحافظه</td>\n                 <td>${feature.graphic.attributes.GOV_NAME}</td>\n               </tr>\n               <tr>\n                 <td>الاداره</td>\n                 <td>${feature.graphic.attributes.EDARA_NAME}</td>\n               </tr>\n             </table>\n           </br>`;\n   \n           let tabWrap = document.createElement('div');\n           tabWrap.classList.add('tabTab');\n           tabWrap.textContent = 'الأقسام';\n   \n           let tabContents = document.createElement('div');\n           tabContents.classList.add('tab');\n   \n           root.getStaticAPIService\n             .GetDepartmantData(feature.graphic.attributes.COD)\n             .subscribe((success: any) => {\n   \n               let tabBody = document.createElement('div');\n               tabBody.classList.add('tabcontent');\n   \n               if (success.length == 0) {\n                 let emptyData = document.createElement('div');\n                 emptyData.classList.add('tabTab');\n                 emptyData.textContent = 'لا يوجد اجهزه بالمستشفي';\n   \n                 tabBody.classList.remove('tabcontent');\n                 tabWrap.innerHTML = '';\n                 tabContents.innerHTML = '';\n                 ContainerDiv.appendChild(emptyData);\n               } else {\n                 for (let i = 0; i < success.length; i++) {\n                   let createTapButtons: any = 'button' + success[i].departmentID;\n                   createTapButtons = document.createElement('button');\n                   createTapButtons.classList.add('tablinks');\n                   createTapButtons.textContent = success[i].departmentArName;\n                   createTapButtons.addEventListener(\n                     'click',\n                     function (event: any) {\n                       var text = $(event.target).text();\n   \n                       root.generateContnetTable(\n                         success[i].hospitalID,\n                         success[i].departmentID,\n                         tabBody,\n                         text\n                       );\n                     }\n                   );\n                   tabContents.appendChild(createTapButtons);\n                 }\n               }\n               ContainerDiv.appendChild(gisData);\n               ContainerDiv.appendChild(tabWrap);\n               ContainerDiv.appendChild(tabContents);\n               ContainerDiv.appendChild(tabBody);\n             });\n           return ContainerDiv;\n         }\n         var popupHOSPLayer = {\n          title: '{EST_NAME}',\n          content: buildPopupHOSPLayer,\n        };\n  \n        this.featureService.FeatureHOSP_ELSHARKYA(\n          this.map,\n          1,\n          popupHOSPLayer,\n          `COD in (${hospitalCode})`\n        );\n      }\n      else {\n  \n        const id = hospitalCode.indexOf(event.target.value); // 2\n        const removedDrink = hospitalCode.splice(id, 1);\n  \n        this.map.remove(this.featureService.HOSP_ELSHARKYA);\n  \n        //popup\n        var root = this;\n        function buildPopupHOSPLayer(feature: any) {\n  \n          let ContainerDiv = document.createElement('div');\n          ContainerDiv.innerHTML = `<div class=\"container\">    </div>`;\n  \n          let gisData = document.createElement('div');\n          gisData.innerHTML = ` <table class=\"popupTableInfo\">\n               <tr>\n                 <td>المحافظة</td>\n                 <td>${feature.graphic.attributes.GOV_NAME}</td>\n               </tr>\n               <tr>\n                 <td>الاداره</td>\n                 <td>${feature.graphic.attributes.EDARA_NAME}</td>\n               </tr>\n             </table>\n           </br>`;\n  \n          let tabWrap = document.createElement('div');\n          tabWrap.classList.add('tabTab');\n          tabWrap.textContent = 'الأقسام';\n  \n          let tabContents = document.createElement('div');\n          tabContents.classList.add('tab');\n  \n          root.getStaticAPIService\n            .GetDepartmantData(feature.graphic.attributes.COD)\n            .subscribe((success: any) => {\n  \n              let tabBody = document.createElement('div');\n              tabBody.classList.add('tabcontent');\n  \n              if (success.length == 0) {\n                let emptyData = document.createElement('div');\n                emptyData.classList.add('tabTab');\n                emptyData.textContent = 'لا يوجد اجهزه بالمستشفي';\n  \n                tabBody.classList.remove('tabcontent');\n                tabWrap.innerHTML = '';\n                tabContents.innerHTML = '';\n                ContainerDiv.appendChild(emptyData);\n              } else {\n                for (let i = 0; i < success.length; i++) {\n                  let createTapButtons: any = 'button' + success[i].departmentID;\n                  createTapButtons = document.createElement('button');\n                  createTapButtons.classList.add('tablinks');\n  \n                  createTapButtons.textContent = success[i].departmentArName;\n                  createTapButtons.addEventListener(\n                    'click',\n                    function (event: any) {\n                      var text = $(event.target).text();\n                      root.generateContnetTable(\n                        success[i].hospitalID,\n                        success[i].departmentID,\n                        tabBody,\n                        text\n                      );\n                    }\n                  );\n                  tabContents.appendChild(createTapButtons);\n                }\n              }\n              ContainerDiv.appendChild(gisData);\n              ContainerDiv.appendChild(tabWrap);\n              ContainerDiv.appendChild(tabContents);\n              ContainerDiv.appendChild(tabBody);\n            });\n          return ContainerDiv;\n        }\n  \n        var popupHOSPLayer = {\n          title: '{EST_NAME}',\n          content: buildPopupHOSPLayer,\n        };\n  \n        this.featureService.FeatureHOSP_ELSHARKYA(\n          this.map,\n          1,\n          popupHOSPLayer,\n          `COD in (${hospitalCode})`\n        );\n      }\n    }\n    else if(this.translate.currentLang==\"En\")\n    {\n      if(event==true)\n      {\n        this.hospitalCode=[]\n        this.hospitalCode.push(hospitalCode);\n        this.map.remove(this.featureService.HOSP_ELSHARKYA_En);\n         //popup\n         var root = this;\n         function buildPopupHOSPLayer(feature: any) {\n           let ContainerDiv = document.createElement('div');\n           ContainerDiv.innerHTML = `<div class=\"container\">    </div>`;\n   \n           let gisData = document.createElement('div');\n           gisData.innerHTML = ` <table class=\"popupTableInfo\">\n               <tr>\n               <td>${feature.graphic.attributes.GOVEng_NAME}</td>\n                 <td>Governorate</td>\n               </tr>\n               <tr>\n               <td>${feature.graphic.attributes.EDAEng_NAME}</td>\n                 <td>City</td>\n               </tr>\n             </table>\n           </br>`;\n   \n           let tabWrap = document.createElement('div');\n           tabWrap.classList.add('tabTab');\n           tabWrap.textContent = 'Departments';\n   \n           let tabContents = document.createElement('div');\n           tabContents.classList.add('tab');\n   \n           root.getStaticAPIService\n             .GetDepartmantData(feature.graphic.attributes.COD)\n             .subscribe((success: any) => {\n               let tabBody = document.createElement('div');\n               tabBody.classList.add('tabcontent');\n   \n               if (success.length == 0) {\n                 let emptyData = document.createElement('div');\n                 emptyData.classList.add('tabTab');\n                 emptyData.textContent = 'There is No Equipment in hospital';\n   \n                 tabBody.classList.remove('tabcontent');\n                 tabWrap.innerHTML = '';\n                 tabContents.innerHTML = '';\n                 ContainerDiv.appendChild(emptyData);\n               } else {\n                 for (let i = 0; i < success.length; i++) {\n                   let createTapButtons: any = 'button' + success[i].departmentID;\n                   createTapButtons = document.createElement('button');\n                   createTapButtons.classList.add('tablinks');\n                   createTapButtons.textContent = success[i].departmentEngName;\n                   createTapButtons.addEventListener(\n                     'click',\n                     function (event: any) {\n                       var text = $(event.target).text();\n                       root.generateContnetTable(\n                         success[i].hospitalID,\n                         success[i].departmentID,\n                         tabBody,\n                         text\n                       );\n                     }\n                   );\n                   tabContents.appendChild(createTapButtons);\n                 }\n               }\n               ContainerDiv.appendChild(gisData);\n               ContainerDiv.appendChild(tabWrap);\n               ContainerDiv.appendChild(tabContents);\n               ContainerDiv.appendChild(tabBody);\n             });\n           return ContainerDiv;\n         }\n         var popupHOSPLayer = {\n          title: '{ESTEng_NAME}',\n          content: buildPopupHOSPLayer,\n        };\n  \n        this.featureService.FeatureHOSP_ELSHARKYA_En(\n          this.map,\n          1,\n          popupHOSPLayer,\n          `COD in (${hospitalCode})`\n        );\n      }\n      else {\n  \n        const id = hospitalCode.indexOf(event.target.value); // 2\n        const removedDrink = hospitalCode.splice(id, 1);\n  \n        this.map.remove(this.featureService.HOSP_ELSHARKYA);\n  \n        //popup\n        var root = this;\n        function buildPopupHOSPLayer(feature: any) {\n  \n          let ContainerDiv = document.createElement('div');\n          ContainerDiv.innerHTML = `<div class=\"container\">    </div>`;\n  \n          let gisData = document.createElement('div');\n          gisData.innerHTML = ` <table class=\"popupTableInfo\">\n               <tr>\n                 <td>المحافظة</td>\n                 <td>${feature.graphic.attributes.GOV_NAME}</td>\n               </tr>\n               <tr>\n                 <td>الاداره</td>\n                 <td>${feature.graphic.attributes.EDARA_NAME}</td>\n               </tr>\n             </table>\n           </br>`;\n  \n          let tabWrap = document.createElement('div');\n          tabWrap.classList.add('tabTab');\n          tabWrap.textContent = 'الأقسام';\n  \n          let tabContents = document.createElement('div');\n          tabContents.classList.add('tab');\n  \n          root.getStaticAPIService\n            .GetDepartmantData(feature.graphic.attributes.COD)\n            .subscribe((success: any) => {\n  \n              let tabBody = document.createElement('div');\n              tabBody.classList.add('tabcontent');\n  \n              if (success.length == 0) {\n                let emptyData = document.createElement('div');\n                emptyData.classList.add('tabTab');\n                emptyData.textContent = 'لا يوجد اجهزه بالمستشفي';\n  \n                tabBody.classList.remove('tabcontent');\n                tabWrap.innerHTML = '';\n                tabContents.innerHTML = '';\n                ContainerDiv.appendChild(emptyData);\n              } else {\n                for (let i = 0; i < success.length; i++) {\n                  let createTapButtons: any = 'button' + success[i].departmentID;\n                  createTapButtons = document.createElement('button');\n                  createTapButtons.classList.add('tablinks');\n  \n                  createTapButtons.textContent = success[i].departmentArName;\n                  createTapButtons.addEventListener(\n                    'click',\n                    function (event: any) {\n                      var text = $(event.target).text();\n                      root.generateContnetTable(\n                        success[i].hospitalID,\n                        success[i].departmentID,\n                        tabBody,\n                        text\n                      );\n                    }\n                  );\n                  tabContents.appendChild(createTapButtons);\n                }\n              }\n              ContainerDiv.appendChild(gisData);\n              ContainerDiv.appendChild(tabWrap);\n              ContainerDiv.appendChild(tabContents);\n              ContainerDiv.appendChild(tabBody);\n            });\n          return ContainerDiv;\n        }\n  \n        var popupHOSPLayer = {\n          title: '{EST_NAME}',\n          content: buildPopupHOSPLayer,\n        };\n  \n        this.featureService.FeatureHOSP_ELSHARKYA(\n          this.map,\n          1,\n          popupHOSPLayer,\n          `COD in (${hospitalCode})`\n        );\n      }\n    }\n  }\n\n  selectOrginataions()\n  {\n    if(this.organizationIds.length>0)\n    {\n      if(this.translate.currentLang==\"En\")\n      {\n        this.map.remove(this.featureService.ADMIN_ELSHARKYA);\n        this.map.remove(this.featureService.HOSP_ELSHARKYA);\n        this.selectHospital(true,this.organizationIds[this.organizationIds.length-1])\n        this.model.id = this.organizationIds\n        this.getStaticAPIService\n          .GetSubOrginisations(this.model)\n          .subscribe((res:any) => {\n            this.subOrginataions=res;\n          });\n      }\n      else if(this.translate.currentLang==\"Ar\")\n      {\n         this.map.remove(this.featureService.ADMIN_ELSHARKYA_En);\n        this.map.remove(this.featureService.HOSP_ELSHARKYA_En);\n        this.selectHospital(true,this.organizationIds[this.organizationIds.length-1])\n        this.model.id = this.organizationIds\n        this.getStaticAPIService\n          .GetSubOrginisations(this.model)\n          .subscribe((res:any) => {\n            this.subOrginataions=res;\n          });\n      }\n    }\n    else\n    {\n      this.subOrginataions=[];\n      this.DepartmantsData=[];\n      this.brands=[];\n      this.supplierNames=[];\n      this.map.remove(this.featureService.ADMIN_ELSHARKYA);\n      this.map.remove(this.featureService.HOSP_ELSHARKYA);\n      this.selectCity();\n    }\n  }\n  selectSubOrginataions()\n  {\n    if(this.subOrganizationIds.length>0)\n    {\n      this.getStaticAPIService\n        .GetDepartmantsData(this.model)\n        .subscribe((res:any) => {\n          this.DepartmantsData=res;\n          this.selectHospital(true,this.subOrganizationIds)\n        });\n    }\n    else\n    {\n      this.DepartmantsData=[];\n      this.brands=[];\n      this.supplierNames=[];\n    }\n  }\n  selectDepartmants()\n  {\n    if(this.departmentIds.length>0)\n    {\n      this.getStaticAPIService.GetBrands(this.departmentIds)\n      .subscribe(res=>{\n        this.brands=res\n      })\n    }\n    else\n    {\n      this.brands=[];\n      this.supplierNames=[];\n    }\n  }\n  selectBrand()\n  {\n    if(this.brandIds.length>0)\n    {\n      this.getStaticAPIService\n      .GetSuppliers(this.model)\n      .subscribe((res:any) => {\n        this.supplierNames=res;\n      });\n    }\n    else\n    {\n      this.supplierNames=[];\n    }\n  }\n  generateContnetTable(hospitalId, departmantId, tabBody, departmentName) {\n    var root = this;\n    this.getStaticAPIService\n      .GetHealthData(hospitalId, departmantId)\n      .subscribe((success: any) => {\n       // console.log(\"success\",success)\n        if (success == null) {\n          return null;\n        } else {\n          if(success.length!=0)\n          {\n            if(this.translate.currentLang==\"Ar\")\n            {\n              console.log(\"Arabic\")\n              let displayDepartmentName = document.createElement('h4');\n              displayDepartmentName.textContent = departmentName;\n              displayDepartmentName.classList.add('displayDepartmentName');\n    \n              let deviceTable: any = 'd' + success.devicePrice;\n              deviceTable = document.createElement('table');\n              deviceTable.classList.add('popupTableInfo');\n    \n              let divDevicesTrTH = document.createElement('tr');\n    \n              let diviceNameTh = document.createElement('th');\n              diviceNameTh.textContent = 'اسم الجهاز';\n    \n              let diviceFact = document.createElement('th');\n              diviceFact.textContent = 'الموديل';\n    \n              let purchaseDate = document.createElement('th');\n              purchaseDate.textContent = 'تاريخ الشراء';\n    \n              let diviceThDate = document.createElement('th');\n              diviceThDate.textContent = 'تاريخ التركيب';\n    \n              divDevicesTrTH.appendChild(diviceNameTh);\n              divDevicesTrTH.appendChild(diviceFact);\n              divDevicesTrTH.appendChild(purchaseDate);\n              divDevicesTrTH.appendChild(diviceThDate);\n    \n              deviceTable.appendChild(divDevicesTrTH);\n    \n              for (let i = 0; i < success.length; i++) {\n             //   console.log(\"success\",success)\n                let divDevicesTrBody = document.createElement('tr');\n    \n                let divDevicesTdNameValue: any = document.createElement('td');\n                divDevicesTdNameValue.textContent = success[i].deviceArName;\n                divDevicesTdNameValue.setAttribute('deviceId', success[i].deviceId);\n                divDevicesTdNameValue.style.cursor = 'pointer';\n                divDevicesTdNameValue.addEventListener('click', function (event) {\n                  var text = $(event.target).text();\n                  var deviceId = $(event.target).attr('deviceId');\n                  root.getDeviceName = text;\n                  let bufferBar = <HTMLInputElement>(\n                    document.getElementById('bufferBar')\n                  );\n                  bufferBar.style.display = 'block';\n                  let bufferPrint = <HTMLInputElement>(\n                    document.getElementById('bufferPrint')\n                  );\n                  bufferPrint.style.display = 'block';\n                  bufferPrint.style.cursor = 'pointer';\n                  let bufferViewPrint = <HTMLInputElement>(\n                    document.getElementById('bufferViewPrint')\n                  );\n                  bufferViewPrint.style.display = 'block';\n                  bufferViewPrint.style.cursor = 'pointer';\n                });\n                let divicetdFact = document.createElement('td');\n                divicetdFact.textContent = success[i].deviceModel;\n                let diviceTdDate = document.createElement('td');\n                diviceTdDate.textContent = success[i].deviceInternData;\n                let purchaseDateTD = document.createElement('td');\n                purchaseDateTD.textContent = success[i].purchaseDate;\n                divDevicesTrBody.appendChild(divDevicesTdNameValue);\n                divDevicesTrBody.appendChild(divicetdFact);\n                divDevicesTrBody.appendChild(diviceTdDate);\n                divDevicesTrBody.appendChild(purchaseDateTD);\n                deviceTable.appendChild(divDevicesTrBody);\n              }\n              let br = document.createElement('br');\n              tabBody.innerHTML = '';\n              tabBody.appendChild(br);\n              tabBody.appendChild(displayDepartmentName);\n              tabBody.appendChild(deviceTable);\n            }\n            else if(this.translate.currentLang==\"En\")\n            {\n              console.log(\"English\")\n              let displayDepartmentName = document.createElement('h4');\n              displayDepartmentName.textContent = departmentName;\n              displayDepartmentName.classList.add('displayDepartmentName');\n    \n              let deviceTable: any = 'd' + success.devicePrice;\n              deviceTable = document.createElement('table');\n              deviceTable.classList.add('popupTableInfo');\n    \n              let divDevicesTrTH = document.createElement('tr');\n    \n              let diviceNameTh = document.createElement('th');\n              diviceNameTh.textContent = 'Equipment Name';\n    \n              let diviceFact = document.createElement('th');\n              diviceFact.textContent = 'Model';\n    \n              let purchaseDate = document.createElement('th');\n              purchaseDate.textContent = 'Purchase Date';\n    \n              let diviceThDate = document.createElement('th');\n              diviceThDate.textContent = 'Installation Date';\n  \n              divDevicesTrTH.appendChild(diviceThDate);\n              divDevicesTrTH.appendChild(purchaseDate);\n              divDevicesTrTH.appendChild(diviceFact);\n              divDevicesTrTH.appendChild(diviceNameTh);\n  \n              deviceTable.appendChild(divDevicesTrTH);\n    \n              for (let i = 0; i < success.length; i++) {\n                //console.log(\"success\",success)\n                let divDevicesTrBody = document.createElement('tr');\n    \n                let divDevicesTdNameValue: any = document.createElement('td');\n                divDevicesTdNameValue.textContent = success[i].deviceEngName;\n                divDevicesTdNameValue.setAttribute('deviceId', success[i].deviceId);\n                divDevicesTdNameValue.style.cursor = 'pointer';\n                divDevicesTdNameValue.addEventListener('click', function (event) {\n                  var text = $(event.target).text();\n                  var deviceId = $(event.target).attr('deviceId');\n                  root.getDeviceName = text;\n                  let bufferBar = <HTMLInputElement>(\n                    document.getElementById('bufferBar')\n                  );\n                  bufferBar.style.display = 'block';\n                  let bufferPrint = <HTMLInputElement>(\n                    document.getElementById('bufferPrint')\n                  );\n                  bufferPrint.style.display = 'block';\n                  bufferPrint.style.cursor = 'pointer';\n                  let bufferViewPrint = <HTMLInputElement>(\n                    document.getElementById('bufferViewPrint')\n                  );\n                  bufferViewPrint.style.display = 'block';\n                  bufferViewPrint.style.cursor = 'pointer';\n                });\n                let divicetdFact = document.createElement('td');\n                divicetdFact.textContent = success[i].deviceModel;\n                let diviceTdDate = document.createElement('td');\n                diviceTdDate.textContent = success[i].deviceInternData;\n                let purchaseDateTD = document.createElement('td');\n                purchaseDateTD.textContent = success[i].purchaseDate;\n  \n                divDevicesTrBody.appendChild(diviceTdDate);\n                divDevicesTrBody.appendChild(purchaseDateTD);\n                divDevicesTrBody.appendChild(divicetdFact);\n                divDevicesTrBody.appendChild(divDevicesTdNameValue);\n                deviceTable.appendChild(divDevicesTrBody);\n              }\n              let br = document.createElement('br');\n              tabBody.innerHTML = '';\n              tabBody.appendChild(br);\n              tabBody.appendChild(displayDepartmentName);\n              tabBody.appendChild(deviceTable);\n            }         \n          }\n        }\n      });\n  }\n\n  \n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FooterComponent } from './Components/Layout/footer/footer.component';\r\nimport { EquipmentsListComponent } from './Components/equipment/equipments-list/equipments-list.component';\r\n// import { EquipmentListComponent } from './Components/equipment-list/equipment-list.component';\r\nimport { NavbarComponent } from './Components/Layout/navbar/navbar.component';\r\nimport { NewEquipmentComponent } from './Components/equipment/new-equipment/new-equipment.component';\r\nimport { ServiceRequestAddComponent } from './Components/serviceRequest/service-request-add/service-request-add.component';\r\nimport { ServiceRequestListComponent } from 'src/app/Components/serviceRequest/service-request-list/service-request-list.component';\r\nimport { QrGeneratorComponent } from 'src/app/Components/qr-generator/qr-generator.component';\r\nimport { RegisterComponent } from 'src/app/Components/register/register.component';\r\nimport { LoginComponent } from './Components/login/login.component';\r\nimport { HomeComponent } from './Components/home/home.component';\r\nimport { EquipmentListComponent } from './Components/equipment-list/equipment-list.component';\r\nimport { EmployeesListComponent } from './Components/employee/employees-list/employees-list.component';\r\nimport { NewEmployeeComponent } from './Components/employee/new-employee/new-employee.component';\r\nimport { UserListComponent } from './Components/user/user-list/user-list.component';\r\nimport { NewUserComponent } from './Components/user/new-user/new-user.component';\r\nimport { WorkOrderListComponent } from './Components/work-order-list/work-order-list/work-order-list.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { EquipmentUserGuard } from './equipment_user/equipment-user.guard'\r\nimport { ProfileComponent } from './Components/profile/profile.component';\r\nimport { EquipmentCategoriesComponent } from './Components/EquipmentCategory/equipment-categories/equipment-categories.component';\r\nimport { NewCategoryComponent } from './Components/EquipmentCategory/new-category/new-category.component';\r\nimport { SubCategoriesComponent } from './Components/SubCategories/sub-categories/sub-categories.component';\r\nimport { NewSubCategoryComponent } from './Components/SubCategories/new-sub-category/new-sub-category.component';\r\nimport { OriginsListComponent } from './Components/origin/origins-list/origins-list.component';\r\nimport { NewOriginComponent } from './Components/origin/new-origin/new-origin.component';\r\nimport { ManufacturerListComponent } from './Components/Manufacturer/manufacturer-list/manufacturer-list.component';\r\nimport { NewManufacturerComponent } from './Components/Manufacturer/new-manufacturer/new-manufacturer.component';\r\nimport { PrioritiesListComponent } from './Components/Priority/priorities-list/priorities-list.component';\r\nimport { NewPriorityComponent } from './Components/Priority/new-priority/new-priority.component';\r\nimport { DepartmentsListComponent } from './Components/Department/departments-list/departments-list.component';\r\nimport { NewDepartmentComponent } from './Components/Department/new-department/new-department.component';\r\nimport { StatusesListComponent } from './Components/Status/statuses-list/statuses-list.component';\r\nimport { NewStatusComponent } from './Components/Status/new-status/new-status.component';\r\nimport { SuppliersListComponent } from './Components/Supplier/suppliers-list/suppliers-list.component';\r\nimport { NewSupplierComponent } from './Components/Supplier/new-supplier/new-supplier.component';\r\nimport { ModesListComponent } from './Components/Mode/modes-list/modes-list.component';\r\nimport { NewModeComponent } from './Components/Mode/new-mode/new-mode.component';\r\nimport { SettingsComponent } from './Components/settings/settings.component';\r\nimport { MasterEquipment } from './Shared/Models/MasterEquipment';\r\nimport { NewMasterEquipmentComponent } from './Components/MasterEquipment/new-master-equipment/new-master-equipment.component';\r\nimport { MasterEquipmentListComponent } from './Components/MasterEquipment/master-equipment-list/master-equipment-list.component';\r\nimport { AddWorkOrderComponent } from './Components/work-order-list/add-WorkOrder/add-work-order/add-work-order.component';\r\nimport { AddWorkOrderWithoutRequestComponent } from './Components/work-order-list/add-work-order-without-request/add-work-order-without-request.component';\r\nimport { SlaComponent } from './Components/Maintenence/sla/sla.component';\r\nimport { EquipmentMainteneceComponent } from './Components/Maintenence/equipment-maintenece/equipment-maintenece.component';\r\nimport { ForgetPasswordComponent } from './Components/forget-password/forget-password.component';\r\nimport { ResetPasswordComponent } from './Components/reset-password/reset-password.component';\r\nimport { ContractsListComponent } from './Components/Contract/contracts-list/contracts-list.component';\r\nimport { HealthUnitsListComponent } from './Components/HealthCareUnits/health-units-list/health-units-list.component';\r\nimport { NewhealthUnitComponent } from './Components/HealthCareUnits/newhealth-unit/newhealth-unit.component';\r\nimport { DashboardComponent } from './Components/dashboard/dashboard.component';\r\nimport { ECRIListComponent } from './Components/ecri-Code/ecri-list/ecri-list.component';\r\nimport { ECRIComponent } from './Components/ecri-Code/ecri/ecri.component';\r\nimport { AddOrganizationComponent } from './Components/Organization/add-organization/add-organization.component';\r\nimport { OrganizationListComponent } from './Components/Organization/organization-list/organization-list.component';\r\nimport { NewSubOrganizationComponent } from './Components/SubOrganization/new-sub-organization/new-sub-organization.component';\r\nimport { SubOrganizationListComponent } from './Components/SubOrganization/sub-organization-list/sub-organization-list.component';\r\nimport { EquipmentDetailsComponent } from './Components/equipment/equipment-details/equipment-details.component';\r\n//import { JwtHelperService, JwtModule, JwtModuleOptions } from '@auth0/angular-jwt';\r\nimport { PdFCreateComponent } from './Components/pd-fcreate/pd-fcreate.component';\r\nimport { EquipmentDetailsAdminComponent } from './Components/equipment/equipment-details-admin/equipment-details-admin.component';\r\nimport { InventoryListComponent } from './Components/Inventory/inventory-list/inventory-list.component';\r\nimport { EquipmentRecallComponent } from './Components/equipment/equipment-recall/equipment-recall.component';\r\nimport { ContractRequestComponent } from './Components/ContractRequest/Add-request/contract-request/contract-request.component';\r\nimport { InformHospitalComponent } from './Components/InformHospital/inform-hospital/inform-hospital.component';\r\nimport { RequestListComponent } from './Components/ContractRequest/request-list/request-list.component';\r\nimport { MapComponent } from './Components/Map/map/map.component';\r\nconst routes: Routes = [\r\n  // { component: EquipmentsListComponent, path: \"home\" },\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n    children: [\r\n      {\r\n        path: \"equipmentsList\",\r\n        component: EquipmentsListComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"getRequests\",\r\n        component: ServiceRequestListComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      // {\r\n      //   path: \"emps\",\r\n      //   component: EmployeesListComponent,\r\n      //   canActivate:[AuthGuard]\r\n      // },\r\n      {\r\n        path: \"users\",\r\n        component: UserListComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"addEquipment\",\r\n        component: NewEquipmentComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"makeRequest\",\r\n        component: ServiceRequestAddComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      // {\r\n      //   path: \"addEmployee\",\r\n      //   component: NewEmployeeComponent,\r\n      //   canActivate:[AuthGuard]\r\n      // },\r\n      {\r\n        path: \"addUser\",\r\n        component: NewUserComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"qrcode\",\r\n        component: QrGeneratorComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"workOrders\",\r\n        component: WorkOrderListComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"profile\",\r\n        component: ProfileComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"equipmentCategories\",\r\n        component: EquipmentCategoriesComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"addCategory\",\r\n        component: NewCategoryComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"addSubCategory\",\r\n        component: NewSubCategoryComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"equipmentSubCategories\",\r\n        component: SubCategoriesComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"origins\",\r\n        component: OriginsListComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"addOrigin\",\r\n        component: NewOriginComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"Manfacturers\",\r\n        component: ManufacturerListComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"addManufacturer\",\r\n        component: NewManufacturerComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"priorities\",\r\n        component: PrioritiesListComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"addpriority\",\r\n        component: NewPriorityComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"Statuses\",\r\n        component: StatusesListComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"addStatus\",\r\n        component: NewStatusComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"Departments\",\r\n        component: DepartmentsListComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"addDepartment\",\r\n        component: NewDepartmentComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"Suppliers\",\r\n        component: SuppliersListComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"addSupplier\",\r\n        component: NewSupplierComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"Modes\",\r\n        component: ModesListComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"addMode\",\r\n        component: NewModeComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"workOrders\",\r\n        component: WorkOrderListComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"settings\",\r\n        component: SettingsComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"MasterEquipmentList\",\r\n        component: MasterEquipmentListComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"AddMasterEquipment\",\r\n        component: NewMasterEquipmentComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"AddWorkOrder/:id\",\r\n        component: AddWorkOrderComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"AddWorkOrder\",\r\n        component: AddWorkOrderComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"WorkOrderList\",\r\n        component: WorkOrderListComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"AddWorkOrderWithoutRequest\",\r\n        component: AddWorkOrderWithoutRequestComponent,\r\n        canActivate: [AuthGuard]\r\n\r\n      },\r\n\r\n      {\r\n        path: \"sla\",\r\n        component: SlaComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"equipment_Maintenance\",\r\n        component: EquipmentMainteneceComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"contractsList\",\r\n        component: ContractsListComponent,\r\n        canActivate: [AuthGuard]\r\n      }\r\n      , {\r\n        path: \"healthUnitsList\",\r\n        component: HealthUnitsListComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"dashboard\",\r\n        component: DashboardComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"ecrisList\",\r\n        component: ECRIListComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"addecri\",\r\n        component: ECRIComponent,\r\n        canActivate: [AuthGuard]\r\n      }\r\n      , {\r\n        path: \"addUnit\",\r\n        component: NewhealthUnitComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"AddOganization\",\r\n        component: AddOrganizationComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"OrganizationList\",\r\n        component: OrganizationListComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"AddSubOrganization\",\r\n        component: NewSubOrganizationComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"SubOrganizationList\",\r\n        component: SubOrganizationListComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n    {\r\n      path:\"equipmentRecall\",\r\n      component:EquipmentRecallComponent,\r\n      canActivate: [AuthGuard]\r\n    },\r\n      {\r\n        path: \"EquipmentDetails/:id\",\r\n        component: EquipmentDetailsComponent,\r\n        //canActivate: [AuthGuard]\r\n        // data:{\r\n        //   EquipmentUserGuard\r\n        // }\r\n        canActivate: [EquipmentUserGuard]\r\n      },\r\n      {\r\n        path: \"EquipmentDetailsAdminComponent/:id\",\r\n        component: EquipmentDetailsAdminComponent,\r\n        //canActivate: [AuthGuard]\r\n        // data:{\r\n        //   EquipmentUserGuard\r\n        // }\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"qrCoder\",\r\n        component: QrGeneratorComponent\r\n      },\r\n\r\n      {\r\n        path: \"Inventories\",\r\n        component: InventoryListComponent\r\n      },\r\n      {\r\n        path: \"ContractRequest\",\r\n        component: RequestListComponent\r\n      },\r\n      {\r\n        path: \"AddContractRequest\",\r\n        component: ContractRequestComponent\r\n      },\r\n      {\r\n        path: \"AddContractRequest/:id\",\r\n        component: ContractRequestComponent\r\n      },\r\n      {\r\n        path: \"AddContractRequest/:id/:vewid\",\r\n        component: ContractRequestComponent\r\n      },\r\n      {\r\n        path:\"Informhospital\",\r\n        component:InformHospitalComponent\r\n      },\r\n      {\r\n        path:\"map\",\r\n        component:MapComponent\r\n      }\r\n    ]\r\n  }\r\n  ,\r\n  {\r\n    path: \"\",\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: \"Register\",\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path: \"login\",\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: \"forgetPassword\",\r\n    component: ForgetPasswordComponent\r\n  },\r\n  {\r\n    path: \"resetPassword\",\r\n    component: ResetPasswordComponent\r\n  },\r\n  {\r\n    path: \"pdfCreate\",\r\n    component: PdFCreateComponent\r\n  }\r\n  // },\r\n  // {\r\n  //   path:\"pdfCreate\",\r\n  //   component:PdFCreateComponent\r\n  // }\r\n\r\n];\r\n// const JWT_Module_Options: JwtModuleOptions = {\r\n//   config: {\r\n//     tokenGetter: () => {\r\n//       return localStorage.getItem('access_token');\r\n//     },\r\n//     allowedDomains: ['localhost:4200'],\r\n//   }\r\n// };\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n\r\n\r\n","import { Component } from '@angular/core';\r\nimport { EquipmentService } from \"../app/Shared/services/equipment.service\";\r\nimport { TranslateService ,LangChangeEvent  } from '@ngx-translate/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  direction: string = 'ltr';\r\n  selectedLang:string;\r\n  constructor(private translate:TranslateService,private route: Router){\r\n    \r\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) =>\r\n    {\r\n      if(event.lang == 'Ar')\r\n      {\r\n        this.direction = 'rtl';\r\n        this.selectedLang='Ar';      \r\n      } \r\n      else       \r\n      {\r\n        this.direction = 'ltr';\r\n        this.selectedLang='En';  \r\n      }\r\n    });\r\n  }\r\n  \r\n  title = 'bioMedical';\r\n}\r\n","<div dir ={{direction}} id=\"comp\" [ngStyle]=\"{'text-align': selectedLang === 'En' ? 'left': 'right'}\">\r\n    <!-- <div class=\"row\">\r\n        <div class=\"col-lg-6\">\r\n            <app-navbar></app-navbar>\r\n        </div>\r\n    </div> -->\r\n    \r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { CardModule } from 'primeng/card';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { NgbDateStruct, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CarouselModule } from 'primeng/carousel';\r\nimport { NavbarComponent } from './Components/Layout/navbar/navbar.component';\r\nimport { FooterComponent } from './Components/Layout/footer/footer.component';\r\nimport { HomeComponent } from './Components/home/home.component';\r\nimport { EquipmentListComponent } from './Components/equipment-list/equipment-list.component';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { EquipmentsListComponent } from './Components/equipment/equipments-list/equipments-list.component';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { MessageService } from 'primeng/api';\r\nimport { TableModule } from 'primeng/table';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { NewEquipmentComponent } from './Components/equipment/new-equipment/new-equipment.component';\r\nimport { SideBarComponent } from './Components/Layout/side-bar/side-bar.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { ServiceRequestListComponent } from './Components/serviceRequest/service-request-list/service-request-list.component';\r\nimport { ServiceRequestAddComponent } from './Components/serviceRequest/service-request-add/service-request-add.component';\r\nimport { QrGeneratorComponent } from './Components/qr-generator/qr-generator.component';\r\nimport { NgxQRCodeModule } from '@techiediaries/ngx-qrcode';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { LoginComponent } from './Components/login/login.component';\r\nimport { RegisterComponent } from './Components/register/register.component';\r\nimport { TechnicianListComponent } from './Components/technician-list/technician-list.component';\r\nimport { EmployeesListComponent } from './Components/employee/employees-list/employees-list.component';\r\nimport { NewEmployeeComponent } from './Components/employee/new-employee/new-employee.component';\r\nimport { UserListComponent } from './Components/user/user-list/user-list.component';\r\nimport { NewUserComponent } from './Components/user/new-user/new-user.component';\r\nimport { WorkOrderListComponent } from './Components/work-order-list/work-order-list/work-order-list.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { ProfileComponent } from './Components/profile/profile.component';\r\nimport { SettingsComponent } from './Components/settings/settings.component';\r\nimport { EquipmentCategoriesComponent } from './Components/EquipmentCategory/equipment-categories/equipment-categories.component';\r\nimport { NewCategoryComponent } from './Components/EquipmentCategory/new-category/new-category.component';\r\nimport { NewSubCategoryComponent } from './Components/SubCategories/new-sub-category/new-sub-category.component';\r\nimport { SubCategoriesComponent } from './Components/SubCategories/sub-categories/sub-categories.component';\r\nimport { NewOriginComponent } from './Components/origin/new-origin/new-origin.component';\r\nimport { OriginsListComponent } from './Components/origin/origins-list/origins-list.component';\r\nimport { ManufacturerListComponent } from './Components/Manufacturer/manufacturer-list/manufacturer-list.component';\r\nimport { NewManufacturerComponent } from './Components/Manufacturer/new-manufacturer/new-manufacturer.component';\r\nimport { NewPriorityComponent } from './Components/Priority/new-priority/new-priority.component';\r\nimport { PrioritiesListComponent } from './Components/Priority/priorities-list/priorities-list.component';\r\nimport { DepartmentsListComponent } from './Components/Department/departments-list/departments-list.component';\r\nimport { NewDepartmentComponent } from './Components/Department/new-department/new-department.component';\r\nimport { NewStatusComponent } from './Components/Status/new-status/new-status.component';\r\nimport { StatusesListComponent } from './Components/Status/statuses-list/statuses-list.component';\r\nimport { SuppliersListComponent } from './Components/Supplier/suppliers-list/suppliers-list.component';\r\nimport { NewSupplierComponent } from './Components/Supplier/new-supplier/new-supplier.component';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ModesListComponent } from './Components/Mode/modes-list/modes-list.component';\r\nimport { NewModeComponent } from './Components/Mode/new-mode/new-mode.component';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { PanelMenuModule } from 'primeng/panelmenu';\r\nimport { NewMasterEquipmentComponent } from './Components/MasterEquipment/new-master-equipment/new-master-equipment.component';\r\nimport { MasterEquipmentListComponent } from './Components/MasterEquipment/master-equipment-list/master-equipment-list.component';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\n//import { ButtonModule } from 'primeng/button';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport {MessageModule} from 'primeng/message';\r\nimport {SlideMenuModule} from 'primeng/slidemenu';\r\nimport {TieredMenuModule} from 'primeng/tieredmenu';\r\n//import { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport { MasterequipmentService } from './Shared/services/masterequipment.service';\r\nimport esriConfig from \"@arcgis/core/config.js\";\r\n\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\n//import { MasterEquipmentService } from 'src/app/Shared/services/master-equipment.service';\r\n\r\n//import { MasterEquipmentService } from 'src/app/Shared/services/master-equipment.service';\r\n\r\n//import { MasterEquipmentService } from 'src/app/Shared/services/master-equipment.service';\r\n\r\nimport { AddWorkOrderComponent } from './Components/work-order-list/add-WorkOrder/add-work-order/add-work-order.component';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { AddWorkOrderWithoutRequestComponent } from './Components/work-order-list/add-work-order-without-request/add-work-order-without-request.component';\r\n\r\n\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { SlaComponent } from './Components/Maintenence/sla/sla.component';\r\nimport { EquipmentMainteneceComponent } from './Components/Maintenence/equipment-maintenece/equipment-maintenece.component';\r\nimport { CaptchaModule } from 'primeng/captcha';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { FullCalendarModule } from '@fullcalendar/angular';\r\nimport dayGridPlugin from '@fullcalendar/daygrid'; // a plugin!\r\nimport interactionPlugin from '@fullcalendar/interaction'; // a plugin!\r\nimport { ChartModule } from 'primeng/chart';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport { DatePipe, HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport {MenubarModule} from 'primeng/menubar';\r\nimport {MenuItem} from 'primeng/api';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport {StepsModule} from 'primeng/steps';\r\n\r\nFullCalendarModule.registerPlugins([ // register FullCalendar plugins\r\n  dayGridPlugin,\r\n  interactionPlugin\r\n]);\r\n\r\n//import { AngularFontAwesomeModule } from 'angular-font-awesome';\r\n\r\n\r\n\r\n//import { AngularFontAwesomeModule } from 'angular-font-awesome';\r\n\r\n//import { AngularFontAwesomeModule } from 'angular-font-awesome';\r\n\r\nimport { ForgetPasswordComponent } from './Components/forget-password/forget-password.component';\r\nimport { ResetPasswordComponent } from './Components/reset-password/reset-password.component';\r\nimport { ContractsListComponent } from './Components/Contract/contracts-list/contracts-list.component';\r\nimport { HealthUnitsListComponent } from './Components/HealthCareUnits/health-units-list/health-units-list.component';\r\nimport { NewhealthUnitComponent } from './Components/HealthCareUnits/newhealth-unit/newhealth-unit.component';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { DashboardComponent } from './Components/dashboard/dashboard.component';\r\nimport { ECRIComponent } from './Components/ecri-Code/ecri/ecri.component';\r\nimport { ECRIListComponent } from './Components/ecri-Code/ecri-list/ecri-list.component';\r\nimport { OrganizationListComponent } from './Components/Organization/organization-list/organization-list.component';\r\nimport { AddOrganizationComponent } from './Components/Organization/add-organization/add-organization.component';\r\nimport { SubOrganizationListComponent } from './Components/SubOrganization/sub-organization-list/sub-organization-list.component';\r\nimport { NewSubOrganizationComponent } from './Components/SubOrganization/new-sub-organization/new-sub-organization.component';\r\nimport { EquipmentDetailsComponent } from './Components/equipment/equipment-details/equipment-details.component';\r\n// import { PdFCreateComponent } from './Components/pd-fcreate/pd-fcreate.component';\r\nimport { PdFCreateComponent } from './Components/pd-fcreate/pd-fcreate.component';\r\nimport { EquipmentDetailsAdminComponent } from './Components/equipment/equipment-details-admin/equipment-details-admin.component';\r\n// import { PDFExportModule } from '@progress/kendo-angular-pdf-export';\r\n//import { PDFExportModule } from '@progress/kendo-angular-pdf-export';\r\nimport { SelectItem, PrimeNGConfig } from \"primeng/api\";\r\nimport { InventoryListComponent } from './Components/Inventory/inventory-list/inventory-list.component';\r\nimport { EquipmentRecallComponent } from './Components/equipment/equipment-recall/equipment-recall.component';\r\n\r\nimport { ContractRequestComponent } from './Components/ContractRequest/Add-request/contract-request/contract-request.component';\r\nimport {PickListModule} from 'primeng/picklist';\r\n\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { InformHospitalComponent } from './Components/InformHospital/inform-hospital/inform-hospital.component';\r\nimport {BadgeModule} from 'primeng/badge';\r\n// import {NgxPaginationModule} from 'ngx-pagination';\r\nimport {PaginatorModule} from 'primeng/paginator';\r\nimport { RequestListComponent } from './Components/ContractRequest/request-list/request-list.component';\r\nimport { MapComponent } from './Components/Map/map/map.component';\r\nimport { Storage } from '@ionic/storage-angular';\r\n// import { JwPaginationComponent } from 'jw-angular-pagination';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    FooterComponent,\r\n    HomeComponent,\r\n    EquipmentListComponent,\r\n    EquipmentsListComponent,\r\n    NewEquipmentComponent,\r\n    SideBarComponent,\r\n    ServiceRequestListComponent,\r\n    ServiceRequestAddComponent,\r\n    QrGeneratorComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    TechnicianListComponent,\r\n    EmployeesListComponent,\r\n    NewEmployeeComponent,\r\n    UserListComponent,\r\n    NewUserComponent,\r\n    WorkOrderListComponent,\r\n    ProfileComponent,\r\n    SettingsComponent,\r\n    EquipmentCategoriesComponent,\r\n    NewCategoryComponent,\r\n    NewSubCategoryComponent,\r\n    SubCategoriesComponent,\r\n    NewOriginComponent,\r\n    OriginsListComponent,\r\n    ManufacturerListComponent,\r\n    NewManufacturerComponent,\r\n    NewPriorityComponent,\r\n    PrioritiesListComponent,\r\n    DepartmentsListComponent,\r\n    NewDepartmentComponent,\r\n    NewStatusComponent,\r\n    StatusesListComponent,\r\n    SuppliersListComponent,\r\n    NewSupplierComponent,\r\n    ModesListComponent,\r\n    NewModeComponent,\r\n    NewMasterEquipmentComponent,\r\n    MasterEquipmentListComponent,\r\n    AddWorkOrderComponent,\r\n    AddWorkOrderWithoutRequestComponent,\r\n    SlaComponent,\r\n    EquipmentMainteneceComponent,\r\n    ForgetPasswordComponent,\r\n    ResetPasswordComponent,\r\n    ContractsListComponent,\r\n    HealthUnitsListComponent,\r\n    NewhealthUnitComponent,\r\n    DashboardComponent,\r\n    ECRIComponent,\r\n    ECRIListComponent,\r\n    OrganizationListComponent,\r\n    AddOrganizationComponent,\r\n    SubOrganizationListComponent,\r\n    NewSubOrganizationComponent,\r\n    EquipmentDetailsComponent,\r\n    // PdFCreateComponent,\r\n    PdFCreateComponent,\r\n    EquipmentDetailsAdminComponent,\r\n    InventoryListComponent,\r\n    EquipmentRecallComponent,\r\n    // JwPaginationComponent,\r\n    ContractRequestComponent,\r\n      InformHospitalComponent,\r\n      RequestListComponent,\r\n      MapComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    AccordionModule,\r\n    CardModule,\r\n    ToolbarModule,\r\n    NgbModule,\r\n    CarouselModule,\r\n    CalendarModule,\r\n    ButtonModule,\r\n    TableModule,\r\n    DialogModule,\r\n    BrowserAnimationsModule,\r\n    ConfirmDialogModule,\r\n    MatDatepickerModule,\r\n    FileUploadModule,\r\n    NgxQRCodeModule,\r\n    OverlayPanelModule,\r\n    TabViewModule,\r\n    MultiSelectModule,\r\n    PanelMenuModule,\r\n    DynamicDialogModule,\r\n    MatIconModule,\r\n\r\n    CaptchaModule,\r\n    ToastModule,\r\n    FullCalendarModule,\r\n    SidebarModule,\r\n    SlideMenuModule,\r\n    TooltipModule,\r\n    ChartModule,\r\n\r\n    MessagesModule,\r\n    MessageModule,\r\n    TieredMenuModule,\r\n    MatMenuModule,\r\n    MenubarModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatInputModule,\r\n    DropdownModule,\r\n    MatTreeModule,\r\n    CheckboxModule,\r\n    PickListModule,\r\n    StepsModule,\r\n    NgMultiSelectDropDownModule.forRoot(),\r\n    BadgeModule,\r\n    // NgxPaginationModule,\r\n    PaginatorModule,\r\n  //  AngularFontAwesomeModule,\r\n\r\n    //  AngularFontAwesomeModule,\r\n    //  AngularFontAwesomeModule,\r\n\r\n    //  AngularFontAwesomeModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  providers: [MessageService,\r\n    ConfirmationService,\r\n    AuthGuard,\r\n    DialogService,\r\n    DatePipe,\r\n    Storage,\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy }],\r\n  bootstrap: [AppComponent]\r\n\r\n\r\n  // providers: [{provide : LocationStrategy , useClass: HashLocationStrategy}]\r\n})\r\nexport class AppModule {\r\n  model: NgbDateStruct;\r\n}\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport '@angular/compiler';\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 41993;\nmodule.exports = webpackEmptyAsyncContext;","var map = {\n\t\"./af\": 98448,\n\t\"./af.js\": 98448,\n\t\"./ar\": 95373,\n\t\"./ar-dz\": 7100,\n\t\"./ar-dz.js\": 7100,\n\t\"./ar-kw\": 82014,\n\t\"./ar-kw.js\": 82014,\n\t\"./ar-ly\": 96969,\n\t\"./ar-ly.js\": 96969,\n\t\"./ar-ma\": 47738,\n\t\"./ar-ma.js\": 47738,\n\t\"./ar-sa\": 71632,\n\t\"./ar-sa.js\": 71632,\n\t\"./ar-tn\": 25432,\n\t\"./ar-tn.js\": 25432,\n\t\"./ar.js\": 95373,\n\t\"./az\": 67891,\n\t\"./az.js\": 67891,\n\t\"./be\": 58917,\n\t\"./be.js\": 58917,\n\t\"./bg\": 50444,\n\t\"./bg.js\": 50444,\n\t\"./bm\": 74427,\n\t\"./bm.js\": 74427,\n\t\"./bn\": 16281,\n\t\"./bn-bd\": 95127,\n\t\"./bn-bd.js\": 95127,\n\t\"./bn.js\": 16281,\n\t\"./bo\": 50122,\n\t\"./bo.js\": 50122,\n\t\"./br\": 38587,\n\t\"./br.js\": 38587,\n\t\"./bs\": 33524,\n\t\"./bs.js\": 33524,\n\t\"./ca\": 48125,\n\t\"./ca.js\": 48125,\n\t\"./cs\": 58407,\n\t\"./cs.js\": 58407,\n\t\"./cv\": 21765,\n\t\"./cv.js\": 21765,\n\t\"./cy\": 71906,\n\t\"./cy.js\": 71906,\n\t\"./da\": 32513,\n\t\"./da.js\": 32513,\n\t\"./de\": 96388,\n\t\"./de-at\": 51627,\n\t\"./de-at.js\": 51627,\n\t\"./de-ch\": 55805,\n\t\"./de-ch.js\": 55805,\n\t\"./de.js\": 96388,\n\t\"./dv\": 94070,\n\t\"./dv.js\": 94070,\n\t\"./el\": 21616,\n\t\"./el.js\": 21616,\n\t\"./en-au\": 78905,\n\t\"./en-au.js\": 78905,\n\t\"./en-ca\": 21050,\n\t\"./en-ca.js\": 21050,\n\t\"./en-gb\": 77342,\n\t\"./en-gb.js\": 77342,\n\t\"./en-ie\": 19495,\n\t\"./en-ie.js\": 19495,\n\t\"./en-il\": 12173,\n\t\"./en-il.js\": 12173,\n\t\"./en-in\": 91332,\n\t\"./en-in.js\": 91332,\n\t\"./en-nz\": 55687,\n\t\"./en-nz.js\": 55687,\n\t\"./en-sg\": 20842,\n\t\"./en-sg.js\": 20842,\n\t\"./eo\": 65719,\n\t\"./eo.js\": 65719,\n\t\"./es\": 43689,\n\t\"./es-do\": 12055,\n\t\"./es-do.js\": 12055,\n\t\"./es-mx\": 91403,\n\t\"./es-mx.js\": 91403,\n\t\"./es-us\": 6193,\n\t\"./es-us.js\": 6193,\n\t\"./es.js\": 43689,\n\t\"./et\": 29340,\n\t\"./et.js\": 29340,\n\t\"./eu\": 12506,\n\t\"./eu.js\": 12506,\n\t\"./fa\": 43251,\n\t\"./fa.js\": 43251,\n\t\"./fi\": 74395,\n\t\"./fi.js\": 74395,\n\t\"./fil\": 73526,\n\t\"./fil.js\": 73526,\n\t\"./fo\": 47787,\n\t\"./fo.js\": 47787,\n\t\"./fr\": 57917,\n\t\"./fr-ca\": 52101,\n\t\"./fr-ca.js\": 52101,\n\t\"./fr-ch\": 62801,\n\t\"./fr-ch.js\": 62801,\n\t\"./fr.js\": 57917,\n\t\"./fy\": 47655,\n\t\"./fy.js\": 47655,\n\t\"./ga\": 38977,\n\t\"./ga.js\": 38977,\n\t\"./gd\": 38690,\n\t\"./gd.js\": 38690,\n\t\"./gl\": 72317,\n\t\"./gl.js\": 72317,\n\t\"./gom-deva\": 11907,\n\t\"./gom-deva.js\": 11907,\n\t\"./gom-latn\": 9705,\n\t\"./gom-latn.js\": 9705,\n\t\"./gu\": 12756,\n\t\"./gu.js\": 12756,\n\t\"./he\": 60522,\n\t\"./he.js\": 60522,\n\t\"./hi\": 76743,\n\t\"./hi.js\": 76743,\n\t\"./hr\": 69080,\n\t\"./hr.js\": 69080,\n\t\"./hu\": 55890,\n\t\"./hu.js\": 55890,\n\t\"./hy-am\": 47330,\n\t\"./hy-am.js\": 47330,\n\t\"./id\": 69879,\n\t\"./id.js\": 69879,\n\t\"./is\": 31432,\n\t\"./is.js\": 31432,\n\t\"./it\": 89636,\n\t\"./it-ch\": 10322,\n\t\"./it-ch.js\": 10322,\n\t\"./it.js\": 89636,\n\t\"./ja\": 43289,\n\t\"./ja.js\": 43289,\n\t\"./jv\": 16190,\n\t\"./jv.js\": 16190,\n\t\"./ka\": 87099,\n\t\"./ka.js\": 87099,\n\t\"./kk\": 23910,\n\t\"./kk.js\": 23910,\n\t\"./km\": 7479,\n\t\"./km.js\": 7479,\n\t\"./kn\": 34892,\n\t\"./kn.js\": 34892,\n\t\"./ko\": 98054,\n\t\"./ko.js\": 98054,\n\t\"./ku\": 81358,\n\t\"./ku.js\": 81358,\n\t\"./ky\": 31958,\n\t\"./ky.js\": 31958,\n\t\"./lb\": 12102,\n\t\"./lb.js\": 12102,\n\t\"./lo\": 20587,\n\t\"./lo.js\": 20587,\n\t\"./lt\": 37044,\n\t\"./lt.js\": 37044,\n\t\"./lv\": 81108,\n\t\"./lv.js\": 81108,\n\t\"./me\": 12259,\n\t\"./me.js\": 12259,\n\t\"./mi\": 83495,\n\t\"./mi.js\": 83495,\n\t\"./mk\": 75103,\n\t\"./mk.js\": 75103,\n\t\"./ml\": 62600,\n\t\"./ml.js\": 62600,\n\t\"./mn\": 79413,\n\t\"./mn.js\": 79413,\n\t\"./mr\": 97979,\n\t\"./mr.js\": 97979,\n\t\"./ms\": 95292,\n\t\"./ms-my\": 50653,\n\t\"./ms-my.js\": 50653,\n\t\"./ms.js\": 95292,\n\t\"./mt\": 22893,\n\t\"./mt.js\": 22893,\n\t\"./my\": 39847,\n\t\"./my.js\": 39847,\n\t\"./nb\": 74909,\n\t\"./nb.js\": 74909,\n\t\"./ne\": 87162,\n\t\"./ne.js\": 87162,\n\t\"./nl\": 84148,\n\t\"./nl-be\": 91976,\n\t\"./nl-be.js\": 91976,\n\t\"./nl.js\": 84148,\n\t\"./nn\": 81613,\n\t\"./nn.js\": 81613,\n\t\"./oc-lnc\": 54674,\n\t\"./oc-lnc.js\": 54674,\n\t\"./pa-in\": 69409,\n\t\"./pa-in.js\": 69409,\n\t\"./pl\": 30634,\n\t\"./pl.js\": 30634,\n\t\"./pt\": 23195,\n\t\"./pt-br\": 60011,\n\t\"./pt-br.js\": 60011,\n\t\"./pt.js\": 23195,\n\t\"./ro\": 76265,\n\t\"./ro.js\": 76265,\n\t\"./ru\": 87466,\n\t\"./ru.js\": 87466,\n\t\"./sd\": 3618,\n\t\"./sd.js\": 3618,\n\t\"./se\": 34490,\n\t\"./se.js\": 34490,\n\t\"./si\": 45709,\n\t\"./si.js\": 45709,\n\t\"./sk\": 76969,\n\t\"./sk.js\": 76969,\n\t\"./sl\": 35628,\n\t\"./sl.js\": 35628,\n\t\"./sq\": 3695,\n\t\"./sq.js\": 3695,\n\t\"./sr\": 34832,\n\t\"./sr-cyrl\": 44656,\n\t\"./sr-cyrl.js\": 44656,\n\t\"./sr.js\": 34832,\n\t\"./ss\": 46702,\n\t\"./ss.js\": 46702,\n\t\"./sv\": 16079,\n\t\"./sv.js\": 16079,\n\t\"./sw\": 81313,\n\t\"./sw.js\": 81313,\n\t\"./ta\": 69046,\n\t\"./ta.js\": 69046,\n\t\"./te\": 93309,\n\t\"./te.js\": 93309,\n\t\"./tet\": 73034,\n\t\"./tet.js\": 73034,\n\t\"./tg\": 18027,\n\t\"./tg.js\": 18027,\n\t\"./th\": 95716,\n\t\"./th.js\": 95716,\n\t\"./tk\": 5499,\n\t\"./tk.js\": 5499,\n\t\"./tl-ph\": 54196,\n\t\"./tl-ph.js\": 54196,\n\t\"./tlh\": 61705,\n\t\"./tlh.js\": 61705,\n\t\"./tr\": 88928,\n\t\"./tr.js\": 88928,\n\t\"./tzl\": 62529,\n\t\"./tzl.js\": 62529,\n\t\"./tzm\": 68261,\n\t\"./tzm-latn\": 68040,\n\t\"./tzm-latn.js\": 68040,\n\t\"./tzm.js\": 68261,\n\t\"./ug-cn\": 66485,\n\t\"./ug-cn.js\": 66485,\n\t\"./uk\": 89931,\n\t\"./uk.js\": 89931,\n\t\"./ur\": 50368,\n\t\"./ur.js\": 50368,\n\t\"./uz\": 44304,\n\t\"./uz-latn\": 69534,\n\t\"./uz-latn.js\": 69534,\n\t\"./uz.js\": 44304,\n\t\"./vi\": 79437,\n\t\"./vi.js\": 79437,\n\t\"./x-pseudo\": 63445,\n\t\"./x-pseudo.js\": 63445,\n\t\"./yo\": 62186,\n\t\"./yo.js\": 62186,\n\t\"./zh-cn\": 52435,\n\t\"./zh-cn.js\": 52435,\n\t\"./zh-hk\": 5539,\n\t\"./zh-hk.js\": 5539,\n\t\"./zh-mo\": 53273,\n\t\"./zh-mo.js\": 53273,\n\t\"./zh-tw\": 29758,\n\t\"./zh-tw.js\": 29758\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"sourceRoot":"webpack:///","file":"main.3c1363a69cfe6b187be4.js"}