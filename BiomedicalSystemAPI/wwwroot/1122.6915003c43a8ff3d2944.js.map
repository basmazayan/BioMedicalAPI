{"version":3,"mappings":"yrBAI6wB,QAAQA,uBAAuBC,GAAG,MAAMC,EAAEC,aAAWF,EAAEG,YAAYC,GAAEC,QAAEJ,EAAED,EAAEM,MAAM,OAAOC,QAAQC,SAAQC,QAAEL,IAAIA,EAAEM,UAAgBC,OAAOF,GAAE,0BAAC,MAAMT,QAAQC,QAAEQ,EAAEG,KAAKH,EAAEI,SAAS,OAAOb,GAAGA,EAAEU,UAA/C,GAAwDI,UAAUd,GAAGA,EAAEG,WAAWD,aAAWF,EAAEG,YAAYH,EAAEe,OAAOf,EAAEe,OAAOC,aAAWhB,EAAEe,QAAQ,KAAK,MAAMd,EAAEgB,KAAKC,WAAWJ,UAAUd,GAAG,OAAOO,QAAQC,SAAQC,QAAER,IAAIA,EAAES,UAAgBS,iBAAiBV,GAAE,qCAAC,IAAIT,EAAEA,EAAKkB,WAAWE,aAAWX,EAAEY,gBAAgBZ,EAAEa,YAAY,mBAAmB,OAAOtB,EAAEA,EAAKkB,iBAAY,EAAOlB,EAAEuB,aAAajB,QAAQN,EAAKkB,WAAWK,aAAaD,WAAWb,EAAEa,aAAvL,GAAmME,QAAQxB,GAAG,MAAMC,EAAEgB,KAAKC,WAAWO,cAAcvB,aAAWF,EAAE0B,eAAe1B,EAAE2B,eAAe,OAAOpB,QAAQC,SAAQC,QAAER,IAAIA,EAAES,UAAUkB,6BAA6BnB,GAAG,MAAMT,GAAEI,QAAEF,aAAWO,EAAEiB,gBAAgB,OAAOnB,QAAQC,QAAQR,GAAG6B,MAAMpB,GAAG,MAAMT,KAAE8B,MAAE5B,aAAWO,EAAEiB,eAAejB,EAAEsB,SAAStB,EAAEuB,qBAAqB,OAAOhC,GAAGA,EAAEiC,QAAS,CAACxB,EAAEP,KAAKF,EAAEkC,IAAIhC,EAAE,MAAMO,OAAE,EAAOA,EAAEC,YAAaH,QAAQC,QAAQR,GAASmC,mBAAmB1B,GAAE,0BAAC,MAAMT,EAAES,EAAE2B,eAAeC,IAAK5B,GAAGA,EAAE,IAAIP,IAAEO,GAAG,MAAOR,GAAEqC,QAAEtC,EAAES,EAAE8B,cAAc,CAACC,YAAY/B,EAAE+B,YAAYC,cAAchC,EAAEgC,gBAAgB,IAAIhC,EAAEiC,MAAM,OAAOzC,GAAGA,EAAES,SAAS,MAAMN,KAAEuC,MAAE1C,EAAEQ,EAAEmC,cAAcnC,EAAEiC,MAAMjC,EAAEoC,cAAcpC,EAAEqC,eAAe,OAAO1C,GAAGA,EAAEM,UAAvP,GAAsQqC,sBAAsBtC,EAAET,GAAE,0BAAC,MAAME,EAAE,CAACU,KAAK,IAAIoC,aAAavC,EAAEwC,SAASC,QAAQC,MAAM1C,EAAEwC,SAASE,MAAMC,OAAO3C,EAAEwC,SAASG,SAASC,WAAWpD,EAAEqD,UAAUlD,SAASmD,QAAE9C,EAAE+C,iBAAiBtD,EAAEF,EAAEyD,QAAQ,MAAM,CAACC,OAAO,CAACC,aAAa1D,EAAEiD,OAAOU,YAAYxD,EAAE8C,QAAQW,aAAa,CAAC5D,EAAEiD,OAAO9C,EAAE8C,UAA1P,GAAyQY,wBAAwBrD,GAAE,0BAAC,MAAMP,EAAEc,aAAWP,EAAEsD,iBAAiB9D,EAAEe,aAAWP,EAAEuD,iBAAiB,IAAI5D,EAAE,KAAKK,EAAEwD,4BAA4B7D,EAAE,IAAIJ,IAAE,CAACkE,MAAMzD,EAAEwD,8BAA6BE,QAAEjE,EAAEkE,iBAAiBnE,EAAEmE,iBAAiBhE,WAAUiE,WAAI,MAAMvC,EAAErB,EAAE6D,iBAAgBC,OAAE9D,EAAE6D,iBAAiB,KAAK,OAAOE,QAAEC,OAAIhE,GAAJ,CAAMsD,gBAAgB7D,EAAE8D,gBAAgB/D,EAAEyE,oBAAoBtE,EAAEkE,gBAAgBxC,MAAjW","names":["convertVectorFieldData","e","o","t","pixelBlock","s","c","type","Promise","resolve","r","toJSON","decode","data","options","symbolize","extent","S","this","symbolizer","updateSymbolizer","u","symbolizerJSON","histograms","rendererJSON","stretch","simpleStretch","srcPixelBlock","stretchParams","estimateStatisticsHistograms","split","i","tileSize","maximumPyramidLevel","forEach","set","mosaicAndTransform","srcPixelBlocks","map","a","srcMosaicSize","blockWidths","alignmentInfo","coefs","n","destDimension","sampleSpacing","interpolation","createStreamlinesMesh","Float32Array","flowData","buffer","width","height","vertexData","indexData","d","rendererSettings","signal","result","vertexBuffer","indexBuffer","transferList","getProjectionOffsetGrid","projectedExtent","srcBufferExtent","datumTransformationStemps","steps","m","spatialReference","l","rasterTransform","p","f","P","datumTransformation"],"sources":["./node_modules/@arcgis/core/layers/support/RasterWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import{isSome as r}from\"../../core/maybe.js\";import e from\"../../geometry/support/GeographicTransformation.js\";import t from\"./PixelBlock.js\";import{decode as o}from\"./rasterFormats/RasterCodec.js\";import{estimateStatisticsHistograms as s,split as i,mosaic as a,approximateTransform as n}from\"./rasterFunctions/pixelUtils.js\";import{requirePE as m,load as l,getProjectionOffsetGrid as f}from\"./rasterFunctions/rasterProjectionHelper.js\";import{convertVectorFieldData as c}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as p}from\"./rasterTransforms/utils.js\";import u from\"../../renderers/support/RasterSymbolizer.js\";import{createStreamlinesMesh as d}from\"../../views/2d/engine/flow/dataUtils.js\";import S from\"../../geometry/Extent.js\";class h{convertVectorFieldData(e){const o=t.fromJSON(e.pixelBlock),s=c(o,e.type);return Promise.resolve(r(s)&&s.toJSON())}async decode(r){const e=await o(r.data,r.options);return e&&e.toJSON()}symbolize(e){e.pixelBlock=t.fromJSON(e.pixelBlock),e.extent=e.extent?S.fromJSON(e.extent):null;const o=this.symbolizer.symbolize(e);return Promise.resolve(r(o)&&o.toJSON())}async updateSymbolizer(r){var e;this.symbolizer=u.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===(null==(e=this.symbolizer)?void 0:e.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=r.histograms)}stretch(e){const o=this.symbolizer.simpleStretch(t.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(r(o)&&o.toJSON())}estimateStatisticsHistograms(r){const e=s(t.fromJSON(r.srcPixelBlock));return Promise.resolve(e)}split(r){const e=i(t.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return e&&e.forEach(((r,t)=>{e.set(t,null==r?void 0:r.toJSON())})),Promise.resolve(e)}async mosaicAndTransform(r){const e=r.srcPixelBlocks.map((r=>r?new t(r):null)),o=a(e,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo});if(!r.coefs)return o&&o.toJSON();const s=n(o,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation);return s&&s.toJSON()}async createStreamlinesMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),width:r.flowData.width,height:r.flowData.height},{vertexData:o,indexData:s}=await d(r.rendererSettings,t,e.signal);return{result:{vertexBuffer:o.buffer,indexBuffer:s.buffer},transferList:[o.buffer,s.buffer]}}async getProjectionOffsetGrid(r){const t=S.fromJSON(r.projectedExtent),o=S.fromJSON(r.srcBufferExtent);let s=null;r.datumTransformationStemps&&(s=new e({steps:r.datumTransformationStemps})),m(t.spatialReference,o.spatialReference,s)&&await l();const i=r.rasterTransform?p(r.rasterTransform):null;return f({...r,projectedExtent:t,srcBufferExtent:o,datumTransformation:s,rasterTransform:i})}}export{h as default};\n"],"sourceRoot":"webpack:///","file":"1122.6915003c43a8ff3d2944.js"}