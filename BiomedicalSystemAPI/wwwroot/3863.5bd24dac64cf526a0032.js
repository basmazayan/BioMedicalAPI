"use strict";(self.webpackChunkbio_medical=self.webpackChunkbio_medical||[]).push([[3863],{83863:(y,l,s)=>{s.r(l),s.d(l,{default:()=>O});var e=s(79076),E=s(61414),d=s(32810),i=s(54391),t=s(94911),u=(s(45072),s(30627),s(55865),s(96410)),c=s(2045),p=s(32617);let r=class extends((0,p.I)((0,d.R)(c.Z))){constructor(_){super(_),this.resourceInfo=null,this.type="unsupported"}initialize(){this.addResolvingPromise(new Promise((_,n)=>{(0,i.Os)(()=>{const o=this.resourceInfo&&(this.resourceInfo.layerType||this.resourceInfo.type);let a="Unsupported layer type";o&&(a+=" "+o),n(new E.Z("layer:unsupported-layer-type",a,{layerType:o}))})}))}read(_,n){const o={resourceInfo:_};null!=_.id&&(o.id=_.id),null!=_.title&&(o.title=_.title),super.read(o,n)}write(_){return Object.assign(_||{},this.resourceInfo,{id:this.id})}};(0,e._)([(0,t.Cb)({readOnly:!0})],r.prototype,"resourceInfo",void 0),(0,e._)([(0,t.Cb)({type:["show","hide"]})],r.prototype,"listMode",void 0),(0,e._)([(0,t.Cb)({json:{read:!1},readOnly:!0,value:"unsupported"})],r.prototype,"type",void 0),r=(0,e._)([(0,u.j)("esri.layers.UnsupportedLayer")],r);const O=r}}]);
//# sourceMappingURL=3863.5bd24dac64cf526a0032.js.map