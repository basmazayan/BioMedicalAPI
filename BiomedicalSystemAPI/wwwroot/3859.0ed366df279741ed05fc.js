"use strict";(self.webpackChunkbio_medical=self.webpackChunkbio_medical||[]).push([[3859],{73859:(p,c,e)=>{e.r(c),e.d(c,{getGeometryServiceURL:()=>y,projectGeometry:()=>v});var m=e(49996),g=e(76925),s=e(61414),E=e(70658),d=e(74769),f=e(14527);function y(){return a.apply(this,arguments)}function a(){return(a=(0,m.Z)(function*(r=null,i){var o,n;if(g.Z.geometryServiceUrl)return g.Z.geometryServiceUrl;if(!r)throw new s.Z("internal:geometry-service-url-not-configured");let l;l="portal"in r?r.portal||E.Z.getDefault():r,yield l.load({signal:i});const t=null==(o=l.helperServices)||null==(n=o.geometry)?void 0:n.url;if(!t)throw new s.Z("internal:geometry-service-url-not-configured");return t})).apply(this,arguments)}function v(r,i){return u.apply(this,arguments)}function u(){return(u=(0,m.Z)(function*(r,i,o=null,n){const l=yield y(o,n),t=new f.Z;t.geometries=[r],t.outSpatialReference=i;const _=yield(0,d.i)(l,t,{signal:n});if(_&&Array.isArray(_)&&1===_.length)return _[0];throw new s.Z("internal:geometry-service-projection-failed")})).apply(this,arguments)}}}]);
//# sourceMappingURL=3859.0ed366df279741ed05fc.js.map